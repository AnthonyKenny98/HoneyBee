

================================================================
== Vivado HLS Report for 'honeybee'
================================================================
* Date:           Thu Mar 19 15:54:24 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        HoneyBee-B
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      157|      157| 1.570 us | 1.570 us |  157|  157|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                       |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- honeybee_upper_loop  |      156|      156|        39|          -|          -|     4|    no    |
        +-----------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p1_x), !map !34"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p1_y), !map !40"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p1_z), !map !44"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p2_x), !map !48"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p2_y), !map !52"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p2_z), !map !56"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 0) nounwind, !map !60"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @honeybee_str) nounwind"   --->   Operation 19 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%edge_p2_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_z)" [src/honeybee.c:73]   --->   Operation 20 'read' 'edge_p2_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%edge_p2_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_y)" [src/honeybee.c:73]   --->   Operation 21 'read' 'edge_p2_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%edge_p2_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_x)" [src/honeybee.c:73]   --->   Operation 22 'read' 'edge_p2_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%edge_p1_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_z)" [src/honeybee.c:73]   --->   Operation 23 'read' 'edge_p1_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%edge_p1_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_y)" [src/honeybee.c:73]   --->   Operation 24 'read' 'edge_p1_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%edge_p1_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_x)" [src/honeybee.c:73]   --->   Operation 25 'read' 'edge_p1_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.76ns)   --->   "br label %1" [src/honeybee.c:73]   --->   Operation 26 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.41>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%k_0 = phi i3 [ 0, %0 ], [ %k, %_ifconv ]"   --->   Operation 27 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%b_0 = phi i7 [ 0, %0 ], [ %b, %_ifconv ]"   --->   Operation 28 'phi' 'b_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%collisions_0 = phi i64 [ 0, %0 ], [ %or_ln79_15, %_ifconv ]" [src/honeybee.c:79]   --->   Operation 29 'phi' 'collisions_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i3 %k_0 to i32" [src/honeybee.c:73]   --->   Operation 30 'zext' 'zext_ln73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.13ns)   --->   "%icmp_ln73 = icmp eq i3 %k_0, -4" [src/honeybee.c:73]   --->   Operation 31 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 32 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.65ns)   --->   "%k = add i3 %k_0, 1" [src/honeybee.c:73]   --->   Operation 33 'add' 'k' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln73, label %2, label %_ifconv" [src/honeybee.c:73]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [6/6] (6.41ns)   --->   "%grid_z = sitofp i32 %zext_ln73 to float" [src/honeybee.c:78]   --->   Operation 35 'sitofp' 'grid_z' <Predicate = (!icmp_ln73)> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "ret i64 %collisions_0" [src/honeybee.c:86]   --->   Operation 36 'ret' <Predicate = (icmp_ln73)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.41>
ST_3 : Operation 37 [5/6] (6.41ns)   --->   "%grid_z = sitofp i32 %zext_ln73 to float" [src/honeybee.c:78]   --->   Operation 37 'sitofp' 'grid_z' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.41>
ST_4 : Operation 38 [4/6] (6.41ns)   --->   "%grid_z = sitofp i32 %zext_ln73 to float" [src/honeybee.c:78]   --->   Operation 38 'sitofp' 'grid_z' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.41>
ST_5 : Operation 39 [3/6] (6.41ns)   --->   "%grid_z = sitofp i32 %zext_ln73 to float" [src/honeybee.c:78]   --->   Operation 39 'sitofp' 'grid_z' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.41>
ST_6 : Operation 40 [2/6] (6.41ns)   --->   "%grid_z = sitofp i32 %zext_ln73 to float" [src/honeybee.c:78]   --->   Operation 40 'sitofp' 'grid_z' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.41>
ST_7 : Operation 41 [1/6] (6.41ns)   --->   "%grid_z = sitofp i32 %zext_ln73 to float" [src/honeybee.c:78]   --->   Operation 41 'sitofp' 'grid_z' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 42 [2/2] (8.75ns)   --->   "%tmp_4 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 42 'call' 'tmp_4' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 43 [2/2] (8.75ns)   --->   "%tmp_4_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 43 'call' 'tmp_4_0_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 44 [2/2] (8.75ns)   --->   "%tmp_4_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 44 'call' 'tmp_4_0_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 45 [2/2] (8.75ns)   --->   "%tmp_4_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 45 'call' 'tmp_4_0_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 46 [2/2] (8.75ns)   --->   "%tmp_4_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 46 'call' 'tmp_4_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 47 [2/2] (8.75ns)   --->   "%tmp_4_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 47 'call' 'tmp_4_1_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 48 [2/2] (8.75ns)   --->   "%tmp_4_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 48 'call' 'tmp_4_1_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 49 [2/2] (8.75ns)   --->   "%tmp_4_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 49 'call' 'tmp_4_1_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 50 [2/2] (8.75ns)   --->   "%tmp_4_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 50 'call' 'tmp_4_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 51 [2/2] (8.75ns)   --->   "%tmp_4_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 51 'call' 'tmp_4_2_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 52 [2/2] (8.75ns)   --->   "%tmp_4_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 52 'call' 'tmp_4_2_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 53 [2/2] (8.75ns)   --->   "%tmp_4_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 53 'call' 'tmp_4_2_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 54 [2/2] (8.75ns)   --->   "%tmp_4_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 54 'call' 'tmp_4_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 55 [2/2] (8.75ns)   --->   "%tmp_4_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 55 'call' 'tmp_4_3_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 56 [2/2] (8.75ns)   --->   "%tmp_4_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 56 'call' 'tmp_4_3_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 57 [2/2] (8.75ns)   --->   "%tmp_4_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 57 'call' 'tmp_4_3_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 6.40>
ST_9 : Operation 58 [1/2] (6.40ns)   --->   "%tmp_4 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 58 'call' 'tmp_4' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 59 [1/2] (6.40ns)   --->   "%tmp_4_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 59 'call' 'tmp_4_0_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 60 [1/2] (6.40ns)   --->   "%tmp_4_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 60 'call' 'tmp_4_0_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 61 [1/2] (6.40ns)   --->   "%tmp_4_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 61 'call' 'tmp_4_0_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 62 [1/2] (6.40ns)   --->   "%tmp_4_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 62 'call' 'tmp_4_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 63 [1/2] (6.40ns)   --->   "%tmp_4_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 63 'call' 'tmp_4_1_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 64 [1/2] (6.40ns)   --->   "%tmp_4_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 64 'call' 'tmp_4_1_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 65 [1/2] (6.40ns)   --->   "%tmp_4_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 65 'call' 'tmp_4_1_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 66 [1/2] (6.40ns)   --->   "%tmp_4_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 66 'call' 'tmp_4_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 67 [1/2] (6.40ns)   --->   "%tmp_4_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 67 'call' 'tmp_4_2_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 68 [1/2] (6.40ns)   --->   "%tmp_4_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 68 'call' 'tmp_4_2_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 69 [1/2] (6.40ns)   --->   "%tmp_4_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 69 'call' 'tmp_4_2_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 70 [1/2] (6.40ns)   --->   "%tmp_4_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 70 'call' 'tmp_4_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 71 [1/2] (6.40ns)   --->   "%tmp_4_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 71 'call' 'tmp_4_3_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 72 [1/2] (6.40ns)   --->   "%tmp_4_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 72 'call' 'tmp_4_3_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 73 [1/2] (6.40ns)   --->   "%tmp_4_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float %grid_z, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 73 'call' 'tmp_4_3_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 7.91>
ST_10 : Operation 74 [1/1] (1.87ns)   --->   "%b = add i7 16, %b_0" [src/honeybee.c:82]   --->   Operation 74 'add' 'b' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln73 = trunc i7 %b_0 to i6" [src/honeybee.c:73]   --->   Operation 75 'trunc' 'trunc_ln73' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%or_ln82 = or i6 %trunc_ln73, 4" [src/honeybee.c:82]   --->   Operation 76 'or' 'or_ln82' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i6 %or_ln82 to i7" [src/honeybee.c:82]   --->   Operation 77 'zext' 'zext_ln82' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%zext_ln73_1 = zext i7 %b_0 to i32" [src/honeybee.c:73]   --->   Operation 78 'zext' 'zext_ln73_1' <Predicate = (tmp_4)> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%shl_ln80 = shl i32 1, %zext_ln73_1" [src/honeybee.c:80]   --->   Operation 79 'shl' 'shl_ln80' <Predicate = (tmp_4)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%select_ln79 = select i1 %tmp_4, i32 %shl_ln80, i32 0" [src/honeybee.c:79]   --->   Operation 80 'select' 'select_ln79' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 81 [1/1] (0.00ns)   --->   "%or_ln82_1 = or i6 %trunc_ln73, 1" [src/honeybee.c:82]   --->   Operation 81 'or' 'or_ln82_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln82_2 = zext i6 %or_ln82_1 to i7" [src/honeybee.c:82]   --->   Operation 82 'zext' 'zext_ln82_2' <Predicate = (tmp_4_0_2)> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%zext_ln82_3 = zext i6 %or_ln82_1 to i32" [src/honeybee.c:82]   --->   Operation 83 'zext' 'zext_ln82_3' <Predicate = (tmp_4_0_1)> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%shl_ln80_1 = shl i32 1, %zext_ln82_3" [src/honeybee.c:80]   --->   Operation 84 'shl' 'shl_ln80_1' <Predicate = (tmp_4_0_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%select_ln79_1 = select i1 %tmp_4_0_1, i32 %shl_ln80_1, i32 0" [src/honeybee.c:79]   --->   Operation 85 'select' 'select_ln79_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 86 [1/1] (1.82ns)   --->   "%add_ln82 = add i7 1, %zext_ln82_2" [src/honeybee.c:82]   --->   Operation 86 'add' 'add_ln82' <Predicate = (tmp_4_0_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_1)   --->   "%zext_ln82_4 = zext i7 %add_ln82 to i32" [src/honeybee.c:82]   --->   Operation 87 'zext' 'zext_ln82_4' <Predicate = (tmp_4_0_2)> <Delay = 0.00>
ST_10 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_1)   --->   "%shl_ln80_2 = shl i32 1, %zext_ln82_4" [src/honeybee.c:80]   --->   Operation 88 'shl' 'shl_ln80_2' <Predicate = (tmp_4_0_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_1)   --->   "%select_ln79_2 = select i1 %tmp_4_0_2, i32 %shl_ln80_2, i32 0" [src/honeybee.c:79]   --->   Operation 89 'select' 'select_ln79_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_1)   --->   "%or_ln82_2 = or i6 %trunc_ln73, 3" [src/honeybee.c:82]   --->   Operation 90 'or' 'or_ln82_2' <Predicate = (tmp_4_0_3)> <Delay = 0.00>
ST_10 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_1)   --->   "%zext_ln82_5 = zext i6 %or_ln82_2 to i32" [src/honeybee.c:82]   --->   Operation 91 'zext' 'zext_ln82_5' <Predicate = (tmp_4_0_3)> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_1)   --->   "%shl_ln80_3 = shl i32 1, %zext_ln82_5" [src/honeybee.c:80]   --->   Operation 92 'shl' 'shl_ln80_3' <Predicate = (tmp_4_0_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_1)   --->   "%select_ln79_3 = select i1 %tmp_4_0_3, i32 %shl_ln80_3, i32 0" [src/honeybee.c:79]   --->   Operation 93 'select' 'select_ln79_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 94 [1/1] (1.82ns)   --->   "%add_ln82_1 = add i7 4, %zext_ln82" [src/honeybee.c:82]   --->   Operation 94 'add' 'add_ln82_1' <Predicate = (tmp_4_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%or_ln82_3 = or i6 %trunc_ln73, 5" [src/honeybee.c:82]   --->   Operation 95 'or' 'or_ln82_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln82_7 = zext i6 %or_ln82_3 to i7" [src/honeybee.c:82]   --->   Operation 96 'zext' 'zext_ln82_7' <Predicate = (tmp_4_1_2)> <Delay = 0.00>
ST_10 : Operation 97 [1/1] (1.82ns)   --->   "%add_ln82_2 = add i7 1, %zext_ln82_7" [src/honeybee.c:82]   --->   Operation 97 'add' 'add_ln82_2' <Predicate = (tmp_4_1_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_10)   --->   "%or_ln82_5 = or i6 %trunc_ln73, 12" [src/honeybee.c:82]   --->   Operation 98 'or' 'or_ln82_5' <Predicate = (tmp_4_3)> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_10)   --->   "%zext_ln82_11 = zext i6 %or_ln82_5 to i32" [src/honeybee.c:82]   --->   Operation 99 'zext' 'zext_ln82_11' <Predicate = (tmp_4_3)> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (1.82ns)   --->   "%add_ln82_3 = add i7 5, %zext_ln82" [src/honeybee.c:82]   --->   Operation 100 'add' 'add_ln82_3' <Predicate = (tmp_4_2_1)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_10)   --->   "%shl_ln80_12 = shl i32 1, %zext_ln82_11" [src/honeybee.c:80]   --->   Operation 101 'shl' 'shl_ln80_12' <Predicate = (tmp_4_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_10)   --->   "%select_ln79_12 = select i1 %tmp_4_3, i32 %shl_ln80_12, i32 0" [src/honeybee.c:79]   --->   Operation 102 'select' 'select_ln79_12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%or_ln82_6 = or i6 %trunc_ln73, 13" [src/honeybee.c:82]   --->   Operation 103 'or' 'or_ln82_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln82_15 = zext i6 %or_ln82_6 to i7" [src/honeybee.c:82]   --->   Operation 104 'zext' 'zext_ln82_15' <Predicate = (tmp_4_3_2)> <Delay = 0.00>
ST_10 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_10)   --->   "%zext_ln82_16 = zext i6 %or_ln82_6 to i32" [src/honeybee.c:82]   --->   Operation 105 'zext' 'zext_ln82_16' <Predicate = (tmp_4_3_1)> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_10)   --->   "%shl_ln80_13 = shl i32 1, %zext_ln82_16" [src/honeybee.c:80]   --->   Operation 106 'shl' 'shl_ln80_13' <Predicate = (tmp_4_3_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_10)   --->   "%select_ln79_13 = select i1 %tmp_4_3_1, i32 %shl_ln80_13, i32 0" [src/honeybee.c:79]   --->   Operation 107 'select' 'select_ln79_13' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 108 [1/1] (1.82ns)   --->   "%add_ln82_6 = add i7 1, %zext_ln82_15" [src/honeybee.c:82]   --->   Operation 108 'add' 'add_ln82_6' <Predicate = (tmp_4_3_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%zext_ln82_17 = zext i7 %add_ln82_6 to i32" [src/honeybee.c:82]   --->   Operation 109 'zext' 'zext_ln82_17' <Predicate = (tmp_4_3_2)> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%shl_ln80_14 = shl i32 1, %zext_ln82_17" [src/honeybee.c:80]   --->   Operation 110 'shl' 'shl_ln80_14' <Predicate = (tmp_4_3_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%select_ln79_14 = select i1 %tmp_4_3_2, i32 %shl_ln80_14, i32 0" [src/honeybee.c:79]   --->   Operation 111 'select' 'select_ln79_14' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%or_ln82_7 = or i6 %trunc_ln73, 15" [src/honeybee.c:82]   --->   Operation 112 'or' 'or_ln82_7' <Predicate = (tmp_4_3_3)> <Delay = 0.00>
ST_10 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%zext_ln82_18 = zext i6 %or_ln82_7 to i32" [src/honeybee.c:82]   --->   Operation 113 'zext' 'zext_ln82_18' <Predicate = (tmp_4_3_3)> <Delay = 0.00>
ST_10 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%shl_ln80_15 = shl i32 1, %zext_ln82_18" [src/honeybee.c:80]   --->   Operation 114 'shl' 'shl_ln80_15' <Predicate = (tmp_4_3_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%select_ln79_15 = select i1 %tmp_4_3_3, i32 %shl_ln80_15, i32 0" [src/honeybee.c:79]   --->   Operation 115 'select' 'select_ln79_15' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%or_ln79 = or i32 %select_ln79, %select_ln79_1" [src/honeybee.c:79]   --->   Operation 116 'or' 'or_ln79' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 117 [1/1] (3.04ns) (out node of the LUT)   --->   "%or_ln79_1 = or i32 %select_ln79_2, %select_ln79_3" [src/honeybee.c:79]   --->   Operation 117 'or' 'or_ln79_1' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 118 [1/1] (3.04ns) (out node of the LUT)   --->   "%or_ln79_2 = or i32 %or_ln79_1, %or_ln79" [src/honeybee.c:79]   --->   Operation 118 'or' 'or_ln79_2' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 119 [1/1] (2.94ns) (out node of the LUT)   --->   "%or_ln79_10 = or i32 %select_ln79_12, %select_ln79_13" [src/honeybee.c:79]   --->   Operation 119 'or' 'or_ln79_10' <Predicate = true> <Delay = 2.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_12)   --->   "%or_ln79_11 = or i32 %select_ln79_14, %select_ln79_15" [src/honeybee.c:79]   --->   Operation 120 'or' 'or_ln79_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 121 [1/1] (3.04ns) (out node of the LUT)   --->   "%or_ln79_12 = or i32 %or_ln79_11, %or_ln79_10" [src/honeybee.c:79]   --->   Operation 121 'or' 'or_ln79_12' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.08>
ST_11 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @p_str) nounwind" [src/honeybee.c:73]   --->   Operation 122 'specloopname' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%zext_ln82_1 = zext i6 %or_ln82 to i32" [src/honeybee.c:82]   --->   Operation 123 'zext' 'zext_ln82_1' <Predicate = (tmp_4_1)> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_7)   --->   "%zext_ln82_6 = zext i7 %add_ln82_1 to i32" [src/honeybee.c:82]   --->   Operation 124 'zext' 'zext_ln82_6' <Predicate = (tmp_4_2)> <Delay = 0.00>
ST_11 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%shl_ln80_4 = shl i32 1, %zext_ln82_1" [src/honeybee.c:80]   --->   Operation 125 'shl' 'shl_ln80_4' <Predicate = (tmp_4_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%select_ln79_4 = select i1 %tmp_4_1, i32 %shl_ln80_4, i32 0" [src/honeybee.c:79]   --->   Operation 126 'select' 'select_ln79_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%zext_ln82_8 = zext i6 %or_ln82_3 to i32" [src/honeybee.c:82]   --->   Operation 127 'zext' 'zext_ln82_8' <Predicate = (tmp_4_1_1)> <Delay = 0.00>
ST_11 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%shl_ln80_5 = shl i32 1, %zext_ln82_8" [src/honeybee.c:80]   --->   Operation 128 'shl' 'shl_ln80_5' <Predicate = (tmp_4_1_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%select_ln79_5 = select i1 %tmp_4_1_1, i32 %shl_ln80_5, i32 0" [src/honeybee.c:79]   --->   Operation 129 'select' 'select_ln79_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_4)   --->   "%zext_ln82_9 = zext i7 %add_ln82_2 to i32" [src/honeybee.c:82]   --->   Operation 130 'zext' 'zext_ln82_9' <Predicate = (tmp_4_1_2)> <Delay = 0.00>
ST_11 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_4)   --->   "%shl_ln80_6 = shl i32 1, %zext_ln82_9" [src/honeybee.c:80]   --->   Operation 131 'shl' 'shl_ln80_6' <Predicate = (tmp_4_1_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_4)   --->   "%select_ln79_6 = select i1 %tmp_4_1_2, i32 %shl_ln80_6, i32 0" [src/honeybee.c:79]   --->   Operation 132 'select' 'select_ln79_6' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_4)   --->   "%or_ln82_4 = or i6 %trunc_ln73, 7" [src/honeybee.c:82]   --->   Operation 133 'or' 'or_ln82_4' <Predicate = (tmp_4_1_3)> <Delay = 0.00>
ST_11 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_4)   --->   "%zext_ln82_10 = zext i6 %or_ln82_4 to i32" [src/honeybee.c:82]   --->   Operation 134 'zext' 'zext_ln82_10' <Predicate = (tmp_4_1_3)> <Delay = 0.00>
ST_11 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_4)   --->   "%shl_ln80_7 = shl i32 1, %zext_ln82_10" [src/honeybee.c:80]   --->   Operation 135 'shl' 'shl_ln80_7' <Predicate = (tmp_4_1_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_4)   --->   "%select_ln79_7 = select i1 %tmp_4_1_3, i32 %shl_ln80_7, i32 0" [src/honeybee.c:79]   --->   Operation 136 'select' 'select_ln79_7' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_7)   --->   "%shl_ln80_8 = shl i32 1, %zext_ln82_6" [src/honeybee.c:80]   --->   Operation 137 'shl' 'shl_ln80_8' <Predicate = (tmp_4_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_7)   --->   "%select_ln79_8 = select i1 %tmp_4_2, i32 %shl_ln80_8, i32 0" [src/honeybee.c:79]   --->   Operation 138 'select' 'select_ln79_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_7)   --->   "%zext_ln82_12 = zext i7 %add_ln82_3 to i32" [src/honeybee.c:82]   --->   Operation 139 'zext' 'zext_ln82_12' <Predicate = (tmp_4_2_1)> <Delay = 0.00>
ST_11 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_7)   --->   "%shl_ln80_9 = shl i32 1, %zext_ln82_12" [src/honeybee.c:80]   --->   Operation 140 'shl' 'shl_ln80_9' <Predicate = (tmp_4_2_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_7)   --->   "%select_ln79_9 = select i1 %tmp_4_2_1, i32 %shl_ln80_9, i32 0" [src/honeybee.c:79]   --->   Operation 141 'select' 'select_ln79_9' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 142 [1/1] (1.82ns)   --->   "%add_ln82_4 = add i7 6, %zext_ln82" [src/honeybee.c:82]   --->   Operation 142 'add' 'add_ln82_4' <Predicate = (tmp_4_2_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%zext_ln82_13 = zext i7 %add_ln82_4 to i32" [src/honeybee.c:82]   --->   Operation 143 'zext' 'zext_ln82_13' <Predicate = (tmp_4_2_2)> <Delay = 0.00>
ST_11 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%shl_ln80_10 = shl i32 1, %zext_ln82_13" [src/honeybee.c:80]   --->   Operation 144 'shl' 'shl_ln80_10' <Predicate = (tmp_4_2_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%select_ln79_10 = select i1 %tmp_4_2_2, i32 %shl_ln80_10, i32 0" [src/honeybee.c:79]   --->   Operation 145 'select' 'select_ln79_10' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 146 [1/1] (1.82ns)   --->   "%add_ln82_5 = add i7 7, %zext_ln82" [src/honeybee.c:82]   --->   Operation 146 'add' 'add_ln82_5' <Predicate = (tmp_4_2_3)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%zext_ln82_14 = zext i7 %add_ln82_5 to i32" [src/honeybee.c:82]   --->   Operation 147 'zext' 'zext_ln82_14' <Predicate = (tmp_4_2_3)> <Delay = 0.00>
ST_11 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%shl_ln80_11 = shl i32 1, %zext_ln82_14" [src/honeybee.c:80]   --->   Operation 148 'shl' 'shl_ln80_11' <Predicate = (tmp_4_2_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.94> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%select_ln79_11 = select i1 %tmp_4_2_3, i32 %shl_ln80_11, i32 0" [src/honeybee.c:79]   --->   Operation 149 'select' 'select_ln79_11' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%or_ln79_3 = or i32 %select_ln79_4, %select_ln79_5" [src/honeybee.c:79]   --->   Operation 150 'or' 'or_ln79_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 151 [1/1] (3.04ns) (out node of the LUT)   --->   "%or_ln79_4 = or i32 %select_ln79_6, %select_ln79_7" [src/honeybee.c:79]   --->   Operation 151 'or' 'or_ln79_4' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%or_ln79_5 = or i32 %or_ln79_4, %or_ln79_3" [src/honeybee.c:79]   --->   Operation 152 'or' 'or_ln79_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 153 [1/1] (2.94ns) (out node of the LUT)   --->   "%or_ln79_6 = or i32 %or_ln79_5, %or_ln79_2" [src/honeybee.c:79]   --->   Operation 153 'or' 'or_ln79_6' <Predicate = true> <Delay = 2.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 154 [1/1] (3.04ns) (out node of the LUT)   --->   "%or_ln79_7 = or i32 %select_ln79_8, %select_ln79_9" [src/honeybee.c:79]   --->   Operation 154 'or' 'or_ln79_7' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%or_ln79_8 = or i32 %select_ln79_10, %select_ln79_11" [src/honeybee.c:79]   --->   Operation 155 'or' 'or_ln79_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_13)   --->   "%or_ln79_9 = or i32 %or_ln79_8, %or_ln79_7" [src/honeybee.c:79]   --->   Operation 156 'or' 'or_ln79_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 157 [1/1] (3.04ns) (out node of the LUT)   --->   "%or_ln79_13 = or i32 %or_ln79_12, %or_ln79_9" [src/honeybee.c:79]   --->   Operation 157 'or' 'or_ln79_13' <Predicate = true> <Delay = 3.04> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_15)   --->   "%or_ln79_14 = or i32 %or_ln79_13, %or_ln79_6" [src/honeybee.c:79]   --->   Operation 158 'or' 'or_ln79_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_15)   --->   "%sext_ln79 = sext i32 %or_ln79_14 to i64" [src/honeybee.c:79]   --->   Operation 159 'sext' 'sext_ln79' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 160 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln79_15 = or i64 %collisions_0, %sext_ln79" [src/honeybee.c:79]   --->   Operation 160 'or' 'or_ln79_15' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 161 [1/1] (0.00ns)   --->   "br label %1" [src/honeybee.c:73]   --->   Operation 161 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('k') with incoming values : ('k', src/honeybee.c:73) [23]  (1.77 ns)

 <State 2>: 6.41ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', src/honeybee.c:73) [23]  (0 ns)
	'sitofp' operation ('grid.z', src/honeybee.c:78) [34]  (6.41 ns)

 <State 3>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('grid.z', src/honeybee.c:78) [34]  (6.41 ns)

 <State 4>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('grid.z', src/honeybee.c:78) [34]  (6.41 ns)

 <State 5>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('grid.z', src/honeybee.c:78) [34]  (6.41 ns)

 <State 6>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('grid.z', src/honeybee.c:78) [34]  (6.41 ns)

 <State 7>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('grid.z', src/honeybee.c:78) [34]  (6.41 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	'call' operation ('tmp_4', src/honeybee.c:79) to 'lineIntersectGrid' [39]  (8.75 ns)

 <State 9>: 6.41ns
The critical path consists of the following:
	'call' operation ('tmp_4', src/honeybee.c:79) to 'lineIntersectGrid' [39]  (6.41 ns)

 <State 10>: 7.91ns
The critical path consists of the following:
	'or' operation ('or_ln82_1', src/honeybee.c:82) [43]  (0 ns)
	'add' operation ('add_ln82', src/honeybee.c:82) [49]  (1.83 ns)
	'shl' operation ('shl_ln80_2', src/honeybee.c:80) [52]  (0 ns)
	'select' operation ('select_ln79_2', src/honeybee.c:79) [53]  (0 ns)
	'or' operation ('or_ln79_1', src/honeybee.c:79) [120]  (3.04 ns)
	'or' operation ('or_ln79_2', src/honeybee.c:79) [121]  (3.04 ns)

 <State 11>: 7.08ns
The critical path consists of the following:
	'shl' operation ('shl_ln80_8', src/honeybee.c:80) [83]  (0 ns)
	'select' operation ('select_ln79_8', src/honeybee.c:79) [84]  (0 ns)
	'or' operation ('or_ln79_7', src/honeybee.c:79) [126]  (3.04 ns)
	'or' operation ('or_ln79_9', src/honeybee.c:79) [128]  (0 ns)
	'or' operation ('or_ln79_13', src/honeybee.c:79) [132]  (3.04 ns)
	'or' operation ('or_ln79_14', src/honeybee.c:79) [133]  (0 ns)
	'or' operation ('or_ln79_15', src/honeybee.c:79) [135]  (0.993 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
