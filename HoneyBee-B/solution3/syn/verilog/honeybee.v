// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="honeybee,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=157,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=192,HLS_SYN_FF=67707,HLS_SYN_LUT=114089,HLS_VERSION=2019_2}" *)

module honeybee (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        edge_p1_x,
        edge_p1_y,
        edge_p1_z,
        edge_p2_x,
        edge_p2_y,
        edge_p2_z,
        ap_return
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] edge_p1_x;
input  [31:0] edge_p1_y;
input  [31:0] edge_p1_z;
input  [31:0] edge_p2_x;
input  [31:0] edge_p2_y;
input  [31:0] edge_p2_z;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [2:0] k_fu_405_p2;
reg   [2:0] k_reg_1017;
wire   [31:0] grp_fu_391_p1;
reg   [31:0] grid_z_reg_1022;
wire    ap_CS_fsm_state7;
wire   [0:0] grp_lineIntersectGrid_fu_151_ap_return;
reg   [0:0] tmp_4_reg_1042;
wire    ap_CS_fsm_state9;
wire    grp_lineIntersectGrid_fu_151_ap_ready;
wire    grp_lineIntersectGrid_fu_151_ap_done;
wire    grp_lineIntersectGrid_fu_166_ap_ready;
wire    grp_lineIntersectGrid_fu_166_ap_done;
wire    grp_lineIntersectGrid_fu_181_ap_ready;
wire    grp_lineIntersectGrid_fu_181_ap_done;
wire    grp_lineIntersectGrid_fu_196_ap_ready;
wire    grp_lineIntersectGrid_fu_196_ap_done;
wire    grp_lineIntersectGrid_fu_211_ap_ready;
wire    grp_lineIntersectGrid_fu_211_ap_done;
wire    grp_lineIntersectGrid_fu_226_ap_ready;
wire    grp_lineIntersectGrid_fu_226_ap_done;
wire    grp_lineIntersectGrid_fu_241_ap_ready;
wire    grp_lineIntersectGrid_fu_241_ap_done;
wire    grp_lineIntersectGrid_fu_256_ap_ready;
wire    grp_lineIntersectGrid_fu_256_ap_done;
wire    grp_lineIntersectGrid_fu_271_ap_ready;
wire    grp_lineIntersectGrid_fu_271_ap_done;
wire    grp_lineIntersectGrid_fu_286_ap_ready;
wire    grp_lineIntersectGrid_fu_286_ap_done;
wire    grp_lineIntersectGrid_fu_301_ap_ready;
wire    grp_lineIntersectGrid_fu_301_ap_done;
wire    grp_lineIntersectGrid_fu_316_ap_ready;
wire    grp_lineIntersectGrid_fu_316_ap_done;
wire    grp_lineIntersectGrid_fu_331_ap_ready;
wire    grp_lineIntersectGrid_fu_331_ap_done;
wire    grp_lineIntersectGrid_fu_346_ap_ready;
wire    grp_lineIntersectGrid_fu_346_ap_done;
wire    grp_lineIntersectGrid_fu_361_ap_ready;
wire    grp_lineIntersectGrid_fu_361_ap_done;
wire    grp_lineIntersectGrid_fu_376_ap_ready;
wire    grp_lineIntersectGrid_fu_376_ap_done;
reg    ap_block_state9_on_subcall_done;
wire   [0:0] grp_lineIntersectGrid_fu_166_ap_return;
reg   [0:0] tmp_4_0_1_reg_1047;
wire   [0:0] grp_lineIntersectGrid_fu_181_ap_return;
reg   [0:0] tmp_4_0_2_reg_1052;
wire   [0:0] grp_lineIntersectGrid_fu_196_ap_return;
reg   [0:0] tmp_4_0_3_reg_1057;
wire   [0:0] grp_lineIntersectGrid_fu_211_ap_return;
reg   [0:0] tmp_4_1_reg_1062;
wire   [0:0] grp_lineIntersectGrid_fu_226_ap_return;
reg   [0:0] tmp_4_1_1_reg_1067;
wire   [0:0] grp_lineIntersectGrid_fu_241_ap_return;
reg   [0:0] tmp_4_1_2_reg_1072;
wire   [0:0] grp_lineIntersectGrid_fu_256_ap_return;
reg   [0:0] tmp_4_1_3_reg_1077;
wire   [0:0] grp_lineIntersectGrid_fu_271_ap_return;
reg   [0:0] tmp_4_2_reg_1082;
wire   [0:0] grp_lineIntersectGrid_fu_286_ap_return;
reg   [0:0] tmp_4_2_1_reg_1087;
wire   [0:0] grp_lineIntersectGrid_fu_301_ap_return;
reg   [0:0] tmp_4_2_2_reg_1092;
wire   [0:0] grp_lineIntersectGrid_fu_316_ap_return;
reg   [0:0] tmp_4_2_3_reg_1097;
wire   [0:0] grp_lineIntersectGrid_fu_331_ap_return;
reg   [0:0] tmp_4_3_reg_1102;
wire   [0:0] grp_lineIntersectGrid_fu_346_ap_return;
reg   [0:0] tmp_4_3_1_reg_1107;
wire   [0:0] grp_lineIntersectGrid_fu_361_ap_return;
reg   [0:0] tmp_4_3_2_reg_1112;
wire   [0:0] grp_lineIntersectGrid_fu_376_ap_return;
reg   [0:0] tmp_4_3_3_reg_1117;
wire   [6:0] b_fu_411_p2;
reg   [6:0] b_reg_1122;
wire    ap_CS_fsm_state10;
wire   [5:0] trunc_ln73_fu_417_p1;
reg   [5:0] trunc_ln73_reg_1127;
wire   [5:0] or_ln82_fu_421_p2;
reg   [5:0] or_ln82_reg_1132;
wire   [6:0] zext_ln82_fu_427_p1;
reg   [6:0] zext_ln82_reg_1137;
wire   [6:0] add_ln82_1_fu_521_p2;
reg   [6:0] add_ln82_1_reg_1143;
wire   [5:0] or_ln82_3_fu_527_p2;
reg   [5:0] or_ln82_3_reg_1148;
wire   [6:0] add_ln82_2_fu_537_p2;
reg   [6:0] add_ln82_2_reg_1153;
wire   [6:0] add_ln82_3_fu_553_p2;
reg   [6:0] add_ln82_3_reg_1158;
wire   [31:0] or_ln79_2_fu_657_p2;
reg   [31:0] or_ln79_2_reg_1163;
wire   [31:0] or_ln79_12_fu_675_p2;
reg   [31:0] or_ln79_12_reg_1168;
wire   [63:0] or_ln79_15_fu_883_p2;
wire    ap_CS_fsm_state11;
wire    grp_lineIntersectGrid_fu_151_ap_start;
wire    grp_lineIntersectGrid_fu_151_ap_idle;
wire    grp_lineIntersectGrid_fu_166_ap_start;
wire    grp_lineIntersectGrid_fu_166_ap_idle;
wire    grp_lineIntersectGrid_fu_181_ap_start;
wire    grp_lineIntersectGrid_fu_181_ap_idle;
wire    grp_lineIntersectGrid_fu_196_ap_start;
wire    grp_lineIntersectGrid_fu_196_ap_idle;
wire    grp_lineIntersectGrid_fu_211_ap_start;
wire    grp_lineIntersectGrid_fu_211_ap_idle;
wire    grp_lineIntersectGrid_fu_226_ap_start;
wire    grp_lineIntersectGrid_fu_226_ap_idle;
wire    grp_lineIntersectGrid_fu_241_ap_start;
wire    grp_lineIntersectGrid_fu_241_ap_idle;
wire    grp_lineIntersectGrid_fu_256_ap_start;
wire    grp_lineIntersectGrid_fu_256_ap_idle;
wire    grp_lineIntersectGrid_fu_271_ap_start;
wire    grp_lineIntersectGrid_fu_271_ap_idle;
wire    grp_lineIntersectGrid_fu_286_ap_start;
wire    grp_lineIntersectGrid_fu_286_ap_idle;
wire    grp_lineIntersectGrid_fu_301_ap_start;
wire    grp_lineIntersectGrid_fu_301_ap_idle;
wire    grp_lineIntersectGrid_fu_316_ap_start;
wire    grp_lineIntersectGrid_fu_316_ap_idle;
wire    grp_lineIntersectGrid_fu_331_ap_start;
wire    grp_lineIntersectGrid_fu_331_ap_idle;
wire    grp_lineIntersectGrid_fu_346_ap_start;
wire    grp_lineIntersectGrid_fu_346_ap_idle;
wire    grp_lineIntersectGrid_fu_361_ap_start;
wire    grp_lineIntersectGrid_fu_361_ap_idle;
wire    grp_lineIntersectGrid_fu_376_ap_start;
wire    grp_lineIntersectGrid_fu_376_ap_idle;
reg   [2:0] k_0_reg_116;
reg   [6:0] b_0_reg_127;
reg   [63:0] collisions_0_reg_139;
reg    grp_lineIntersectGrid_fu_151_ap_start_reg;
wire    ap_CS_fsm_state8;
reg    grp_lineIntersectGrid_fu_166_ap_start_reg;
reg    grp_lineIntersectGrid_fu_181_ap_start_reg;
reg    grp_lineIntersectGrid_fu_196_ap_start_reg;
reg    grp_lineIntersectGrid_fu_211_ap_start_reg;
reg    grp_lineIntersectGrid_fu_226_ap_start_reg;
reg    grp_lineIntersectGrid_fu_241_ap_start_reg;
reg    grp_lineIntersectGrid_fu_256_ap_start_reg;
reg    grp_lineIntersectGrid_fu_271_ap_start_reg;
reg    grp_lineIntersectGrid_fu_286_ap_start_reg;
reg    grp_lineIntersectGrid_fu_301_ap_start_reg;
reg    grp_lineIntersectGrid_fu_316_ap_start_reg;
reg    grp_lineIntersectGrid_fu_331_ap_start_reg;
reg    grp_lineIntersectGrid_fu_346_ap_start_reg;
reg    grp_lineIntersectGrid_fu_361_ap_start_reg;
reg    grp_lineIntersectGrid_fu_376_ap_start_reg;
wire   [31:0] grp_fu_391_p0;
wire   [31:0] zext_ln73_1_fu_431_p1;
wire   [31:0] shl_ln80_fu_435_p2;
wire   [5:0] or_ln82_1_fu_448_p2;
wire   [31:0] zext_ln82_3_fu_458_p1;
wire   [31:0] shl_ln80_1_fu_462_p2;
wire   [6:0] zext_ln82_2_fu_454_p1;
wire   [6:0] add_ln82_fu_475_p2;
wire   [31:0] zext_ln82_4_fu_481_p1;
wire   [31:0] shl_ln80_2_fu_485_p2;
wire   [5:0] or_ln82_2_fu_498_p2;
wire   [31:0] zext_ln82_5_fu_504_p1;
wire   [31:0] shl_ln80_3_fu_508_p2;
wire   [6:0] zext_ln82_7_fu_533_p1;
wire   [5:0] or_ln82_5_fu_543_p2;
wire   [31:0] zext_ln82_11_fu_549_p1;
wire   [31:0] shl_ln80_12_fu_559_p2;
wire   [5:0] or_ln82_6_fu_572_p2;
wire   [31:0] zext_ln82_16_fu_582_p1;
wire   [31:0] shl_ln80_13_fu_586_p2;
wire   [6:0] zext_ln82_15_fu_578_p1;
wire   [6:0] add_ln82_6_fu_599_p2;
wire   [31:0] zext_ln82_17_fu_605_p1;
wire   [31:0] shl_ln80_14_fu_609_p2;
wire   [5:0] or_ln82_7_fu_622_p2;
wire   [31:0] zext_ln82_18_fu_628_p1;
wire   [31:0] shl_ln80_15_fu_632_p2;
wire   [31:0] select_ln79_fu_441_p3;
wire   [31:0] select_ln79_1_fu_468_p3;
wire   [31:0] select_ln79_2_fu_491_p3;
wire   [31:0] select_ln79_3_fu_514_p3;
wire   [31:0] or_ln79_1_fu_651_p2;
wire   [31:0] or_ln79_fu_645_p2;
wire   [31:0] select_ln79_12_fu_565_p3;
wire   [31:0] select_ln79_13_fu_592_p3;
wire   [31:0] select_ln79_14_fu_615_p3;
wire   [31:0] select_ln79_15_fu_638_p3;
wire   [31:0] or_ln79_11_fu_669_p2;
wire   [31:0] or_ln79_10_fu_663_p2;
wire   [31:0] zext_ln82_1_fu_681_p1;
wire   [31:0] shl_ln80_4_fu_687_p2;
wire   [31:0] zext_ln82_8_fu_700_p1;
wire   [31:0] shl_ln80_5_fu_703_p2;
wire   [31:0] zext_ln82_9_fu_716_p1;
wire   [31:0] shl_ln80_6_fu_719_p2;
wire   [5:0] or_ln82_4_fu_732_p2;
wire   [31:0] zext_ln82_10_fu_737_p1;
wire   [31:0] shl_ln80_7_fu_741_p2;
wire   [31:0] zext_ln82_6_fu_684_p1;
wire   [31:0] shl_ln80_8_fu_754_p2;
wire   [31:0] zext_ln82_12_fu_767_p1;
wire   [31:0] shl_ln80_9_fu_770_p2;
wire   [6:0] add_ln82_4_fu_783_p2;
wire   [31:0] zext_ln82_13_fu_788_p1;
wire   [31:0] shl_ln80_10_fu_792_p2;
wire   [6:0] add_ln82_5_fu_805_p2;
wire   [31:0] zext_ln82_14_fu_810_p1;
wire   [31:0] shl_ln80_11_fu_814_p2;
wire   [31:0] select_ln79_4_fu_693_p3;
wire   [31:0] select_ln79_5_fu_709_p3;
wire   [31:0] select_ln79_6_fu_725_p3;
wire   [31:0] select_ln79_7_fu_747_p3;
wire   [31:0] or_ln79_4_fu_833_p2;
wire   [31:0] or_ln79_3_fu_827_p2;
wire   [31:0] or_ln79_5_fu_839_p2;
wire   [31:0] select_ln79_8_fu_760_p3;
wire   [31:0] select_ln79_9_fu_776_p3;
wire   [31:0] select_ln79_10_fu_798_p3;
wire   [31:0] select_ln79_11_fu_820_p3;
wire   [31:0] or_ln79_8_fu_856_p2;
wire   [31:0] or_ln79_7_fu_850_p2;
wire   [31:0] or_ln79_9_fu_862_p2;
wire   [31:0] or_ln79_13_fu_868_p2;
wire   [31:0] or_ln79_6_fu_845_p2;
wire   [31:0] or_ln79_14_fu_873_p2;
wire  signed [63:0] sext_ln79_fu_879_p1;
wire   [0:0] icmp_ln73_fu_399_p2;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_lineIntersectGrid_fu_151_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_166_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_181_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_196_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_211_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_226_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_241_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_256_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_271_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_286_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_301_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_316_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_331_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_346_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_361_ap_start_reg = 1'b0;
#0 grp_lineIntersectGrid_fu_376_ap_start_reg = 1'b0;
end

lineIntersectGrid grp_lineIntersectGrid_fu_151(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_151_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_151_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_151_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_151_ap_ready),
    .grid_x(32'd0),
    .grid_y(32'd0),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_151_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_166(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_166_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_166_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_166_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_166_ap_ready),
    .grid_x(32'd1065353216),
    .grid_y(32'd0),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_166_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_181(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_181_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_181_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_181_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_181_ap_ready),
    .grid_x(32'd1073741824),
    .grid_y(32'd0),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_181_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_196(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_196_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_196_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_196_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_196_ap_ready),
    .grid_x(32'd1077936128),
    .grid_y(32'd0),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_196_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_211(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_211_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_211_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_211_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_211_ap_ready),
    .grid_x(32'd0),
    .grid_y(32'd1065353216),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_211_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_226_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_226_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_226_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_226_ap_ready),
    .grid_x(32'd1065353216),
    .grid_y(32'd1065353216),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_226_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_241(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_241_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_241_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_241_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_241_ap_ready),
    .grid_x(32'd1073741824),
    .grid_y(32'd1065353216),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_241_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_256(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_256_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_256_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_256_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_256_ap_ready),
    .grid_x(32'd1077936128),
    .grid_y(32'd1065353216),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_256_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_271(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_271_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_271_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_271_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_271_ap_ready),
    .grid_x(32'd0),
    .grid_y(32'd1073741824),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_271_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_286_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_286_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_286_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_286_ap_ready),
    .grid_x(32'd1065353216),
    .grid_y(32'd1073741824),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_286_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_301(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_301_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_301_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_301_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_301_ap_ready),
    .grid_x(32'd1073741824),
    .grid_y(32'd1073741824),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_301_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_316(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_316_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_316_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_316_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_316_ap_ready),
    .grid_x(32'd1077936128),
    .grid_y(32'd1073741824),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_316_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_331(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_331_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_331_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_331_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_331_ap_ready),
    .grid_x(32'd0),
    .grid_y(32'd1077936128),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_331_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_346(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_346_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_346_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_346_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_346_ap_ready),
    .grid_x(32'd1065353216),
    .grid_y(32'd1077936128),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_346_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_361(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_361_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_361_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_361_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_361_ap_ready),
    .grid_x(32'd1073741824),
    .grid_y(32'd1077936128),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_361_ap_return)
);

lineIntersectGrid grp_lineIntersectGrid_fu_376(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectGrid_fu_376_ap_start),
    .ap_done(grp_lineIntersectGrid_fu_376_ap_done),
    .ap_idle(grp_lineIntersectGrid_fu_376_ap_idle),
    .ap_ready(grp_lineIntersectGrid_fu_376_ap_ready),
    .grid_x(32'd1077936128),
    .grid_y(32'd1077936128),
    .grid_z(grid_z_reg_1022),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .ap_return(grp_lineIntersectGrid_fu_376_ap_return)
);

honeybee_sitofp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
honeybee_sitofp_3fYi_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_391_p0),
    .ce(1'b1),
    .dout(grp_fu_391_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_151_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_151_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_151_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_151_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_166_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_166_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_166_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_166_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_181_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_181_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_181_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_181_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_196_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_196_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_196_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_196_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_211_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_211_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_211_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_211_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_226_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_226_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_226_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_226_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_241_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_241_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_241_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_241_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_256_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_256_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_256_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_256_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_271_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_271_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_271_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_271_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_286_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_286_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_286_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_286_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_301_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_301_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_301_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_301_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_316_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_316_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_316_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_316_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_331_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_331_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_331_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_331_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_346_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_346_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_346_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_346_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_361_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_361_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_361_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_361_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectGrid_fu_376_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_lineIntersectGrid_fu_376_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectGrid_fu_376_ap_ready == 1'b1)) begin
            grp_lineIntersectGrid_fu_376_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        b_0_reg_127 <= b_reg_1122;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        b_0_reg_127 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        collisions_0_reg_139 <= or_ln79_15_fu_883_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        collisions_0_reg_139 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_0_reg_116 <= k_reg_1017;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_0_reg_116 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_4_2_reg_1082 == 1'd1))) begin
        add_ln82_1_reg_1143 <= add_ln82_1_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_4_1_2_reg_1072 == 1'd1))) begin
        add_ln82_2_reg_1153[6 : 1] <= add_ln82_2_fu_537_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_4_2_1_reg_1087 == 1'd1))) begin
        add_ln82_3_reg_1158 <= add_ln82_3_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        b_reg_1122 <= b_fu_411_p2;
        or_ln79_12_reg_1168 <= or_ln79_12_fu_675_p2;
        or_ln79_2_reg_1163 <= or_ln79_2_fu_657_p2;
        or_ln82_3_reg_1148[1] <= or_ln82_3_fu_527_p2[1];
or_ln82_3_reg_1148[5 : 3] <= or_ln82_3_fu_527_p2[5 : 3];
        or_ln82_reg_1132[1 : 0] <= or_ln82_fu_421_p2[1 : 0];
or_ln82_reg_1132[5 : 3] <= or_ln82_fu_421_p2[5 : 3];
        trunc_ln73_reg_1127 <= trunc_ln73_fu_417_p1;
        zext_ln82_reg_1137[1 : 0] <= zext_ln82_fu_427_p1[1 : 0];
zext_ln82_reg_1137[5 : 3] <= zext_ln82_fu_427_p1[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grid_z_reg_1022 <= grp_fu_391_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_reg_1017 <= k_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
        tmp_4_0_1_reg_1047 <= grp_lineIntersectGrid_fu_166_ap_return;
        tmp_4_0_2_reg_1052 <= grp_lineIntersectGrid_fu_181_ap_return;
        tmp_4_0_3_reg_1057 <= grp_lineIntersectGrid_fu_196_ap_return;
        tmp_4_1_1_reg_1067 <= grp_lineIntersectGrid_fu_226_ap_return;
        tmp_4_1_2_reg_1072 <= grp_lineIntersectGrid_fu_241_ap_return;
        tmp_4_1_3_reg_1077 <= grp_lineIntersectGrid_fu_256_ap_return;
        tmp_4_1_reg_1062 <= grp_lineIntersectGrid_fu_211_ap_return;
        tmp_4_2_1_reg_1087 <= grp_lineIntersectGrid_fu_286_ap_return;
        tmp_4_2_2_reg_1092 <= grp_lineIntersectGrid_fu_301_ap_return;
        tmp_4_2_3_reg_1097 <= grp_lineIntersectGrid_fu_316_ap_return;
        tmp_4_2_reg_1082 <= grp_lineIntersectGrid_fu_271_ap_return;
        tmp_4_3_1_reg_1107 <= grp_lineIntersectGrid_fu_346_ap_return;
        tmp_4_3_2_reg_1112 <= grp_lineIntersectGrid_fu_361_ap_return;
        tmp_4_3_3_reg_1117 <= grp_lineIntersectGrid_fu_376_ap_return;
        tmp_4_3_reg_1102 <= grp_lineIntersectGrid_fu_331_ap_return;
        tmp_4_reg_1042 <= grp_lineIntersectGrid_fu_151_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_399_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_399_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln73_fu_399_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln82_1_fu_521_p2 = (7'd4 + zext_ln82_fu_427_p1);

assign add_ln82_2_fu_537_p2 = (7'd1 + zext_ln82_7_fu_533_p1);

assign add_ln82_3_fu_553_p2 = (7'd5 + zext_ln82_fu_427_p1);

assign add_ln82_4_fu_783_p2 = (7'd6 + zext_ln82_reg_1137);

assign add_ln82_5_fu_805_p2 = (7'd7 + zext_ln82_reg_1137);

assign add_ln82_6_fu_599_p2 = (7'd1 + zext_ln82_15_fu_578_p1);

assign add_ln82_fu_475_p2 = (7'd1 + zext_ln82_2_fu_454_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_lineIntersectGrid_fu_241_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_226_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_211_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_196_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_181_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_166_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_151_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_376_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_361_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_346_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_331_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_316_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_301_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_286_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_271_ap_done == 1'b0) | (grp_lineIntersectGrid_fu_256_ap_done == 1'b0));
end

assign ap_return = collisions_0_reg_139;

assign b_fu_411_p2 = (7'd16 + b_0_reg_127);

assign grp_fu_391_p0 = k_0_reg_116;

assign grp_lineIntersectGrid_fu_151_ap_start = grp_lineIntersectGrid_fu_151_ap_start_reg;

assign grp_lineIntersectGrid_fu_166_ap_start = grp_lineIntersectGrid_fu_166_ap_start_reg;

assign grp_lineIntersectGrid_fu_181_ap_start = grp_lineIntersectGrid_fu_181_ap_start_reg;

assign grp_lineIntersectGrid_fu_196_ap_start = grp_lineIntersectGrid_fu_196_ap_start_reg;

assign grp_lineIntersectGrid_fu_211_ap_start = grp_lineIntersectGrid_fu_211_ap_start_reg;

assign grp_lineIntersectGrid_fu_226_ap_start = grp_lineIntersectGrid_fu_226_ap_start_reg;

assign grp_lineIntersectGrid_fu_241_ap_start = grp_lineIntersectGrid_fu_241_ap_start_reg;

assign grp_lineIntersectGrid_fu_256_ap_start = grp_lineIntersectGrid_fu_256_ap_start_reg;

assign grp_lineIntersectGrid_fu_271_ap_start = grp_lineIntersectGrid_fu_271_ap_start_reg;

assign grp_lineIntersectGrid_fu_286_ap_start = grp_lineIntersectGrid_fu_286_ap_start_reg;

assign grp_lineIntersectGrid_fu_301_ap_start = grp_lineIntersectGrid_fu_301_ap_start_reg;

assign grp_lineIntersectGrid_fu_316_ap_start = grp_lineIntersectGrid_fu_316_ap_start_reg;

assign grp_lineIntersectGrid_fu_331_ap_start = grp_lineIntersectGrid_fu_331_ap_start_reg;

assign grp_lineIntersectGrid_fu_346_ap_start = grp_lineIntersectGrid_fu_346_ap_start_reg;

assign grp_lineIntersectGrid_fu_361_ap_start = grp_lineIntersectGrid_fu_361_ap_start_reg;

assign grp_lineIntersectGrid_fu_376_ap_start = grp_lineIntersectGrid_fu_376_ap_start_reg;

assign icmp_ln73_fu_399_p2 = ((k_0_reg_116 == 3'd4) ? 1'b1 : 1'b0);

assign k_fu_405_p2 = (k_0_reg_116 + 3'd1);

assign or_ln79_10_fu_663_p2 = (select_ln79_13_fu_592_p3 | select_ln79_12_fu_565_p3);

assign or_ln79_11_fu_669_p2 = (select_ln79_15_fu_638_p3 | select_ln79_14_fu_615_p3);

assign or_ln79_12_fu_675_p2 = (or_ln79_11_fu_669_p2 | or_ln79_10_fu_663_p2);

assign or_ln79_13_fu_868_p2 = (or_ln79_9_fu_862_p2 | or_ln79_12_reg_1168);

assign or_ln79_14_fu_873_p2 = (or_ln79_6_fu_845_p2 | or_ln79_13_fu_868_p2);

assign or_ln79_15_fu_883_p2 = (sext_ln79_fu_879_p1 | collisions_0_reg_139);

assign or_ln79_1_fu_651_p2 = (select_ln79_3_fu_514_p3 | select_ln79_2_fu_491_p3);

assign or_ln79_2_fu_657_p2 = (or_ln79_fu_645_p2 | or_ln79_1_fu_651_p2);

assign or_ln79_3_fu_827_p2 = (select_ln79_5_fu_709_p3 | select_ln79_4_fu_693_p3);

assign or_ln79_4_fu_833_p2 = (select_ln79_7_fu_747_p3 | select_ln79_6_fu_725_p3);

assign or_ln79_5_fu_839_p2 = (or_ln79_4_fu_833_p2 | or_ln79_3_fu_827_p2);

assign or_ln79_6_fu_845_p2 = (or_ln79_5_fu_839_p2 | or_ln79_2_reg_1163);

assign or_ln79_7_fu_850_p2 = (select_ln79_9_fu_776_p3 | select_ln79_8_fu_760_p3);

assign or_ln79_8_fu_856_p2 = (select_ln79_11_fu_820_p3 | select_ln79_10_fu_798_p3);

assign or_ln79_9_fu_862_p2 = (or_ln79_8_fu_856_p2 | or_ln79_7_fu_850_p2);

assign or_ln79_fu_645_p2 = (select_ln79_fu_441_p3 | select_ln79_1_fu_468_p3);

assign or_ln82_1_fu_448_p2 = (trunc_ln73_fu_417_p1 | 6'd1);

assign or_ln82_2_fu_498_p2 = (trunc_ln73_fu_417_p1 | 6'd3);

assign or_ln82_3_fu_527_p2 = (trunc_ln73_fu_417_p1 | 6'd5);

assign or_ln82_4_fu_732_p2 = (trunc_ln73_reg_1127 | 6'd7);

assign or_ln82_5_fu_543_p2 = (trunc_ln73_fu_417_p1 | 6'd12);

assign or_ln82_6_fu_572_p2 = (trunc_ln73_fu_417_p1 | 6'd13);

assign or_ln82_7_fu_622_p2 = (trunc_ln73_fu_417_p1 | 6'd15);

assign or_ln82_fu_421_p2 = (trunc_ln73_fu_417_p1 | 6'd4);

assign select_ln79_10_fu_798_p3 = ((tmp_4_2_2_reg_1092[0:0] === 1'b1) ? shl_ln80_10_fu_792_p2 : 32'd0);

assign select_ln79_11_fu_820_p3 = ((tmp_4_2_3_reg_1097[0:0] === 1'b1) ? shl_ln80_11_fu_814_p2 : 32'd0);

assign select_ln79_12_fu_565_p3 = ((tmp_4_3_reg_1102[0:0] === 1'b1) ? shl_ln80_12_fu_559_p2 : 32'd0);

assign select_ln79_13_fu_592_p3 = ((tmp_4_3_1_reg_1107[0:0] === 1'b1) ? shl_ln80_13_fu_586_p2 : 32'd0);

assign select_ln79_14_fu_615_p3 = ((tmp_4_3_2_reg_1112[0:0] === 1'b1) ? shl_ln80_14_fu_609_p2 : 32'd0);

assign select_ln79_15_fu_638_p3 = ((tmp_4_3_3_reg_1117[0:0] === 1'b1) ? shl_ln80_15_fu_632_p2 : 32'd0);

assign select_ln79_1_fu_468_p3 = ((tmp_4_0_1_reg_1047[0:0] === 1'b1) ? shl_ln80_1_fu_462_p2 : 32'd0);

assign select_ln79_2_fu_491_p3 = ((tmp_4_0_2_reg_1052[0:0] === 1'b1) ? shl_ln80_2_fu_485_p2 : 32'd0);

assign select_ln79_3_fu_514_p3 = ((tmp_4_0_3_reg_1057[0:0] === 1'b1) ? shl_ln80_3_fu_508_p2 : 32'd0);

assign select_ln79_4_fu_693_p3 = ((tmp_4_1_reg_1062[0:0] === 1'b1) ? shl_ln80_4_fu_687_p2 : 32'd0);

assign select_ln79_5_fu_709_p3 = ((tmp_4_1_1_reg_1067[0:0] === 1'b1) ? shl_ln80_5_fu_703_p2 : 32'd0);

assign select_ln79_6_fu_725_p3 = ((tmp_4_1_2_reg_1072[0:0] === 1'b1) ? shl_ln80_6_fu_719_p2 : 32'd0);

assign select_ln79_7_fu_747_p3 = ((tmp_4_1_3_reg_1077[0:0] === 1'b1) ? shl_ln80_7_fu_741_p2 : 32'd0);

assign select_ln79_8_fu_760_p3 = ((tmp_4_2_reg_1082[0:0] === 1'b1) ? shl_ln80_8_fu_754_p2 : 32'd0);

assign select_ln79_9_fu_776_p3 = ((tmp_4_2_1_reg_1087[0:0] === 1'b1) ? shl_ln80_9_fu_770_p2 : 32'd0);

assign select_ln79_fu_441_p3 = ((tmp_4_reg_1042[0:0] === 1'b1) ? shl_ln80_fu_435_p2 : 32'd0);

assign sext_ln79_fu_879_p1 = $signed(or_ln79_14_fu_873_p2);

assign shl_ln80_10_fu_792_p2 = 32'd1 << zext_ln82_13_fu_788_p1;

assign shl_ln80_11_fu_814_p2 = 32'd1 << zext_ln82_14_fu_810_p1;

assign shl_ln80_12_fu_559_p2 = 32'd1 << zext_ln82_11_fu_549_p1;

assign shl_ln80_13_fu_586_p2 = 32'd1 << zext_ln82_16_fu_582_p1;

assign shl_ln80_14_fu_609_p2 = 32'd1 << zext_ln82_17_fu_605_p1;

assign shl_ln80_15_fu_632_p2 = 32'd1 << zext_ln82_18_fu_628_p1;

assign shl_ln80_1_fu_462_p2 = 32'd1 << zext_ln82_3_fu_458_p1;

assign shl_ln80_2_fu_485_p2 = 32'd1 << zext_ln82_4_fu_481_p1;

assign shl_ln80_3_fu_508_p2 = 32'd1 << zext_ln82_5_fu_504_p1;

assign shl_ln80_4_fu_687_p2 = 32'd1 << zext_ln82_1_fu_681_p1;

assign shl_ln80_5_fu_703_p2 = 32'd1 << zext_ln82_8_fu_700_p1;

assign shl_ln80_6_fu_719_p2 = 32'd1 << zext_ln82_9_fu_716_p1;

assign shl_ln80_7_fu_741_p2 = 32'd1 << zext_ln82_10_fu_737_p1;

assign shl_ln80_8_fu_754_p2 = 32'd1 << zext_ln82_6_fu_684_p1;

assign shl_ln80_9_fu_770_p2 = 32'd1 << zext_ln82_12_fu_767_p1;

assign shl_ln80_fu_435_p2 = 32'd1 << zext_ln73_1_fu_431_p1;

assign trunc_ln73_fu_417_p1 = b_0_reg_127[5:0];

assign zext_ln73_1_fu_431_p1 = b_0_reg_127;

assign zext_ln82_10_fu_737_p1 = or_ln82_4_fu_732_p2;

assign zext_ln82_11_fu_549_p1 = or_ln82_5_fu_543_p2;

assign zext_ln82_12_fu_767_p1 = add_ln82_3_reg_1158;

assign zext_ln82_13_fu_788_p1 = add_ln82_4_fu_783_p2;

assign zext_ln82_14_fu_810_p1 = add_ln82_5_fu_805_p2;

assign zext_ln82_15_fu_578_p1 = or_ln82_6_fu_572_p2;

assign zext_ln82_16_fu_582_p1 = or_ln82_6_fu_572_p2;

assign zext_ln82_17_fu_605_p1 = add_ln82_6_fu_599_p2;

assign zext_ln82_18_fu_628_p1 = or_ln82_7_fu_622_p2;

assign zext_ln82_1_fu_681_p1 = or_ln82_reg_1132;

assign zext_ln82_2_fu_454_p1 = or_ln82_1_fu_448_p2;

assign zext_ln82_3_fu_458_p1 = or_ln82_1_fu_448_p2;

assign zext_ln82_4_fu_481_p1 = add_ln82_fu_475_p2;

assign zext_ln82_5_fu_504_p1 = or_ln82_2_fu_498_p2;

assign zext_ln82_6_fu_684_p1 = add_ln82_1_reg_1143;

assign zext_ln82_7_fu_533_p1 = or_ln82_3_fu_527_p2;

assign zext_ln82_8_fu_700_p1 = or_ln82_3_reg_1148;

assign zext_ln82_9_fu_716_p1 = add_ln82_2_reg_1153;

assign zext_ln82_fu_427_p1 = or_ln82_fu_421_p2;

always @ (posedge ap_clk) begin
    or_ln82_reg_1132[2] <= 1'b1;
    zext_ln82_reg_1137[2] <= 1'b1;
    zext_ln82_reg_1137[6] <= 1'b0;
    or_ln82_3_reg_1148[0] <= 1'b1;
    or_ln82_3_reg_1148[2] <= 1'b1;
    add_ln82_2_reg_1153[0] <= 1'b0;
end

endmodule //honeybee
