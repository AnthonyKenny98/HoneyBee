// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "lineIntersectGrid.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic lineIntersectGrid::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic lineIntersectGrid::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state1 = "1";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state2 = "10";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state3 = "100";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state4 = "1000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state5 = "10000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state6 = "100000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state7 = "1000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state8 = "10000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state9 = "100000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state10 = "1000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state11 = "10000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state12 = "100000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<30> lineIntersectGrid::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_14 = "10100";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_19 = "11001";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_4 = "100";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_9 = "1001";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_16 = "10110";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_1B = "11011";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_1C = "11100";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_5 = "101";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_A = "1010";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_15 = "10101";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_1A = "11010";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_17 = "10111";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_1E = "11110";
const sc_lv<8> lineIntersectGrid::ap_const_lv8_FF = "11111111";
const sc_lv<23> lineIntersectGrid::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> lineIntersectGrid::ap_const_lv32_1D = "11101";
const sc_lv<2> lineIntersectGrid::ap_const_lv2_0 = "00";
const sc_lv<2> lineIntersectGrid::ap_const_lv2_1 = "1";
const sc_lv<5> lineIntersectGrid::ap_const_lv5_2 = "10";
const sc_lv<5> lineIntersectGrid::ap_const_lv5_4 = "100";
const sc_lv<1> lineIntersectGrid::ap_const_lv1_0 = "0";
const bool lineIntersectGrid::ap_const_boolean_1 = true;

lineIntersectGrid::lineIntersectGrid(sc_module_name name) : sc_module(name), mVcdFile(0) {
    honeybee_faddfsubbkb_U1 = new honeybee_faddfsubbkb<1,5,32,32,32>("honeybee_faddfsubbkb_U1");
    honeybee_faddfsubbkb_U1->clk(ap_clk);
    honeybee_faddfsubbkb_U1->reset(ap_rst);
    honeybee_faddfsubbkb_U1->din0(grp_fu_86_p0);
    honeybee_faddfsubbkb_U1->din1(grp_fu_86_p1);
    honeybee_faddfsubbkb_U1->opcode(grp_fu_86_opcode);
    honeybee_faddfsubbkb_U1->ce(ap_var_for_const0);
    honeybee_faddfsubbkb_U1->dout(grp_fu_86_p2);
    honeybee_faddfsubbkb_U2 = new honeybee_faddfsubbkb<1,5,32,32,32>("honeybee_faddfsubbkb_U2");
    honeybee_faddfsubbkb_U2->clk(ap_clk);
    honeybee_faddfsubbkb_U2->reset(ap_rst);
    honeybee_faddfsubbkb_U2->din0(grp_fu_92_p0);
    honeybee_faddfsubbkb_U2->din1(grp_fu_92_p1);
    honeybee_faddfsubbkb_U2->opcode(grp_fu_92_opcode);
    honeybee_faddfsubbkb_U2->ce(ap_var_for_const0);
    honeybee_faddfsubbkb_U2->dout(grp_fu_92_p2);
    honeybee_faddfsubbkb_U3 = new honeybee_faddfsubbkb<1,5,32,32,32>("honeybee_faddfsubbkb_U3");
    honeybee_faddfsubbkb_U3->clk(ap_clk);
    honeybee_faddfsubbkb_U3->reset(ap_rst);
    honeybee_faddfsubbkb_U3->din0(grp_fu_98_p0);
    honeybee_faddfsubbkb_U3->din1(grp_fu_98_p1);
    honeybee_faddfsubbkb_U3->opcode(grp_fu_98_opcode);
    honeybee_faddfsubbkb_U3->ce(ap_var_for_const0);
    honeybee_faddfsubbkb_U3->dout(grp_fu_98_p2);
    honeybee_fsub_32ncud_U4 = new honeybee_fsub_32ncud<1,5,32,32,32>("honeybee_fsub_32ncud_U4");
    honeybee_fsub_32ncud_U4->clk(ap_clk);
    honeybee_fsub_32ncud_U4->reset(ap_rst);
    honeybee_fsub_32ncud_U4->din0(edge_p2_y);
    honeybee_fsub_32ncud_U4->din1(edge_p1_y);
    honeybee_fsub_32ncud_U4->ce(ap_var_for_const0);
    honeybee_fsub_32ncud_U4->dout(grp_fu_104_p2);
    honeybee_fsub_32ncud_U5 = new honeybee_fsub_32ncud<1,5,32,32,32>("honeybee_fsub_32ncud_U5");
    honeybee_fsub_32ncud_U5->clk(ap_clk);
    honeybee_fsub_32ncud_U5->reset(ap_rst);
    honeybee_fsub_32ncud_U5->din0(grid_z);
    honeybee_fsub_32ncud_U5->din1(edge_p1_z);
    honeybee_fsub_32ncud_U5->ce(ap_var_for_const0);
    honeybee_fsub_32ncud_U5->dout(grp_fu_110_p2);
    honeybee_fsub_32ncud_U6 = new honeybee_fsub_32ncud<1,5,32,32,32>("honeybee_fsub_32ncud_U6");
    honeybee_fsub_32ncud_U6->clk(ap_clk);
    honeybee_fsub_32ncud_U6->reset(ap_rst);
    honeybee_fsub_32ncud_U6->din0(edge_p2_z);
    honeybee_fsub_32ncud_U6->din1(edge_p1_z);
    honeybee_fsub_32ncud_U6->ce(ap_var_for_const0);
    honeybee_fsub_32ncud_U6->dout(grp_fu_116_p2);
    honeybee_fdiv_32ndEe_U7 = new honeybee_fdiv_32ndEe<1,16,32,32,32>("honeybee_fdiv_32ndEe_U7");
    honeybee_fdiv_32ndEe_U7->clk(ap_clk);
    honeybee_fdiv_32ndEe_U7->reset(ap_rst);
    honeybee_fdiv_32ndEe_U7->din0(grp_fu_125_p0);
    honeybee_fdiv_32ndEe_U7->din1(tmp_1_i_reg_635);
    honeybee_fdiv_32ndEe_U7->ce(ap_var_for_const0);
    honeybee_fdiv_32ndEe_U7->dout(grp_fu_125_p2);
    honeybee_fdiv_32ndEe_U8 = new honeybee_fdiv_32ndEe<1,16,32,32,32>("honeybee_fdiv_32ndEe_U8");
    honeybee_fdiv_32ndEe_U8->clk(ap_clk);
    honeybee_fdiv_32ndEe_U8->reset(ap_rst);
    honeybee_fdiv_32ndEe_U8->din0(grp_fu_129_p0);
    honeybee_fdiv_32ndEe_U8->din1(tmp_1_i3_reg_646);
    honeybee_fdiv_32ndEe_U8->ce(ap_var_for_const0);
    honeybee_fdiv_32ndEe_U8->dout(grp_fu_129_p2);
    honeybee_fdiv_32ndEe_U9 = new honeybee_fdiv_32ndEe<1,16,32,32,32>("honeybee_fdiv_32ndEe_U9");
    honeybee_fdiv_32ndEe_U9->clk(ap_clk);
    honeybee_fdiv_32ndEe_U9->reset(ap_rst);
    honeybee_fdiv_32ndEe_U9->din0(grp_fu_133_p0);
    honeybee_fdiv_32ndEe_U9->din1(tmp_1_i7_reg_657);
    honeybee_fdiv_32ndEe_U9->ce(ap_var_for_const0);
    honeybee_fdiv_32ndEe_U9->dout(grp_fu_133_p2);
    honeybee_fcmp_32neOg_U10 = new honeybee_fcmp_32neOg<1,2,32,32,1>("honeybee_fcmp_32neOg_U10");
    honeybee_fcmp_32neOg_U10->clk(ap_clk);
    honeybee_fcmp_32neOg_U10->reset(ap_rst);
    honeybee_fcmp_32neOg_U10->din0(grp_fu_137_p0);
    honeybee_fcmp_32neOg_U10->din1(grp_fu_137_p1);
    honeybee_fcmp_32neOg_U10->ce(ap_var_for_const0);
    honeybee_fcmp_32neOg_U10->opcode(grp_fu_137_opcode);
    honeybee_fcmp_32neOg_U10->dout(grp_fu_137_p2);
    honeybee_fcmp_32neOg_U11 = new honeybee_fcmp_32neOg<1,2,32,32,1>("honeybee_fcmp_32neOg_U11");
    honeybee_fcmp_32neOg_U11->clk(ap_clk);
    honeybee_fcmp_32neOg_U11->reset(ap_rst);
    honeybee_fcmp_32neOg_U11->din0(reg_161);
    honeybee_fcmp_32neOg_U11->din1(reg_149);
    honeybee_fcmp_32neOg_U11->ce(ap_var_for_const0);
    honeybee_fcmp_32neOg_U11->opcode(grp_fu_141_opcode);
    honeybee_fcmp_32neOg_U11->dout(grp_fu_141_p2);
    honeybee_fcmp_32neOg_U12 = new honeybee_fcmp_32neOg<1,2,32,32,1>("honeybee_fcmp_32neOg_U12");
    honeybee_fcmp_32neOg_U12->clk(ap_clk);
    honeybee_fcmp_32neOg_U12->reset(ap_rst);
    honeybee_fcmp_32neOg_U12->din0(reg_161);
    honeybee_fcmp_32neOg_U12->din1(reg_155);
    honeybee_fcmp_32neOg_U12->ce(ap_var_for_const0);
    honeybee_fcmp_32neOg_U12->opcode(grp_fu_145_opcode);
    honeybee_fcmp_32neOg_U12->dout(grp_fu_145_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln27_1_fu_245_p2);
    sensitive << ( and_ln27_fu_239_p2 );
    sensitive << ( grp_fu_137_p2 );

    SC_METHOD(thread_and_ln27_fu_239_p2);
    sensitive << ( or_ln27_fu_215_p2 );
    sensitive << ( or_ln27_1_fu_233_p2 );

    SC_METHOD(thread_and_ln29_1_fu_293_p2);
    sensitive << ( and_ln29_fu_287_p2 );
    sensitive << ( grp_fu_141_p2 );

    SC_METHOD(thread_and_ln29_fu_287_p2);
    sensitive << ( or_ln27_fu_215_p2 );
    sensitive << ( or_ln29_fu_281_p2 );

    SC_METHOD(thread_and_ln32_1_fu_313_p2);
    sensitive << ( and_ln32_fu_307_p2 );
    sensitive << ( grp_fu_145_p2 );

    SC_METHOD(thread_and_ln32_fu_307_p2);
    sensitive << ( or_ln27_1_fu_233_p2 );
    sensitive << ( or_ln29_fu_281_p2 );

    SC_METHOD(thread_and_ln39_1_fu_413_p2);
    sensitive << ( grp_fu_137_p2 );
    sensitive << ( and_ln39_fu_407_p2 );

    SC_METHOD(thread_and_ln39_fu_407_p2);
    sensitive << ( or_ln39_fu_383_p2 );
    sensitive << ( or_ln39_1_fu_401_p2 );

    SC_METHOD(thread_and_ln41_1_fu_461_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( and_ln41_fu_455_p2 );

    SC_METHOD(thread_and_ln41_fu_455_p2);
    sensitive << ( or_ln39_fu_383_p2 );
    sensitive << ( or_ln41_fu_449_p2 );

    SC_METHOD(thread_and_ln44_1_fu_481_p2);
    sensitive << ( grp_fu_145_p2 );
    sensitive << ( and_ln44_fu_475_p2 );

    SC_METHOD(thread_and_ln44_fu_475_p2);
    sensitive << ( or_ln39_1_fu_401_p2 );
    sensitive << ( or_ln41_fu_449_p2 );

    SC_METHOD(thread_and_ln62_1_fu_575_p2);
    sensitive << ( grp_fu_137_p2 );
    sensitive << ( and_ln62_fu_569_p2 );

    SC_METHOD(thread_and_ln62_fu_569_p2);
    sensitive << ( or_ln62_fu_561_p2 );
    sensitive << ( or_ln62_1_fu_565_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( and_ln62_1_fu_575_p2 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_bitcast_ln27_1_fu_185_p1);
    sensitive << ( reg_155 );

    SC_METHOD(thread_bitcast_ln27_fu_167_p1);
    sensitive << ( reg_149 );

    SC_METHOD(thread_bitcast_ln29_fu_251_p1);
    sensitive << ( reg_161 );

    SC_METHOD(thread_bitcast_ln39_1_fu_353_p1);
    sensitive << ( reg_155 );

    SC_METHOD(thread_bitcast_ln39_fu_335_p1);
    sensitive << ( reg_149 );

    SC_METHOD(thread_bitcast_ln41_fu_419_p1);
    sensitive << ( reg_161 );

    SC_METHOD(thread_bitcast_ln62_1_fu_520_p1);
    sensitive << ( min_7_reg_683 );

    SC_METHOD(thread_bitcast_ln62_fu_503_p1);
    sensitive << ( max_reg_677 );

    SC_METHOD(thread_grp_fu_125_p0);
    sensitive << ( tmp_i_reg_629 );
    sensitive << ( tmp_i_4_reg_662 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_129_p0);
    sensitive << ( tmp_i1_reg_640 );
    sensitive << ( tmp_i2_reg_667 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_133_p0);
    sensitive << ( tmp_i5_reg_651 );
    sensitive << ( tmp_i6_reg_672 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_137_opcode);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_137_p0);
    sensitive << ( reg_149 );
    sensitive << ( max_reg_677 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_137_p1);
    sensitive << ( reg_155 );
    sensitive << ( min_7_reg_683 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_141_opcode);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_145_opcode);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_86_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_86_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grid_x );
    sensitive << ( tmp_i_reg_629 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_86_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( edge_p1_x );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_92_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_92_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( edge_p2_x );
    sensitive << ( tmp_i1_reg_640 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_92_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( edge_p1_x );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_98_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_98_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grid_y );
    sensitive << ( tmp_i5_reg_651 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_98_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( edge_p1_y );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln27_1_fu_209_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( trunc_ln27_fu_181_p1 );

    SC_METHOD(thread_icmp_ln27_2_fu_221_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_s_fu_189_p4 );

    SC_METHOD(thread_icmp_ln27_3_fu_227_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( trunc_ln27_1_fu_199_p1 );

    SC_METHOD(thread_icmp_ln27_fu_203_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_9_fu_171_p4 );

    SC_METHOD(thread_icmp_ln29_1_fu_275_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( trunc_ln29_fu_265_p1 );

    SC_METHOD(thread_icmp_ln29_fu_269_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_6_fu_255_p4 );

    SC_METHOD(thread_icmp_ln39_1_fu_377_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( trunc_ln39_fu_349_p1 );

    SC_METHOD(thread_icmp_ln39_2_fu_389_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_1_fu_357_p4 );

    SC_METHOD(thread_icmp_ln39_3_fu_395_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( trunc_ln39_1_fu_367_p1 );

    SC_METHOD(thread_icmp_ln39_fu_371_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_fu_339_p4 );

    SC_METHOD(thread_icmp_ln41_1_fu_443_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( trunc_ln41_fu_433_p1 );

    SC_METHOD(thread_icmp_ln41_fu_437_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_3_fu_423_p4 );

    SC_METHOD(thread_icmp_ln62_1_fu_543_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( trunc_ln62_fu_516_p1 );

    SC_METHOD(thread_icmp_ln62_2_fu_549_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_12_fu_523_p4 );

    SC_METHOD(thread_icmp_ln62_3_fu_555_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( trunc_ln62_1_fu_533_p1 );

    SC_METHOD(thread_icmp_ln62_fu_537_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_11_fu_506_p4 );

    SC_METHOD(thread_max_4_fu_299_p3);
    sensitive << ( reg_149 );
    sensitive << ( reg_161 );
    sensitive << ( and_ln29_1_fu_293_p2 );

    SC_METHOD(thread_max_6_fu_319_p3);
    sensitive << ( reg_155 );
    sensitive << ( reg_161 );
    sensitive << ( and_ln32_1_fu_313_p2 );

    SC_METHOD(thread_max_fu_327_p3);
    sensitive << ( and_ln27_1_fu_245_p2 );
    sensitive << ( max_4_fu_299_p3 );
    sensitive << ( max_6_fu_319_p3 );

    SC_METHOD(thread_min_2_fu_467_p3);
    sensitive << ( reg_149 );
    sensitive << ( reg_161 );
    sensitive << ( and_ln41_1_fu_461_p2 );

    SC_METHOD(thread_min_4_fu_487_p3);
    sensitive << ( reg_155 );
    sensitive << ( reg_161 );
    sensitive << ( and_ln44_1_fu_481_p2 );

    SC_METHOD(thread_min_7_fu_495_p3);
    sensitive << ( and_ln39_1_fu_413_p2 );
    sensitive << ( min_2_fu_467_p3 );
    sensitive << ( min_4_fu_487_p3 );

    SC_METHOD(thread_or_ln27_1_fu_233_p2);
    sensitive << ( icmp_ln27_3_fu_227_p2 );
    sensitive << ( icmp_ln27_2_fu_221_p2 );

    SC_METHOD(thread_or_ln27_fu_215_p2);
    sensitive << ( icmp_ln27_1_fu_209_p2 );
    sensitive << ( icmp_ln27_fu_203_p2 );

    SC_METHOD(thread_or_ln29_fu_281_p2);
    sensitive << ( icmp_ln29_1_fu_275_p2 );
    sensitive << ( icmp_ln29_fu_269_p2 );

    SC_METHOD(thread_or_ln39_1_fu_401_p2);
    sensitive << ( icmp_ln39_3_fu_395_p2 );
    sensitive << ( icmp_ln39_2_fu_389_p2 );

    SC_METHOD(thread_or_ln39_fu_383_p2);
    sensitive << ( icmp_ln39_1_fu_377_p2 );
    sensitive << ( icmp_ln39_fu_371_p2 );

    SC_METHOD(thread_or_ln41_fu_449_p2);
    sensitive << ( icmp_ln41_1_fu_443_p2 );
    sensitive << ( icmp_ln41_fu_437_p2 );

    SC_METHOD(thread_or_ln62_1_fu_565_p2);
    sensitive << ( icmp_ln62_2_reg_699 );
    sensitive << ( icmp_ln62_3_reg_704 );

    SC_METHOD(thread_or_ln62_fu_561_p2);
    sensitive << ( icmp_ln62_reg_689 );
    sensitive << ( icmp_ln62_1_reg_694 );

    SC_METHOD(thread_tmp_11_fu_506_p4);
    sensitive << ( bitcast_ln62_fu_503_p1 );

    SC_METHOD(thread_tmp_12_fu_523_p4);
    sensitive << ( bitcast_ln62_1_fu_520_p1 );

    SC_METHOD(thread_tmp_1_fu_357_p4);
    sensitive << ( bitcast_ln39_1_fu_353_p1 );

    SC_METHOD(thread_tmp_3_fu_423_p4);
    sensitive << ( bitcast_ln41_fu_419_p1 );

    SC_METHOD(thread_tmp_6_fu_255_p4);
    sensitive << ( bitcast_ln29_fu_251_p1 );

    SC_METHOD(thread_tmp_9_fu_171_p4);
    sensitive << ( bitcast_ln27_fu_167_p1 );

    SC_METHOD(thread_tmp_fu_339_p4);
    sensitive << ( bitcast_ln39_fu_335_p1 );

    SC_METHOD(thread_tmp_s_fu_189_p4);
    sensitive << ( bitcast_ln27_1_fu_185_p1 );

    SC_METHOD(thread_trunc_ln27_1_fu_199_p1);
    sensitive << ( bitcast_ln27_1_fu_185_p1 );

    SC_METHOD(thread_trunc_ln27_fu_181_p1);
    sensitive << ( bitcast_ln27_fu_167_p1 );

    SC_METHOD(thread_trunc_ln29_fu_265_p1);
    sensitive << ( bitcast_ln29_fu_251_p1 );

    SC_METHOD(thread_trunc_ln39_1_fu_367_p1);
    sensitive << ( bitcast_ln39_1_fu_353_p1 );

    SC_METHOD(thread_trunc_ln39_fu_349_p1);
    sensitive << ( bitcast_ln39_fu_335_p1 );

    SC_METHOD(thread_trunc_ln41_fu_433_p1);
    sensitive << ( bitcast_ln41_fu_419_p1 );

    SC_METHOD(thread_trunc_ln62_1_fu_533_p1);
    sensitive << ( bitcast_ln62_1_fu_520_p1 );

    SC_METHOD(thread_trunc_ln62_fu_516_p1);
    sensitive << ( bitcast_ln62_fu_503_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000001";
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "lineIntersectGrid_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, grid_x, "(port)grid_x");
    sc_trace(mVcdFile, grid_y, "(port)grid_y");
    sc_trace(mVcdFile, grid_z, "(port)grid_z");
    sc_trace(mVcdFile, edge_p1_x, "(port)edge_p1_x");
    sc_trace(mVcdFile, edge_p1_y, "(port)edge_p1_y");
    sc_trace(mVcdFile, edge_p1_z, "(port)edge_p1_z");
    sc_trace(mVcdFile, edge_p2_x, "(port)edge_p2_x");
    sc_trace(mVcdFile, edge_p2_y, "(port)edge_p2_y");
    sc_trace(mVcdFile, edge_p2_z, "(port)edge_p2_z");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_125_p2, "grp_fu_125_p2");
    sc_trace(mVcdFile, reg_149, "reg_149");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_129_p2, "grp_fu_129_p2");
    sc_trace(mVcdFile, reg_155, "reg_155");
    sc_trace(mVcdFile, grp_fu_133_p2, "grp_fu_133_p2");
    sc_trace(mVcdFile, reg_161, "reg_161");
    sc_trace(mVcdFile, grp_fu_86_p2, "grp_fu_86_p2");
    sc_trace(mVcdFile, tmp_i_reg_629, "tmp_i_reg_629");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_92_p2, "grp_fu_92_p2");
    sc_trace(mVcdFile, tmp_1_i_reg_635, "tmp_1_i_reg_635");
    sc_trace(mVcdFile, grp_fu_98_p2, "grp_fu_98_p2");
    sc_trace(mVcdFile, tmp_i1_reg_640, "tmp_i1_reg_640");
    sc_trace(mVcdFile, grp_fu_104_p2, "grp_fu_104_p2");
    sc_trace(mVcdFile, tmp_1_i3_reg_646, "tmp_1_i3_reg_646");
    sc_trace(mVcdFile, grp_fu_110_p2, "grp_fu_110_p2");
    sc_trace(mVcdFile, tmp_i5_reg_651, "tmp_i5_reg_651");
    sc_trace(mVcdFile, grp_fu_116_p2, "grp_fu_116_p2");
    sc_trace(mVcdFile, tmp_1_i7_reg_657, "tmp_1_i7_reg_657");
    sc_trace(mVcdFile, tmp_i_4_reg_662, "tmp_i_4_reg_662");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_i2_reg_667, "tmp_i2_reg_667");
    sc_trace(mVcdFile, tmp_i6_reg_672, "tmp_i6_reg_672");
    sc_trace(mVcdFile, max_fu_327_p3, "max_fu_327_p3");
    sc_trace(mVcdFile, max_reg_677, "max_reg_677");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, min_7_fu_495_p3, "min_7_fu_495_p3");
    sc_trace(mVcdFile, min_7_reg_683, "min_7_reg_683");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, icmp_ln62_fu_537_p2, "icmp_ln62_fu_537_p2");
    sc_trace(mVcdFile, icmp_ln62_reg_689, "icmp_ln62_reg_689");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, icmp_ln62_1_fu_543_p2, "icmp_ln62_1_fu_543_p2");
    sc_trace(mVcdFile, icmp_ln62_1_reg_694, "icmp_ln62_1_reg_694");
    sc_trace(mVcdFile, icmp_ln62_2_fu_549_p2, "icmp_ln62_2_fu_549_p2");
    sc_trace(mVcdFile, icmp_ln62_2_reg_699, "icmp_ln62_2_reg_699");
    sc_trace(mVcdFile, icmp_ln62_3_fu_555_p2, "icmp_ln62_3_fu_555_p2");
    sc_trace(mVcdFile, icmp_ln62_3_reg_704, "icmp_ln62_3_reg_704");
    sc_trace(mVcdFile, grp_fu_86_p0, "grp_fu_86_p0");
    sc_trace(mVcdFile, grp_fu_86_p1, "grp_fu_86_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_92_p0, "grp_fu_92_p0");
    sc_trace(mVcdFile, grp_fu_92_p1, "grp_fu_92_p1");
    sc_trace(mVcdFile, grp_fu_98_p0, "grp_fu_98_p0");
    sc_trace(mVcdFile, grp_fu_98_p1, "grp_fu_98_p1");
    sc_trace(mVcdFile, grp_fu_125_p0, "grp_fu_125_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_129_p0, "grp_fu_129_p0");
    sc_trace(mVcdFile, grp_fu_133_p0, "grp_fu_133_p0");
    sc_trace(mVcdFile, grp_fu_137_p0, "grp_fu_137_p0");
    sc_trace(mVcdFile, grp_fu_137_p1, "grp_fu_137_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, bitcast_ln27_fu_167_p1, "bitcast_ln27_fu_167_p1");
    sc_trace(mVcdFile, bitcast_ln27_1_fu_185_p1, "bitcast_ln27_1_fu_185_p1");
    sc_trace(mVcdFile, tmp_9_fu_171_p4, "tmp_9_fu_171_p4");
    sc_trace(mVcdFile, trunc_ln27_fu_181_p1, "trunc_ln27_fu_181_p1");
    sc_trace(mVcdFile, icmp_ln27_1_fu_209_p2, "icmp_ln27_1_fu_209_p2");
    sc_trace(mVcdFile, icmp_ln27_fu_203_p2, "icmp_ln27_fu_203_p2");
    sc_trace(mVcdFile, tmp_s_fu_189_p4, "tmp_s_fu_189_p4");
    sc_trace(mVcdFile, trunc_ln27_1_fu_199_p1, "trunc_ln27_1_fu_199_p1");
    sc_trace(mVcdFile, icmp_ln27_3_fu_227_p2, "icmp_ln27_3_fu_227_p2");
    sc_trace(mVcdFile, icmp_ln27_2_fu_221_p2, "icmp_ln27_2_fu_221_p2");
    sc_trace(mVcdFile, or_ln27_fu_215_p2, "or_ln27_fu_215_p2");
    sc_trace(mVcdFile, or_ln27_1_fu_233_p2, "or_ln27_1_fu_233_p2");
    sc_trace(mVcdFile, and_ln27_fu_239_p2, "and_ln27_fu_239_p2");
    sc_trace(mVcdFile, grp_fu_137_p2, "grp_fu_137_p2");
    sc_trace(mVcdFile, bitcast_ln29_fu_251_p1, "bitcast_ln29_fu_251_p1");
    sc_trace(mVcdFile, tmp_6_fu_255_p4, "tmp_6_fu_255_p4");
    sc_trace(mVcdFile, trunc_ln29_fu_265_p1, "trunc_ln29_fu_265_p1");
    sc_trace(mVcdFile, icmp_ln29_1_fu_275_p2, "icmp_ln29_1_fu_275_p2");
    sc_trace(mVcdFile, icmp_ln29_fu_269_p2, "icmp_ln29_fu_269_p2");
    sc_trace(mVcdFile, or_ln29_fu_281_p2, "or_ln29_fu_281_p2");
    sc_trace(mVcdFile, and_ln29_fu_287_p2, "and_ln29_fu_287_p2");
    sc_trace(mVcdFile, grp_fu_141_p2, "grp_fu_141_p2");
    sc_trace(mVcdFile, and_ln29_1_fu_293_p2, "and_ln29_1_fu_293_p2");
    sc_trace(mVcdFile, and_ln32_fu_307_p2, "and_ln32_fu_307_p2");
    sc_trace(mVcdFile, grp_fu_145_p2, "grp_fu_145_p2");
    sc_trace(mVcdFile, and_ln32_1_fu_313_p2, "and_ln32_1_fu_313_p2");
    sc_trace(mVcdFile, and_ln27_1_fu_245_p2, "and_ln27_1_fu_245_p2");
    sc_trace(mVcdFile, max_4_fu_299_p3, "max_4_fu_299_p3");
    sc_trace(mVcdFile, max_6_fu_319_p3, "max_6_fu_319_p3");
    sc_trace(mVcdFile, bitcast_ln39_fu_335_p1, "bitcast_ln39_fu_335_p1");
    sc_trace(mVcdFile, bitcast_ln39_1_fu_353_p1, "bitcast_ln39_1_fu_353_p1");
    sc_trace(mVcdFile, tmp_fu_339_p4, "tmp_fu_339_p4");
    sc_trace(mVcdFile, trunc_ln39_fu_349_p1, "trunc_ln39_fu_349_p1");
    sc_trace(mVcdFile, icmp_ln39_1_fu_377_p2, "icmp_ln39_1_fu_377_p2");
    sc_trace(mVcdFile, icmp_ln39_fu_371_p2, "icmp_ln39_fu_371_p2");
    sc_trace(mVcdFile, tmp_1_fu_357_p4, "tmp_1_fu_357_p4");
    sc_trace(mVcdFile, trunc_ln39_1_fu_367_p1, "trunc_ln39_1_fu_367_p1");
    sc_trace(mVcdFile, icmp_ln39_3_fu_395_p2, "icmp_ln39_3_fu_395_p2");
    sc_trace(mVcdFile, icmp_ln39_2_fu_389_p2, "icmp_ln39_2_fu_389_p2");
    sc_trace(mVcdFile, or_ln39_fu_383_p2, "or_ln39_fu_383_p2");
    sc_trace(mVcdFile, or_ln39_1_fu_401_p2, "or_ln39_1_fu_401_p2");
    sc_trace(mVcdFile, and_ln39_fu_407_p2, "and_ln39_fu_407_p2");
    sc_trace(mVcdFile, bitcast_ln41_fu_419_p1, "bitcast_ln41_fu_419_p1");
    sc_trace(mVcdFile, tmp_3_fu_423_p4, "tmp_3_fu_423_p4");
    sc_trace(mVcdFile, trunc_ln41_fu_433_p1, "trunc_ln41_fu_433_p1");
    sc_trace(mVcdFile, icmp_ln41_1_fu_443_p2, "icmp_ln41_1_fu_443_p2");
    sc_trace(mVcdFile, icmp_ln41_fu_437_p2, "icmp_ln41_fu_437_p2");
    sc_trace(mVcdFile, or_ln41_fu_449_p2, "or_ln41_fu_449_p2");
    sc_trace(mVcdFile, and_ln41_fu_455_p2, "and_ln41_fu_455_p2");
    sc_trace(mVcdFile, and_ln41_1_fu_461_p2, "and_ln41_1_fu_461_p2");
    sc_trace(mVcdFile, and_ln44_fu_475_p2, "and_ln44_fu_475_p2");
    sc_trace(mVcdFile, and_ln44_1_fu_481_p2, "and_ln44_1_fu_481_p2");
    sc_trace(mVcdFile, and_ln39_1_fu_413_p2, "and_ln39_1_fu_413_p2");
    sc_trace(mVcdFile, min_2_fu_467_p3, "min_2_fu_467_p3");
    sc_trace(mVcdFile, min_4_fu_487_p3, "min_4_fu_487_p3");
    sc_trace(mVcdFile, bitcast_ln62_fu_503_p1, "bitcast_ln62_fu_503_p1");
    sc_trace(mVcdFile, bitcast_ln62_1_fu_520_p1, "bitcast_ln62_1_fu_520_p1");
    sc_trace(mVcdFile, tmp_11_fu_506_p4, "tmp_11_fu_506_p4");
    sc_trace(mVcdFile, trunc_ln62_fu_516_p1, "trunc_ln62_fu_516_p1");
    sc_trace(mVcdFile, tmp_12_fu_523_p4, "tmp_12_fu_523_p4");
    sc_trace(mVcdFile, trunc_ln62_1_fu_533_p1, "trunc_ln62_1_fu_533_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, or_ln62_fu_561_p2, "or_ln62_fu_561_p2");
    sc_trace(mVcdFile, or_ln62_1_fu_565_p2, "or_ln62_1_fu_565_p2");
    sc_trace(mVcdFile, and_ln62_fu_569_p2, "and_ln62_fu_569_p2");
    sc_trace(mVcdFile, grp_fu_86_opcode, "grp_fu_86_opcode");
    sc_trace(mVcdFile, grp_fu_92_opcode, "grp_fu_92_opcode");
    sc_trace(mVcdFile, grp_fu_98_opcode, "grp_fu_98_opcode");
    sc_trace(mVcdFile, grp_fu_137_opcode, "grp_fu_137_opcode");
    sc_trace(mVcdFile, grp_fu_141_opcode, "grp_fu_141_opcode");
    sc_trace(mVcdFile, grp_fu_145_opcode, "grp_fu_145_opcode");
    sc_trace(mVcdFile, and_ln62_1_fu_575_p2, "and_ln62_1_fu_575_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

lineIntersectGrid::~lineIntersectGrid() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete honeybee_faddfsubbkb_U1;
    delete honeybee_faddfsubbkb_U2;
    delete honeybee_faddfsubbkb_U3;
    delete honeybee_fsub_32ncud_U4;
    delete honeybee_fsub_32ncud_U5;
    delete honeybee_fsub_32ncud_U6;
    delete honeybee_fdiv_32ndEe_U7;
    delete honeybee_fdiv_32ndEe_U8;
    delete honeybee_fdiv_32ndEe_U9;
    delete honeybee_fcmp_32neOg_U10;
    delete honeybee_fcmp_32neOg_U11;
    delete honeybee_fcmp_32neOg_U12;
}

void lineIntersectGrid::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void lineIntersectGrid::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
            ap_return_preg = and_ln62_1_fu_575_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        icmp_ln62_1_reg_694 = icmp_ln62_1_fu_543_p2.read();
        icmp_ln62_2_reg_699 = icmp_ln62_2_fu_549_p2.read();
        icmp_ln62_3_reg_704 = icmp_ln62_3_fu_555_p2.read();
        icmp_ln62_reg_689 = icmp_ln62_fu_537_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        max_reg_677 = max_fu_327_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        min_7_reg_683 = min_7_fu_495_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        reg_149 = grp_fu_125_p2.read();
        reg_155 = grp_fu_129_p2.read();
        reg_161 = grp_fu_133_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_1_i3_reg_646 = grp_fu_104_p2.read();
        tmp_1_i7_reg_657 = grp_fu_116_p2.read();
        tmp_1_i_reg_635 = grp_fu_92_p2.read();
        tmp_i1_reg_640 = grp_fu_98_p2.read();
        tmp_i5_reg_651 = grp_fu_110_p2.read();
        tmp_i_reg_629 = grp_fu_86_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_i2_reg_667 = grp_fu_92_p2.read();
        tmp_i6_reg_672 = grp_fu_98_p2.read();
        tmp_i_4_reg_662 = grp_fu_86_p2.read();
    }
}

void lineIntersectGrid::thread_and_ln27_1_fu_245_p2() {
    and_ln27_1_fu_245_p2 = (and_ln27_fu_239_p2.read() & grp_fu_137_p2.read());
}

void lineIntersectGrid::thread_and_ln27_fu_239_p2() {
    and_ln27_fu_239_p2 = (or_ln27_fu_215_p2.read() & or_ln27_1_fu_233_p2.read());
}

void lineIntersectGrid::thread_and_ln29_1_fu_293_p2() {
    and_ln29_1_fu_293_p2 = (and_ln29_fu_287_p2.read() & grp_fu_141_p2.read());
}

void lineIntersectGrid::thread_and_ln29_fu_287_p2() {
    and_ln29_fu_287_p2 = (or_ln29_fu_281_p2.read() & or_ln27_fu_215_p2.read());
}

void lineIntersectGrid::thread_and_ln32_1_fu_313_p2() {
    and_ln32_1_fu_313_p2 = (and_ln32_fu_307_p2.read() & grp_fu_145_p2.read());
}

void lineIntersectGrid::thread_and_ln32_fu_307_p2() {
    and_ln32_fu_307_p2 = (or_ln29_fu_281_p2.read() & or_ln27_1_fu_233_p2.read());
}

void lineIntersectGrid::thread_and_ln39_1_fu_413_p2() {
    and_ln39_1_fu_413_p2 = (and_ln39_fu_407_p2.read() & grp_fu_137_p2.read());
}

void lineIntersectGrid::thread_and_ln39_fu_407_p2() {
    and_ln39_fu_407_p2 = (or_ln39_fu_383_p2.read() & or_ln39_1_fu_401_p2.read());
}

void lineIntersectGrid::thread_and_ln41_1_fu_461_p2() {
    and_ln41_1_fu_461_p2 = (and_ln41_fu_455_p2.read() & grp_fu_141_p2.read());
}

void lineIntersectGrid::thread_and_ln41_fu_455_p2() {
    and_ln41_fu_455_p2 = (or_ln41_fu_449_p2.read() & or_ln39_fu_383_p2.read());
}

void lineIntersectGrid::thread_and_ln44_1_fu_481_p2() {
    and_ln44_1_fu_481_p2 = (and_ln44_fu_475_p2.read() & grp_fu_145_p2.read());
}

void lineIntersectGrid::thread_and_ln44_fu_475_p2() {
    and_ln44_fu_475_p2 = (or_ln41_fu_449_p2.read() & or_ln39_1_fu_401_p2.read());
}

void lineIntersectGrid::thread_and_ln62_1_fu_575_p2() {
    and_ln62_1_fu_575_p2 = (and_ln62_fu_569_p2.read() & grp_fu_137_p2.read());
}

void lineIntersectGrid::thread_and_ln62_fu_569_p2() {
    and_ln62_fu_569_p2 = (or_ln62_fu_561_p2.read() & or_ln62_1_fu_565_p2.read());
}

void lineIntersectGrid::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void lineIntersectGrid::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void lineIntersectGrid::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void lineIntersectGrid::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void lineIntersectGrid::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void lineIntersectGrid::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void lineIntersectGrid::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void lineIntersectGrid::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void lineIntersectGrid::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void lineIntersectGrid::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void lineIntersectGrid::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void lineIntersectGrid::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void lineIntersectGrid::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void lineIntersectGrid::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void lineIntersectGrid::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void lineIntersectGrid::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void lineIntersectGrid::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        ap_return = and_ln62_1_fu_575_p2.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void lineIntersectGrid::thread_bitcast_ln27_1_fu_185_p1() {
    bitcast_ln27_1_fu_185_p1 = reg_155.read();
}

void lineIntersectGrid::thread_bitcast_ln27_fu_167_p1() {
    bitcast_ln27_fu_167_p1 = reg_149.read();
}

void lineIntersectGrid::thread_bitcast_ln29_fu_251_p1() {
    bitcast_ln29_fu_251_p1 = reg_161.read();
}

void lineIntersectGrid::thread_bitcast_ln39_1_fu_353_p1() {
    bitcast_ln39_1_fu_353_p1 = reg_155.read();
}

void lineIntersectGrid::thread_bitcast_ln39_fu_335_p1() {
    bitcast_ln39_fu_335_p1 = reg_149.read();
}

void lineIntersectGrid::thread_bitcast_ln41_fu_419_p1() {
    bitcast_ln41_fu_419_p1 = reg_161.read();
}

void lineIntersectGrid::thread_bitcast_ln62_1_fu_520_p1() {
    bitcast_ln62_1_fu_520_p1 = min_7_reg_683.read();
}

void lineIntersectGrid::thread_bitcast_ln62_fu_503_p1() {
    bitcast_ln62_fu_503_p1 = max_reg_677.read();
}

void lineIntersectGrid::thread_grp_fu_125_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_125_p0 = tmp_i_4_reg_662.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_125_p0 = tmp_i_reg_629.read();
    } else {
        grp_fu_125_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_129_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_129_p0 = tmp_i2_reg_667.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_129_p0 = tmp_i1_reg_640.read();
    } else {
        grp_fu_129_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_133_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_133_p0 = tmp_i6_reg_672.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_133_p0 = tmp_i5_reg_651.read();
    } else {
        grp_fu_133_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_137_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        grp_fu_137_opcode = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_137_opcode = ap_const_lv5_2;
    } else {
        grp_fu_137_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void lineIntersectGrid::thread_grp_fu_137_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_137_p0 = max_reg_677.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        grp_fu_137_p0 = reg_149.read();
    } else {
        grp_fu_137_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_137_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_137_p1 = min_7_reg_683.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        grp_fu_137_p1 = reg_155.read();
    } else {
        grp_fu_137_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_141_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_141_opcode = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_141_opcode = ap_const_lv5_2;
    } else {
        grp_fu_141_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void lineIntersectGrid::thread_grp_fu_145_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_145_opcode = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_145_opcode = ap_const_lv5_2;
    } else {
        grp_fu_145_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void lineIntersectGrid::thread_grp_fu_86_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_86_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_86_opcode = ap_const_lv2_0;
    } else {
        grp_fu_86_opcode =  (sc_lv<2>) ("XX");
    }
}

void lineIntersectGrid::thread_grp_fu_86_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_86_p0 = tmp_i_reg_629.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_86_p0 = grid_x.read();
    } else {
        grp_fu_86_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_86_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_86_p1 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_86_p1 = edge_p1_x.read();
    } else {
        grp_fu_86_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_92_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_92_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_92_opcode = ap_const_lv2_0;
    } else {
        grp_fu_92_opcode =  (sc_lv<2>) ("XX");
    }
}

void lineIntersectGrid::thread_grp_fu_92_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_92_p0 = tmp_i1_reg_640.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_92_p0 = edge_p2_x.read();
    } else {
        grp_fu_92_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_92_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_92_p1 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_92_p1 = edge_p1_x.read();
    } else {
        grp_fu_92_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_98_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_98_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_98_opcode = ap_const_lv2_0;
    } else {
        grp_fu_98_opcode =  (sc_lv<2>) ("XX");
    }
}

void lineIntersectGrid::thread_grp_fu_98_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_98_p0 = tmp_i5_reg_651.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_98_p0 = grid_y.read();
    } else {
        grp_fu_98_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_grp_fu_98_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_98_p1 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_98_p1 = edge_p1_y.read();
    } else {
        grp_fu_98_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void lineIntersectGrid::thread_icmp_ln27_1_fu_209_p2() {
    icmp_ln27_1_fu_209_p2 = (!trunc_ln27_fu_181_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln27_fu_181_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln27_2_fu_221_p2() {
    icmp_ln27_2_fu_221_p2 = (!tmp_s_fu_189_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_s_fu_189_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_icmp_ln27_3_fu_227_p2() {
    icmp_ln27_3_fu_227_p2 = (!trunc_ln27_1_fu_199_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln27_1_fu_199_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln27_fu_203_p2() {
    icmp_ln27_fu_203_p2 = (!tmp_9_fu_171_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_171_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_icmp_ln29_1_fu_275_p2() {
    icmp_ln29_1_fu_275_p2 = (!trunc_ln29_fu_265_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln29_fu_265_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln29_fu_269_p2() {
    icmp_ln29_fu_269_p2 = (!tmp_6_fu_255_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_255_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_icmp_ln39_1_fu_377_p2() {
    icmp_ln39_1_fu_377_p2 = (!trunc_ln39_fu_349_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln39_fu_349_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln39_2_fu_389_p2() {
    icmp_ln39_2_fu_389_p2 = (!tmp_1_fu_357_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_357_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_icmp_ln39_3_fu_395_p2() {
    icmp_ln39_3_fu_395_p2 = (!trunc_ln39_1_fu_367_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln39_1_fu_367_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln39_fu_371_p2() {
    icmp_ln39_fu_371_p2 = (!tmp_fu_339_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_339_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_icmp_ln41_1_fu_443_p2() {
    icmp_ln41_1_fu_443_p2 = (!trunc_ln41_fu_433_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln41_fu_433_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln41_fu_437_p2() {
    icmp_ln41_fu_437_p2 = (!tmp_3_fu_423_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_423_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_icmp_ln62_1_fu_543_p2() {
    icmp_ln62_1_fu_543_p2 = (!trunc_ln62_fu_516_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln62_fu_516_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln62_2_fu_549_p2() {
    icmp_ln62_2_fu_549_p2 = (!tmp_12_fu_523_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_523_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_icmp_ln62_3_fu_555_p2() {
    icmp_ln62_3_fu_555_p2 = (!trunc_ln62_1_fu_533_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln62_1_fu_533_p1.read() == ap_const_lv23_0);
}

void lineIntersectGrid::thread_icmp_ln62_fu_537_p2() {
    icmp_ln62_fu_537_p2 = (!tmp_11_fu_506_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_fu_506_p4.read() != ap_const_lv8_FF);
}

void lineIntersectGrid::thread_max_4_fu_299_p3() {
    max_4_fu_299_p3 = (!and_ln29_1_fu_293_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln29_1_fu_293_p2.read()[0].to_bool())? reg_161.read(): reg_149.read());
}

void lineIntersectGrid::thread_max_6_fu_319_p3() {
    max_6_fu_319_p3 = (!and_ln32_1_fu_313_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln32_1_fu_313_p2.read()[0].to_bool())? reg_161.read(): reg_155.read());
}

void lineIntersectGrid::thread_max_fu_327_p3() {
    max_fu_327_p3 = (!and_ln27_1_fu_245_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln27_1_fu_245_p2.read()[0].to_bool())? max_4_fu_299_p3.read(): max_6_fu_319_p3.read());
}

void lineIntersectGrid::thread_min_2_fu_467_p3() {
    min_2_fu_467_p3 = (!and_ln41_1_fu_461_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln41_1_fu_461_p2.read()[0].to_bool())? reg_161.read(): reg_149.read());
}

void lineIntersectGrid::thread_min_4_fu_487_p3() {
    min_4_fu_487_p3 = (!and_ln44_1_fu_481_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln44_1_fu_481_p2.read()[0].to_bool())? reg_161.read(): reg_155.read());
}

void lineIntersectGrid::thread_min_7_fu_495_p3() {
    min_7_fu_495_p3 = (!and_ln39_1_fu_413_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln39_1_fu_413_p2.read()[0].to_bool())? min_2_fu_467_p3.read(): min_4_fu_487_p3.read());
}

void lineIntersectGrid::thread_or_ln27_1_fu_233_p2() {
    or_ln27_1_fu_233_p2 = (icmp_ln27_3_fu_227_p2.read() | icmp_ln27_2_fu_221_p2.read());
}

void lineIntersectGrid::thread_or_ln27_fu_215_p2() {
    or_ln27_fu_215_p2 = (icmp_ln27_1_fu_209_p2.read() | icmp_ln27_fu_203_p2.read());
}

void lineIntersectGrid::thread_or_ln29_fu_281_p2() {
    or_ln29_fu_281_p2 = (icmp_ln29_1_fu_275_p2.read() | icmp_ln29_fu_269_p2.read());
}

void lineIntersectGrid::thread_or_ln39_1_fu_401_p2() {
    or_ln39_1_fu_401_p2 = (icmp_ln39_3_fu_395_p2.read() | icmp_ln39_2_fu_389_p2.read());
}

void lineIntersectGrid::thread_or_ln39_fu_383_p2() {
    or_ln39_fu_383_p2 = (icmp_ln39_1_fu_377_p2.read() | icmp_ln39_fu_371_p2.read());
}

void lineIntersectGrid::thread_or_ln41_fu_449_p2() {
    or_ln41_fu_449_p2 = (icmp_ln41_1_fu_443_p2.read() | icmp_ln41_fu_437_p2.read());
}

void lineIntersectGrid::thread_or_ln62_1_fu_565_p2() {
    or_ln62_1_fu_565_p2 = (icmp_ln62_3_reg_704.read() | icmp_ln62_2_reg_699.read());
}

void lineIntersectGrid::thread_or_ln62_fu_561_p2() {
    or_ln62_fu_561_p2 = (icmp_ln62_1_reg_694.read() | icmp_ln62_reg_689.read());
}

void lineIntersectGrid::thread_tmp_11_fu_506_p4() {
    tmp_11_fu_506_p4 = bitcast_ln62_fu_503_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_tmp_12_fu_523_p4() {
    tmp_12_fu_523_p4 = bitcast_ln62_1_fu_520_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_tmp_1_fu_357_p4() {
    tmp_1_fu_357_p4 = bitcast_ln39_1_fu_353_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_tmp_3_fu_423_p4() {
    tmp_3_fu_423_p4 = bitcast_ln41_fu_419_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_tmp_6_fu_255_p4() {
    tmp_6_fu_255_p4 = bitcast_ln29_fu_251_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_tmp_9_fu_171_p4() {
    tmp_9_fu_171_p4 = bitcast_ln27_fu_167_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_tmp_fu_339_p4() {
    tmp_fu_339_p4 = bitcast_ln39_fu_335_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_tmp_s_fu_189_p4() {
    tmp_s_fu_189_p4 = bitcast_ln27_1_fu_185_p1.read().range(30, 23);
}

void lineIntersectGrid::thread_trunc_ln27_1_fu_199_p1() {
    trunc_ln27_1_fu_199_p1 = bitcast_ln27_1_fu_185_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_trunc_ln27_fu_181_p1() {
    trunc_ln27_fu_181_p1 = bitcast_ln27_fu_167_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_trunc_ln29_fu_265_p1() {
    trunc_ln29_fu_265_p1 = bitcast_ln29_fu_251_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_trunc_ln39_1_fu_367_p1() {
    trunc_ln39_1_fu_367_p1 = bitcast_ln39_1_fu_353_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_trunc_ln39_fu_349_p1() {
    trunc_ln39_fu_349_p1 = bitcast_ln39_fu_335_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_trunc_ln41_fu_433_p1() {
    trunc_ln41_fu_433_p1 = bitcast_ln41_fu_419_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_trunc_ln62_1_fu_533_p1() {
    trunc_ln62_1_fu_533_p1 = bitcast_ln62_1_fu_520_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_trunc_ln62_fu_516_p1() {
    trunc_ln62_fu_516_p1 = bitcast_ln62_fu_503_p1.read().range(23-1, 0);
}

void lineIntersectGrid::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<30>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

