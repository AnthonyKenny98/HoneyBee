// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "honeybee.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic honeybee::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic honeybee::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> honeybee::ap_ST_fsm_state1 = "1";
const sc_lv<2> honeybee::ap_ST_fsm_state2 = "10";
const sc_lv<32> honeybee::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> honeybee::ap_const_lv32_1 = "1";
const sc_lv<32> honeybee::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<2> honeybee::ap_const_lv2_3 = "11";
const sc_lv<2> honeybee::ap_const_lv2_2 = "10";
const sc_lv<1> honeybee::ap_const_lv1_1 = "1";
const bool honeybee::ap_const_boolean_0 = false;
const bool honeybee::ap_const_boolean_1 = true;

honeybee::honeybee(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_segmentIntersectsGri_fu_82 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_82");
    grp_segmentIntersectsGri_fu_82->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_82->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_82->ap_start(grp_segmentIntersectsGri_fu_82_ap_start);
    grp_segmentIntersectsGri_fu_82->ap_done(grp_segmentIntersectsGri_fu_82_ap_done);
    grp_segmentIntersectsGri_fu_82->ap_idle(grp_segmentIntersectsGri_fu_82_ap_idle);
    grp_segmentIntersectsGri_fu_82->ap_ready(grp_segmentIntersectsGri_fu_82_ap_ready);
    grp_segmentIntersectsGri_fu_82->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_82->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_82->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_82->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_82->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_82->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_82->grid_x(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_82->grid_y(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_82->grid_z(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_82->ap_return(grp_segmentIntersectsGri_fu_82_ap_return);
    grp_segmentIntersectsGri_fu_104 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_104");
    grp_segmentIntersectsGri_fu_104->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_104->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_104->ap_start(grp_segmentIntersectsGri_fu_104_ap_start);
    grp_segmentIntersectsGri_fu_104->ap_done(grp_segmentIntersectsGri_fu_104_ap_done);
    grp_segmentIntersectsGri_fu_104->ap_idle(grp_segmentIntersectsGri_fu_104_ap_idle);
    grp_segmentIntersectsGri_fu_104->ap_ready(grp_segmentIntersectsGri_fu_104_ap_ready);
    grp_segmentIntersectsGri_fu_104->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_104->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_104->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_104->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_104->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_104->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_104->grid_x(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_104->grid_y(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_104->grid_z(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_104->ap_return(grp_segmentIntersectsGri_fu_104_ap_return);
    grp_segmentIntersectsGri_fu_126 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_126");
    grp_segmentIntersectsGri_fu_126->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_126->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_126->ap_start(grp_segmentIntersectsGri_fu_126_ap_start);
    grp_segmentIntersectsGri_fu_126->ap_done(grp_segmentIntersectsGri_fu_126_ap_done);
    grp_segmentIntersectsGri_fu_126->ap_idle(grp_segmentIntersectsGri_fu_126_ap_idle);
    grp_segmentIntersectsGri_fu_126->ap_ready(grp_segmentIntersectsGri_fu_126_ap_ready);
    grp_segmentIntersectsGri_fu_126->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_126->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_126->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_126->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_126->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_126->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_126->grid_x(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_126->grid_y(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_126->grid_z(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_126->ap_return(grp_segmentIntersectsGri_fu_126_ap_return);
    grp_segmentIntersectsGri_fu_148 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_148");
    grp_segmentIntersectsGri_fu_148->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_148->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_148->ap_start(grp_segmentIntersectsGri_fu_148_ap_start);
    grp_segmentIntersectsGri_fu_148->ap_done(grp_segmentIntersectsGri_fu_148_ap_done);
    grp_segmentIntersectsGri_fu_148->ap_idle(grp_segmentIntersectsGri_fu_148_ap_idle);
    grp_segmentIntersectsGri_fu_148->ap_ready(grp_segmentIntersectsGri_fu_148_ap_ready);
    grp_segmentIntersectsGri_fu_148->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_148->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_148->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_148->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_148->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_148->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_148->grid_x(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_148->grid_y(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_148->grid_z(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_148->ap_return(grp_segmentIntersectsGri_fu_148_ap_return);
    grp_segmentIntersectsGri_fu_170 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_170");
    grp_segmentIntersectsGri_fu_170->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_170->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_170->ap_start(grp_segmentIntersectsGri_fu_170_ap_start);
    grp_segmentIntersectsGri_fu_170->ap_done(grp_segmentIntersectsGri_fu_170_ap_done);
    grp_segmentIntersectsGri_fu_170->ap_idle(grp_segmentIntersectsGri_fu_170_ap_idle);
    grp_segmentIntersectsGri_fu_170->ap_ready(grp_segmentIntersectsGri_fu_170_ap_ready);
    grp_segmentIntersectsGri_fu_170->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_170->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_170->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_170->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_170->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_170->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_170->grid_x(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_170->grid_y(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_170->grid_z(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_170->ap_return(grp_segmentIntersectsGri_fu_170_ap_return);
    grp_segmentIntersectsGri_fu_192 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_192");
    grp_segmentIntersectsGri_fu_192->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_192->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_192->ap_start(grp_segmentIntersectsGri_fu_192_ap_start);
    grp_segmentIntersectsGri_fu_192->ap_done(grp_segmentIntersectsGri_fu_192_ap_done);
    grp_segmentIntersectsGri_fu_192->ap_idle(grp_segmentIntersectsGri_fu_192_ap_idle);
    grp_segmentIntersectsGri_fu_192->ap_ready(grp_segmentIntersectsGri_fu_192_ap_ready);
    grp_segmentIntersectsGri_fu_192->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_192->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_192->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_192->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_192->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_192->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_192->grid_x(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_192->grid_y(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_192->grid_z(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_192->ap_return(grp_segmentIntersectsGri_fu_192_ap_return);
    grp_segmentIntersectsGri_fu_214 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_214");
    grp_segmentIntersectsGri_fu_214->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_214->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_214->ap_start(grp_segmentIntersectsGri_fu_214_ap_start);
    grp_segmentIntersectsGri_fu_214->ap_done(grp_segmentIntersectsGri_fu_214_ap_done);
    grp_segmentIntersectsGri_fu_214->ap_idle(grp_segmentIntersectsGri_fu_214_ap_idle);
    grp_segmentIntersectsGri_fu_214->ap_ready(grp_segmentIntersectsGri_fu_214_ap_ready);
    grp_segmentIntersectsGri_fu_214->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_214->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_214->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_214->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_214->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_214->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_214->grid_x(ap_var_for_const0);
    grp_segmentIntersectsGri_fu_214->grid_y(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_214->grid_z(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_214->ap_return(grp_segmentIntersectsGri_fu_214_ap_return);
    grp_segmentIntersectsGri_fu_236 = new segmentIntersectsGri("grp_segmentIntersectsGri_fu_236");
    grp_segmentIntersectsGri_fu_236->ap_clk(ap_clk);
    grp_segmentIntersectsGri_fu_236->ap_rst(ap_rst);
    grp_segmentIntersectsGri_fu_236->ap_start(grp_segmentIntersectsGri_fu_236_ap_start);
    grp_segmentIntersectsGri_fu_236->ap_done(grp_segmentIntersectsGri_fu_236_ap_done);
    grp_segmentIntersectsGri_fu_236->ap_idle(grp_segmentIntersectsGri_fu_236_ap_idle);
    grp_segmentIntersectsGri_fu_236->ap_ready(grp_segmentIntersectsGri_fu_236_ap_ready);
    grp_segmentIntersectsGri_fu_236->edge_p1_x(edge_p1_x);
    grp_segmentIntersectsGri_fu_236->edge_p1_y(edge_p1_y);
    grp_segmentIntersectsGri_fu_236->edge_p1_z(edge_p1_z);
    grp_segmentIntersectsGri_fu_236->edge_p2_x(edge_p2_x);
    grp_segmentIntersectsGri_fu_236->edge_p2_y(edge_p2_y);
    grp_segmentIntersectsGri_fu_236->edge_p2_z(edge_p2_z);
    grp_segmentIntersectsGri_fu_236->grid_x(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_236->grid_y(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_236->grid_z(ap_var_for_const1);
    grp_segmentIntersectsGri_fu_236->ap_return(grp_segmentIntersectsGri_fu_236_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2_on_subcall_done);
    sensitive << ( grp_segmentIntersectsGri_fu_82_ap_done );
    sensitive << ( grp_segmentIntersectsGri_fu_104_ap_done );
    sensitive << ( grp_segmentIntersectsGri_fu_126_ap_done );
    sensitive << ( grp_segmentIntersectsGri_fu_148_ap_done );
    sensitive << ( grp_segmentIntersectsGri_fu_170_ap_done );
    sensitive << ( grp_segmentIntersectsGri_fu_192_ap_done );
    sensitive << ( grp_segmentIntersectsGri_fu_214_ap_done );
    sensitive << ( grp_segmentIntersectsGri_fu_236_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_segmentIntersectsGri_fu_236_ap_return );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( or_ln159_5_fu_382_p3 );
    sensitive << ( zext_ln158_6_fu_378_p1 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_104_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_104_ap_start_reg );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_126_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_126_ap_start_reg );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_148_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_148_ap_start_reg );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_170_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_170_ap_start_reg );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_192_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_192_ap_start_reg );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_214_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_214_ap_start_reg );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_236_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_236_ap_start_reg );

    SC_METHOD(thread_grp_segmentIntersectsGri_fu_82_ap_start);
    sensitive << ( grp_segmentIntersectsGri_fu_82_ap_start_reg );

    SC_METHOD(thread_or_ln159_1_fu_302_p3);
    sensitive << ( select_ln158_1_fu_290_p3 );

    SC_METHOD(thread_or_ln159_2_fu_322_p3);
    sensitive << ( select_ln158_2_fu_310_p3 );

    SC_METHOD(thread_or_ln159_3_fu_342_p3);
    sensitive << ( select_ln158_3_fu_330_p3 );

    SC_METHOD(thread_or_ln159_4_fu_362_p3);
    sensitive << ( select_ln158_4_fu_350_p3 );

    SC_METHOD(thread_or_ln159_5_fu_382_p3);
    sensitive << ( select_ln158_5_fu_370_p3 );

    SC_METHOD(thread_or_ln_fu_282_p3);
    sensitive << ( select_ln158_fu_270_p3 );

    SC_METHOD(thread_select_ln158_1_fu_290_p3);
    sensitive << ( grp_segmentIntersectsGri_fu_126_ap_return );
    sensitive << ( or_ln_fu_282_p3 );
    sensitive << ( zext_ln158_1_fu_278_p1 );

    SC_METHOD(thread_select_ln158_2_fu_310_p3);
    sensitive << ( grp_segmentIntersectsGri_fu_148_ap_return );
    sensitive << ( or_ln159_1_fu_302_p3 );
    sensitive << ( zext_ln158_2_fu_298_p1 );

    SC_METHOD(thread_select_ln158_3_fu_330_p3);
    sensitive << ( grp_segmentIntersectsGri_fu_170_ap_return );
    sensitive << ( or_ln159_2_fu_322_p3 );
    sensitive << ( zext_ln158_3_fu_318_p1 );

    SC_METHOD(thread_select_ln158_4_fu_350_p3);
    sensitive << ( grp_segmentIntersectsGri_fu_192_ap_return );
    sensitive << ( or_ln159_3_fu_342_p3 );
    sensitive << ( zext_ln158_4_fu_338_p1 );

    SC_METHOD(thread_select_ln158_5_fu_370_p3);
    sensitive << ( grp_segmentIntersectsGri_fu_214_ap_return );
    sensitive << ( or_ln159_4_fu_362_p3 );
    sensitive << ( zext_ln158_5_fu_358_p1 );

    SC_METHOD(thread_select_ln158_fu_270_p3);
    sensitive << ( grp_segmentIntersectsGri_fu_104_ap_return );
    sensitive << ( select_ln159_fu_262_p3 );
    sensitive << ( zext_ln158_fu_258_p1 );

    SC_METHOD(thread_select_ln159_fu_262_p3);
    sensitive << ( grp_segmentIntersectsGri_fu_82_ap_return );

    SC_METHOD(thread_zext_ln158_1_fu_278_p1);
    sensitive << ( select_ln158_fu_270_p3 );

    SC_METHOD(thread_zext_ln158_2_fu_298_p1);
    sensitive << ( select_ln158_1_fu_290_p3 );

    SC_METHOD(thread_zext_ln158_3_fu_318_p1);
    sensitive << ( select_ln158_2_fu_310_p3 );

    SC_METHOD(thread_zext_ln158_4_fu_338_p1);
    sensitive << ( select_ln158_3_fu_330_p3 );

    SC_METHOD(thread_zext_ln158_5_fu_358_p1);
    sensitive << ( select_ln158_4_fu_350_p3 );

    SC_METHOD(thread_zext_ln158_6_fu_378_p1);
    sensitive << ( select_ln158_5_fu_370_p3 );

    SC_METHOD(thread_zext_ln158_fu_258_p1);
    sensitive << ( grp_segmentIntersectsGri_fu_82_ap_return );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "01";
    grp_segmentIntersectsGri_fu_82_ap_start_reg = SC_LOGIC_0;
    grp_segmentIntersectsGri_fu_104_ap_start_reg = SC_LOGIC_0;
    grp_segmentIntersectsGri_fu_126_ap_start_reg = SC_LOGIC_0;
    grp_segmentIntersectsGri_fu_148_ap_start_reg = SC_LOGIC_0;
    grp_segmentIntersectsGri_fu_170_ap_start_reg = SC_LOGIC_0;
    grp_segmentIntersectsGri_fu_192_ap_start_reg = SC_LOGIC_0;
    grp_segmentIntersectsGri_fu_214_ap_start_reg = SC_LOGIC_0;
    grp_segmentIntersectsGri_fu_236_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "honeybee_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, edge_p1_x, "(port)edge_p1_x");
    sc_trace(mVcdFile, edge_p1_y, "(port)edge_p1_y");
    sc_trace(mVcdFile, edge_p1_z, "(port)edge_p1_z");
    sc_trace(mVcdFile, edge_p2_x, "(port)edge_p2_x");
    sc_trace(mVcdFile, edge_p2_y, "(port)edge_p2_y");
    sc_trace(mVcdFile, edge_p2_z, "(port)edge_p2_z");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_82_ap_start, "grp_segmentIntersectsGri_fu_82_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_82_ap_done, "grp_segmentIntersectsGri_fu_82_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_82_ap_idle, "grp_segmentIntersectsGri_fu_82_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_82_ap_ready, "grp_segmentIntersectsGri_fu_82_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_82_ap_return, "grp_segmentIntersectsGri_fu_82_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_104_ap_start, "grp_segmentIntersectsGri_fu_104_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_104_ap_done, "grp_segmentIntersectsGri_fu_104_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_104_ap_idle, "grp_segmentIntersectsGri_fu_104_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_104_ap_ready, "grp_segmentIntersectsGri_fu_104_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_104_ap_return, "grp_segmentIntersectsGri_fu_104_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_126_ap_start, "grp_segmentIntersectsGri_fu_126_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_126_ap_done, "grp_segmentIntersectsGri_fu_126_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_126_ap_idle, "grp_segmentIntersectsGri_fu_126_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_126_ap_ready, "grp_segmentIntersectsGri_fu_126_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_126_ap_return, "grp_segmentIntersectsGri_fu_126_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_148_ap_start, "grp_segmentIntersectsGri_fu_148_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_148_ap_done, "grp_segmentIntersectsGri_fu_148_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_148_ap_idle, "grp_segmentIntersectsGri_fu_148_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_148_ap_ready, "grp_segmentIntersectsGri_fu_148_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_148_ap_return, "grp_segmentIntersectsGri_fu_148_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_170_ap_start, "grp_segmentIntersectsGri_fu_170_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_170_ap_done, "grp_segmentIntersectsGri_fu_170_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_170_ap_idle, "grp_segmentIntersectsGri_fu_170_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_170_ap_ready, "grp_segmentIntersectsGri_fu_170_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_170_ap_return, "grp_segmentIntersectsGri_fu_170_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_192_ap_start, "grp_segmentIntersectsGri_fu_192_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_192_ap_done, "grp_segmentIntersectsGri_fu_192_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_192_ap_idle, "grp_segmentIntersectsGri_fu_192_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_192_ap_ready, "grp_segmentIntersectsGri_fu_192_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_192_ap_return, "grp_segmentIntersectsGri_fu_192_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_214_ap_start, "grp_segmentIntersectsGri_fu_214_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_214_ap_done, "grp_segmentIntersectsGri_fu_214_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_214_ap_idle, "grp_segmentIntersectsGri_fu_214_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_214_ap_ready, "grp_segmentIntersectsGri_fu_214_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_214_ap_return, "grp_segmentIntersectsGri_fu_214_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_236_ap_start, "grp_segmentIntersectsGri_fu_236_ap_start");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_236_ap_done, "grp_segmentIntersectsGri_fu_236_ap_done");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_236_ap_idle, "grp_segmentIntersectsGri_fu_236_ap_idle");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_236_ap_ready, "grp_segmentIntersectsGri_fu_236_ap_ready");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_236_ap_return, "grp_segmentIntersectsGri_fu_236_ap_return");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_82_ap_start_reg, "grp_segmentIntersectsGri_fu_82_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_104_ap_start_reg, "grp_segmentIntersectsGri_fu_104_ap_start_reg");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_126_ap_start_reg, "grp_segmentIntersectsGri_fu_126_ap_start_reg");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_148_ap_start_reg, "grp_segmentIntersectsGri_fu_148_ap_start_reg");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_170_ap_start_reg, "grp_segmentIntersectsGri_fu_170_ap_start_reg");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_192_ap_start_reg, "grp_segmentIntersectsGri_fu_192_ap_start_reg");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_214_ap_start_reg, "grp_segmentIntersectsGri_fu_214_ap_start_reg");
    sc_trace(mVcdFile, grp_segmentIntersectsGri_fu_236_ap_start_reg, "grp_segmentIntersectsGri_fu_236_ap_start_reg");
    sc_trace(mVcdFile, select_ln159_fu_262_p3, "select_ln159_fu_262_p3");
    sc_trace(mVcdFile, zext_ln158_fu_258_p1, "zext_ln158_fu_258_p1");
    sc_trace(mVcdFile, select_ln158_fu_270_p3, "select_ln158_fu_270_p3");
    sc_trace(mVcdFile, or_ln_fu_282_p3, "or_ln_fu_282_p3");
    sc_trace(mVcdFile, zext_ln158_1_fu_278_p1, "zext_ln158_1_fu_278_p1");
    sc_trace(mVcdFile, select_ln158_1_fu_290_p3, "select_ln158_1_fu_290_p3");
    sc_trace(mVcdFile, or_ln159_1_fu_302_p3, "or_ln159_1_fu_302_p3");
    sc_trace(mVcdFile, zext_ln158_2_fu_298_p1, "zext_ln158_2_fu_298_p1");
    sc_trace(mVcdFile, select_ln158_2_fu_310_p3, "select_ln158_2_fu_310_p3");
    sc_trace(mVcdFile, or_ln159_2_fu_322_p3, "or_ln159_2_fu_322_p3");
    sc_trace(mVcdFile, zext_ln158_3_fu_318_p1, "zext_ln158_3_fu_318_p1");
    sc_trace(mVcdFile, select_ln158_3_fu_330_p3, "select_ln158_3_fu_330_p3");
    sc_trace(mVcdFile, or_ln159_3_fu_342_p3, "or_ln159_3_fu_342_p3");
    sc_trace(mVcdFile, zext_ln158_4_fu_338_p1, "zext_ln158_4_fu_338_p1");
    sc_trace(mVcdFile, select_ln158_4_fu_350_p3, "select_ln158_4_fu_350_p3");
    sc_trace(mVcdFile, or_ln159_4_fu_362_p3, "or_ln159_4_fu_362_p3");
    sc_trace(mVcdFile, zext_ln158_5_fu_358_p1, "zext_ln158_5_fu_358_p1");
    sc_trace(mVcdFile, select_ln158_5_fu_370_p3, "select_ln158_5_fu_370_p3");
    sc_trace(mVcdFile, or_ln159_5_fu_382_p3, "or_ln159_5_fu_382_p3");
    sc_trace(mVcdFile, zext_ln158_6_fu_378_p1, "zext_ln158_6_fu_378_p1");
    sc_trace(mVcdFile, ap_block_state2_on_subcall_done, "ap_block_state2_on_subcall_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("honeybee.hdltvin.dat");
    mHdltvoutHandle.open("honeybee.hdltvout.dat");
}

honeybee::~honeybee() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_segmentIntersectsGri_fu_82;
    delete grp_segmentIntersectsGri_fu_104;
    delete grp_segmentIntersectsGri_fu_126;
    delete grp_segmentIntersectsGri_fu_148;
    delete grp_segmentIntersectsGri_fu_170;
    delete grp_segmentIntersectsGri_fu_192;
    delete grp_segmentIntersectsGri_fu_214;
    delete grp_segmentIntersectsGri_fu_236;
}

void honeybee::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void honeybee::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void honeybee::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_104_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_104_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_104_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_104_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_126_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_126_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_126_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_126_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_148_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_148_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_148_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_148_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_170_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_170_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_170_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_170_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_192_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_192_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_192_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_192_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_214_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_214_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_214_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_214_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_236_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_236_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_236_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_236_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_segmentIntersectsGri_fu_82_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_segmentIntersectsGri_fu_82_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_segmentIntersectsGri_fu_82_ap_ready.read())) {
            grp_segmentIntersectsGri_fu_82_ap_start_reg = ap_const_logic_0;
        }
    }
}

void honeybee::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void honeybee::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void honeybee::thread_ap_block_state2_on_subcall_done() {
    ap_block_state2_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_82_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_104_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_126_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_148_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_170_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_192_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_214_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_segmentIntersectsGri_fu_236_ap_done.read()));
}

void honeybee::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void honeybee::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void honeybee::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void honeybee::thread_ap_return() {
    ap_return = (!grp_segmentIntersectsGri_fu_236_ap_return.read()[0].is_01())? sc_lv<8>(): ((grp_segmentIntersectsGri_fu_236_ap_return.read()[0].to_bool())? or_ln159_5_fu_382_p3.read(): zext_ln158_6_fu_378_p1.read());
}

void honeybee::thread_grp_segmentIntersectsGri_fu_104_ap_start() {
    grp_segmentIntersectsGri_fu_104_ap_start = grp_segmentIntersectsGri_fu_104_ap_start_reg.read();
}

void honeybee::thread_grp_segmentIntersectsGri_fu_126_ap_start() {
    grp_segmentIntersectsGri_fu_126_ap_start = grp_segmentIntersectsGri_fu_126_ap_start_reg.read();
}

void honeybee::thread_grp_segmentIntersectsGri_fu_148_ap_start() {
    grp_segmentIntersectsGri_fu_148_ap_start = grp_segmentIntersectsGri_fu_148_ap_start_reg.read();
}

void honeybee::thread_grp_segmentIntersectsGri_fu_170_ap_start() {
    grp_segmentIntersectsGri_fu_170_ap_start = grp_segmentIntersectsGri_fu_170_ap_start_reg.read();
}

void honeybee::thread_grp_segmentIntersectsGri_fu_192_ap_start() {
    grp_segmentIntersectsGri_fu_192_ap_start = grp_segmentIntersectsGri_fu_192_ap_start_reg.read();
}

void honeybee::thread_grp_segmentIntersectsGri_fu_214_ap_start() {
    grp_segmentIntersectsGri_fu_214_ap_start = grp_segmentIntersectsGri_fu_214_ap_start_reg.read();
}

void honeybee::thread_grp_segmentIntersectsGri_fu_236_ap_start() {
    grp_segmentIntersectsGri_fu_236_ap_start = grp_segmentIntersectsGri_fu_236_ap_start_reg.read();
}

void honeybee::thread_grp_segmentIntersectsGri_fu_82_ap_start() {
    grp_segmentIntersectsGri_fu_82_ap_start = grp_segmentIntersectsGri_fu_82_ap_start_reg.read();
}

void honeybee::thread_or_ln159_1_fu_302_p3() {
    or_ln159_1_fu_302_p3 = esl_concat<1,3>(ap_const_lv1_1, select_ln158_1_fu_290_p3.read());
}

void honeybee::thread_or_ln159_2_fu_322_p3() {
    or_ln159_2_fu_322_p3 = esl_concat<1,4>(ap_const_lv1_1, select_ln158_2_fu_310_p3.read());
}

void honeybee::thread_or_ln159_3_fu_342_p3() {
    or_ln159_3_fu_342_p3 = esl_concat<1,5>(ap_const_lv1_1, select_ln158_3_fu_330_p3.read());
}

void honeybee::thread_or_ln159_4_fu_362_p3() {
    or_ln159_4_fu_362_p3 = esl_concat<1,6>(ap_const_lv1_1, select_ln158_4_fu_350_p3.read());
}

void honeybee::thread_or_ln159_5_fu_382_p3() {
    or_ln159_5_fu_382_p3 = esl_concat<1,7>(ap_const_lv1_1, select_ln158_5_fu_370_p3.read());
}

void honeybee::thread_or_ln_fu_282_p3() {
    or_ln_fu_282_p3 = esl_concat<1,2>(ap_const_lv1_1, select_ln158_fu_270_p3.read());
}

void honeybee::thread_select_ln158_1_fu_290_p3() {
    select_ln158_1_fu_290_p3 = (!grp_segmentIntersectsGri_fu_126_ap_return.read()[0].is_01())? sc_lv<3>(): ((grp_segmentIntersectsGri_fu_126_ap_return.read()[0].to_bool())? or_ln_fu_282_p3.read(): zext_ln158_1_fu_278_p1.read());
}

void honeybee::thread_select_ln158_2_fu_310_p3() {
    select_ln158_2_fu_310_p3 = (!grp_segmentIntersectsGri_fu_148_ap_return.read()[0].is_01())? sc_lv<4>(): ((grp_segmentIntersectsGri_fu_148_ap_return.read()[0].to_bool())? or_ln159_1_fu_302_p3.read(): zext_ln158_2_fu_298_p1.read());
}

void honeybee::thread_select_ln158_3_fu_330_p3() {
    select_ln158_3_fu_330_p3 = (!grp_segmentIntersectsGri_fu_170_ap_return.read()[0].is_01())? sc_lv<5>(): ((grp_segmentIntersectsGri_fu_170_ap_return.read()[0].to_bool())? or_ln159_2_fu_322_p3.read(): zext_ln158_3_fu_318_p1.read());
}

void honeybee::thread_select_ln158_4_fu_350_p3() {
    select_ln158_4_fu_350_p3 = (!grp_segmentIntersectsGri_fu_192_ap_return.read()[0].is_01())? sc_lv<6>(): ((grp_segmentIntersectsGri_fu_192_ap_return.read()[0].to_bool())? or_ln159_3_fu_342_p3.read(): zext_ln158_4_fu_338_p1.read());
}

void honeybee::thread_select_ln158_5_fu_370_p3() {
    select_ln158_5_fu_370_p3 = (!grp_segmentIntersectsGri_fu_214_ap_return.read()[0].is_01())? sc_lv<7>(): ((grp_segmentIntersectsGri_fu_214_ap_return.read()[0].to_bool())? or_ln159_4_fu_362_p3.read(): zext_ln158_5_fu_358_p1.read());
}

void honeybee::thread_select_ln158_fu_270_p3() {
    select_ln158_fu_270_p3 = (!grp_segmentIntersectsGri_fu_104_ap_return.read()[0].is_01())? sc_lv<2>(): ((grp_segmentIntersectsGri_fu_104_ap_return.read()[0].to_bool())? select_ln159_fu_262_p3.read(): zext_ln158_fu_258_p1.read());
}

void honeybee::thread_select_ln159_fu_262_p3() {
    select_ln159_fu_262_p3 = (!grp_segmentIntersectsGri_fu_82_ap_return.read()[0].is_01())? sc_lv<2>(): ((grp_segmentIntersectsGri_fu_82_ap_return.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_2);
}

void honeybee::thread_zext_ln158_1_fu_278_p1() {
    zext_ln158_1_fu_278_p1 = esl_zext<3,2>(select_ln158_fu_270_p3.read());
}

void honeybee::thread_zext_ln158_2_fu_298_p1() {
    zext_ln158_2_fu_298_p1 = esl_zext<4,3>(select_ln158_1_fu_290_p3.read());
}

void honeybee::thread_zext_ln158_3_fu_318_p1() {
    zext_ln158_3_fu_318_p1 = esl_zext<5,4>(select_ln158_2_fu_310_p3.read());
}

void honeybee::thread_zext_ln158_4_fu_338_p1() {
    zext_ln158_4_fu_338_p1 = esl_zext<6,5>(select_ln158_3_fu_330_p3.read());
}

void honeybee::thread_zext_ln158_5_fu_358_p1() {
    zext_ln158_5_fu_358_p1 = esl_zext<7,6>(select_ln158_4_fu_350_p3.read());
}

void honeybee::thread_zext_ln158_6_fu_378_p1() {
    zext_ln158_6_fu_378_p1 = esl_zext<8,7>(select_ln158_5_fu_370_p3.read());
}

void honeybee::thread_zext_ln158_fu_258_p1() {
    zext_ln158_fu_258_p1 = esl_zext<2,1>(grp_segmentIntersectsGri_fu_82_ap_return.read());
}

void honeybee::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void honeybee::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_x\" :  \"" << edge_p1_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_y\" :  \"" << edge_p1_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_z\" :  \"" << edge_p1_z.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_x\" :  \"" << edge_p2_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_y\" :  \"" << edge_p2_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_z\" :  \"" << edge_p2_z.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

