

================================================================
== Vivado HLS Report for 'honeybee'
================================================================
* Date:           Thu Mar 19 15:55:18 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        HoneyBee-B
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       33|       33| 0.330 us | 0.330 us |   33|   33|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%edge_p2_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_z)" [src/honeybee.c:79]   --->   Operation 6 'read' 'edge_p2_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%edge_p2_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_y)" [src/honeybee.c:79]   --->   Operation 7 'read' 'edge_p2_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%edge_p2_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_x)" [src/honeybee.c:79]   --->   Operation 8 'read' 'edge_p2_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%edge_p1_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_z)" [src/honeybee.c:79]   --->   Operation 9 'read' 'edge_p1_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%edge_p1_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_y)" [src/honeybee.c:79]   --->   Operation 10 'read' 'edge_p1_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%edge_p1_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_x)" [src/honeybee.c:79]   --->   Operation 11 'read' 'edge_p1_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [2/2] (8.75ns)   --->   "%tmp_4 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 12 'call' 'tmp_4' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 13 [2/2] (8.75ns)   --->   "%tmp_4_0_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 13 'call' 'tmp_4_0_0_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 14 [2/2] (8.75ns)   --->   "%tmp_4_0_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 14 'call' 'tmp_4_0_0_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 15 [2/2] (8.75ns)   --->   "%tmp_4_0_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 15 'call' 'tmp_4_0_0_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 16 [2/2] (8.75ns)   --->   "%tmp_4_0_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 16 'call' 'tmp_4_0_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 17 [2/2] (8.75ns)   --->   "%tmp_4_0_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 17 'call' 'tmp_4_0_1_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 18 [2/2] (8.75ns)   --->   "%tmp_4_0_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 18 'call' 'tmp_4_0_1_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 19 [2/2] (8.75ns)   --->   "%tmp_4_0_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 19 'call' 'tmp_4_0_1_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 20 [2/2] (8.75ns)   --->   "%tmp_4_0_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 20 'call' 'tmp_4_0_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 21 [2/2] (8.75ns)   --->   "%tmp_4_0_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 21 'call' 'tmp_4_0_2_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 22 [2/2] (8.75ns)   --->   "%tmp_4_0_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 22 'call' 'tmp_4_0_2_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 23 [2/2] (8.75ns)   --->   "%tmp_4_0_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 23 'call' 'tmp_4_0_2_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 24 [2/2] (8.75ns)   --->   "%tmp_4_0_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 24 'call' 'tmp_4_0_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 25 [2/2] (8.75ns)   --->   "%tmp_4_0_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 25 'call' 'tmp_4_0_3_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 26 [2/2] (8.75ns)   --->   "%tmp_4_0_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 26 'call' 'tmp_4_0_3_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 27 [2/2] (8.75ns)   --->   "%tmp_4_0_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 27 'call' 'tmp_4_0_3_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 28 [2/2] (8.75ns)   --->   "%tmp_4_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 28 'call' 'tmp_4_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 29 [2/2] (8.75ns)   --->   "%tmp_4_1_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 29 'call' 'tmp_4_1_0_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 30 [2/2] (8.75ns)   --->   "%tmp_4_1_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 30 'call' 'tmp_4_1_0_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 31 [2/2] (8.75ns)   --->   "%tmp_4_1_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 31 'call' 'tmp_4_1_0_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 32 [2/2] (8.75ns)   --->   "%tmp_4_1_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 32 'call' 'tmp_4_1_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 33 [2/2] (8.75ns)   --->   "%tmp_4_1_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 33 'call' 'tmp_4_1_1_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 34 [2/2] (8.75ns)   --->   "%tmp_4_1_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 34 'call' 'tmp_4_1_1_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 35 [2/2] (8.75ns)   --->   "%tmp_4_1_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 35 'call' 'tmp_4_1_1_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 36 [2/2] (8.75ns)   --->   "%tmp_4_1_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 36 'call' 'tmp_4_1_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 37 [2/2] (8.75ns)   --->   "%tmp_4_1_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 37 'call' 'tmp_4_1_2_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 38 [2/2] (8.75ns)   --->   "%tmp_4_1_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 38 'call' 'tmp_4_1_2_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 39 [2/2] (8.75ns)   --->   "%tmp_4_1_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 39 'call' 'tmp_4_1_2_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 40 [2/2] (8.75ns)   --->   "%tmp_4_1_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 40 'call' 'tmp_4_1_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 41 [2/2] (8.75ns)   --->   "%tmp_4_1_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 41 'call' 'tmp_4_1_3_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 42 [2/2] (8.75ns)   --->   "%tmp_4_1_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 42 'call' 'tmp_4_1_3_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 43 [2/2] (8.75ns)   --->   "%tmp_4_1_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 43 'call' 'tmp_4_1_3_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 44 [2/2] (8.75ns)   --->   "%tmp_4_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 44 'call' 'tmp_4_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 45 [2/2] (8.75ns)   --->   "%tmp_4_2_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 45 'call' 'tmp_4_2_0_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 46 [2/2] (8.75ns)   --->   "%tmp_4_2_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 46 'call' 'tmp_4_2_0_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 47 [2/2] (8.75ns)   --->   "%tmp_4_2_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 47 'call' 'tmp_4_2_0_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 48 [2/2] (8.75ns)   --->   "%tmp_4_2_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 48 'call' 'tmp_4_2_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 49 [2/2] (8.75ns)   --->   "%tmp_4_2_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 49 'call' 'tmp_4_2_1_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 50 [2/2] (8.75ns)   --->   "%tmp_4_2_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 50 'call' 'tmp_4_2_1_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 51 [2/2] (8.75ns)   --->   "%tmp_4_2_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 51 'call' 'tmp_4_2_1_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 52 [2/2] (8.75ns)   --->   "%tmp_4_2_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 52 'call' 'tmp_4_2_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 53 [2/2] (8.75ns)   --->   "%tmp_4_2_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 53 'call' 'tmp_4_2_2_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 54 [2/2] (8.75ns)   --->   "%tmp_4_2_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 54 'call' 'tmp_4_2_2_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 55 [2/2] (8.75ns)   --->   "%tmp_4_2_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 55 'call' 'tmp_4_2_2_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 56 [2/2] (8.75ns)   --->   "%tmp_4_2_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 56 'call' 'tmp_4_2_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 57 [2/2] (8.75ns)   --->   "%tmp_4_2_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 57 'call' 'tmp_4_2_3_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 58 [2/2] (8.75ns)   --->   "%tmp_4_2_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 58 'call' 'tmp_4_2_3_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 59 [2/2] (8.75ns)   --->   "%tmp_4_2_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 59 'call' 'tmp_4_2_3_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 60 [2/2] (8.75ns)   --->   "%tmp_4_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 60 'call' 'tmp_4_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 61 [2/2] (8.75ns)   --->   "%tmp_4_3_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 61 'call' 'tmp_4_3_0_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 62 [2/2] (8.75ns)   --->   "%tmp_4_3_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 62 'call' 'tmp_4_3_0_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 63 [2/2] (8.75ns)   --->   "%tmp_4_3_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 63 'call' 'tmp_4_3_0_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 64 [2/2] (8.75ns)   --->   "%tmp_4_3_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 64 'call' 'tmp_4_3_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 65 [2/2] (8.75ns)   --->   "%tmp_4_3_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 65 'call' 'tmp_4_3_1_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 66 [2/2] (8.75ns)   --->   "%tmp_4_3_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 66 'call' 'tmp_4_3_1_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 67 [2/2] (8.75ns)   --->   "%tmp_4_3_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 67 'call' 'tmp_4_3_1_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 68 [2/2] (8.75ns)   --->   "%tmp_4_3_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 68 'call' 'tmp_4_3_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 69 [2/2] (8.75ns)   --->   "%tmp_4_3_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 69 'call' 'tmp_4_3_2_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 70 [2/2] (8.75ns)   --->   "%tmp_4_3_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 70 'call' 'tmp_4_3_2_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 71 [2/2] (8.75ns)   --->   "%tmp_4_3_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 71 'call' 'tmp_4_3_2_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 72 [2/2] (8.75ns)   --->   "%tmp_4_3_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 72 'call' 'tmp_4_3_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 73 [2/2] (8.75ns)   --->   "%tmp_4_3_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 73 'call' 'tmp_4_3_3_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 74 [2/2] (8.75ns)   --->   "%tmp_4_3_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 74 'call' 'tmp_4_3_3_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 75 [2/2] (8.75ns)   --->   "%tmp_4_3_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 75 'call' 'tmp_4_3_3_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 8.36>
ST_2 : Operation 76 [1/2] (6.40ns)   --->   "%tmp_4 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 76 'call' 'tmp_4' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 77 [1/2] (6.40ns)   --->   "%tmp_4_0_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 77 'call' 'tmp_4_0_0_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 78 [1/2] (6.40ns)   --->   "%tmp_4_0_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 78 'call' 'tmp_4_0_0_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 79 [1/2] (6.40ns)   --->   "%tmp_4_0_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 79 'call' 'tmp_4_0_0_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 80 [1/2] (6.40ns)   --->   "%tmp_4_0_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 80 'call' 'tmp_4_0_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 81 [1/2] (6.40ns)   --->   "%tmp_4_0_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 81 'call' 'tmp_4_0_1_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 82 [1/2] (6.40ns)   --->   "%tmp_4_0_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 82 'call' 'tmp_4_0_1_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 83 [1/2] (6.40ns)   --->   "%tmp_4_0_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 83 'call' 'tmp_4_0_1_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 84 [1/2] (6.40ns)   --->   "%tmp_4_0_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 84 'call' 'tmp_4_0_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 85 [1/2] (6.40ns)   --->   "%tmp_4_0_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 85 'call' 'tmp_4_0_2_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 86 [1/2] (6.40ns)   --->   "%tmp_4_0_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 86 'call' 'tmp_4_0_2_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 87 [1/2] (6.40ns)   --->   "%tmp_4_0_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 87 'call' 'tmp_4_0_2_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 88 [1/2] (6.40ns)   --->   "%tmp_4_0_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 88 'call' 'tmp_4_0_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 89 [1/2] (6.40ns)   --->   "%tmp_4_0_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 89 'call' 'tmp_4_0_3_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 90 [1/2] (6.40ns)   --->   "%tmp_4_0_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 90 'call' 'tmp_4_0_3_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 91 [1/2] (6.40ns)   --->   "%tmp_4_0_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 0.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 91 'call' 'tmp_4_0_3_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 92 [1/2] (6.40ns)   --->   "%tmp_4_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 92 'call' 'tmp_4_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 93 [1/2] (6.40ns)   --->   "%tmp_4_1_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 93 'call' 'tmp_4_1_0_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 94 [1/2] (6.40ns)   --->   "%tmp_4_1_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 94 'call' 'tmp_4_1_0_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 95 [1/2] (6.40ns)   --->   "%tmp_4_1_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 95 'call' 'tmp_4_1_0_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 96 [1/2] (6.40ns)   --->   "%tmp_4_1_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 96 'call' 'tmp_4_1_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 97 [1/2] (6.40ns)   --->   "%tmp_4_1_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 97 'call' 'tmp_4_1_1_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 98 [1/2] (6.40ns)   --->   "%tmp_4_1_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 98 'call' 'tmp_4_1_1_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 99 [1/2] (6.40ns)   --->   "%tmp_4_1_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 99 'call' 'tmp_4_1_1_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 100 [1/2] (6.40ns)   --->   "%tmp_4_1_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 100 'call' 'tmp_4_1_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 101 [1/2] (6.40ns)   --->   "%tmp_4_1_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 101 'call' 'tmp_4_1_2_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 102 [1/2] (6.40ns)   --->   "%tmp_4_1_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 102 'call' 'tmp_4_1_2_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 103 [1/2] (6.40ns)   --->   "%tmp_4_1_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 103 'call' 'tmp_4_1_2_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 104 [1/2] (6.40ns)   --->   "%tmp_4_1_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 104 'call' 'tmp_4_1_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 105 [1/2] (6.40ns)   --->   "%tmp_4_1_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 105 'call' 'tmp_4_1_3_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 106 [1/2] (6.40ns)   --->   "%tmp_4_1_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 106 'call' 'tmp_4_1_3_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 107 [1/2] (6.40ns)   --->   "%tmp_4_1_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 1.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 107 'call' 'tmp_4_1_3_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 108 [1/2] (6.40ns)   --->   "%tmp_4_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 108 'call' 'tmp_4_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 109 [1/2] (6.40ns)   --->   "%tmp_4_2_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 109 'call' 'tmp_4_2_0_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 110 [1/2] (6.40ns)   --->   "%tmp_4_2_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 110 'call' 'tmp_4_2_0_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 111 [1/2] (6.40ns)   --->   "%tmp_4_2_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 111 'call' 'tmp_4_2_0_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 112 [1/2] (6.40ns)   --->   "%tmp_4_2_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 112 'call' 'tmp_4_2_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 113 [1/2] (6.40ns)   --->   "%tmp_4_2_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 113 'call' 'tmp_4_2_1_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 114 [1/2] (6.40ns)   --->   "%tmp_4_2_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 114 'call' 'tmp_4_2_1_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 115 [1/2] (6.40ns)   --->   "%tmp_4_2_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 115 'call' 'tmp_4_2_1_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%or_ln79 = or i1 %tmp_4_2_1_3, %tmp_4_2_1_2" [src/honeybee.c:79]   --->   Operation 116 'or' 'or_ln79' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_2)   --->   "%or_ln79_1 = or i1 %tmp_4_2_1, %tmp_4_2_1_1" [src/honeybee.c:79]   --->   Operation 117 'or' 'or_ln79_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_2 = or i1 %or_ln79_1, %or_ln79" [src/honeybee.c:79]   --->   Operation 118 'or' 'or_ln79_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%or_ln79_3 = or i1 %tmp_4_2, %tmp_4_2_0_1" [src/honeybee.c:79]   --->   Operation 119 'or' 'or_ln79_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%or_ln79_4 = or i1 %tmp_4_2_0_2, %tmp_4_2_0_3" [src/honeybee.c:79]   --->   Operation 120 'or' 'or_ln79_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_6)   --->   "%or_ln79_5 = or i1 %or_ln79_4, %or_ln79_3" [src/honeybee.c:79]   --->   Operation 121 'or' 'or_ln79_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_6 = or i1 %or_ln79_5, %or_ln79_2" [src/honeybee.c:79]   --->   Operation 122 'or' 'or_ln79_6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 123 [1/2] (6.40ns)   --->   "%tmp_4_2_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 123 'call' 'tmp_4_2_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 124 [1/2] (6.40ns)   --->   "%tmp_4_2_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 124 'call' 'tmp_4_2_2_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 125 [1/2] (6.40ns)   --->   "%tmp_4_2_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 125 'call' 'tmp_4_2_2_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 126 [1/2] (6.40ns)   --->   "%tmp_4_2_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 126 'call' 'tmp_4_2_2_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 127 [1/2] (6.40ns)   --->   "%tmp_4_2_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 127 'call' 'tmp_4_2_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 128 [1/2] (6.40ns)   --->   "%tmp_4_2_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 128 'call' 'tmp_4_2_3_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 129 [1/2] (6.40ns)   --->   "%tmp_4_2_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 129 'call' 'tmp_4_2_3_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 130 [1/2] (6.40ns)   --->   "%tmp_4_2_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 2.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 130 'call' 'tmp_4_2_3_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_9)   --->   "%or_ln79_7 = or i1 %tmp_4_2_3_3, %tmp_4_2_3_2" [src/honeybee.c:79]   --->   Operation 131 'or' 'or_ln79_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_9)   --->   "%or_ln79_8 = or i1 %tmp_4_2_3, %tmp_4_2_3_1" [src/honeybee.c:79]   --->   Operation 132 'or' 'or_ln79_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 133 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_9 = or i1 %or_ln79_8, %or_ln79_7" [src/honeybee.c:79]   --->   Operation 133 'or' 'or_ln79_9' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 134 [1/2] (6.40ns)   --->   "%tmp_4_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 134 'call' 'tmp_4_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 135 [1/2] (6.40ns)   --->   "%tmp_4_3_0_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 135 'call' 'tmp_4_3_0_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 136 [1/2] (6.40ns)   --->   "%tmp_4_3_0_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 136 'call' 'tmp_4_3_0_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 137 [1/2] (6.40ns)   --->   "%tmp_4_3_0_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 0.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 137 'call' 'tmp_4_3_0_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 138 [1/2] (6.40ns)   --->   "%tmp_4_3_1 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 138 'call' 'tmp_4_3_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 139 [1/2] (6.40ns)   --->   "%tmp_4_3_1_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 139 'call' 'tmp_4_3_1_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 140 [1/2] (6.40ns)   --->   "%tmp_4_3_1_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 140 'call' 'tmp_4_3_1_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 141 [1/2] (6.40ns)   --->   "%tmp_4_3_1_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 1.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 141 'call' 'tmp_4_3_1_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_17)   --->   "%or_ln79_15 = or i1 %tmp_4_3_1_3, %tmp_4_3_1_2" [src/honeybee.c:79]   --->   Operation 142 'or' 'or_ln79_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_17)   --->   "%or_ln79_16 = or i1 %tmp_4_3_1, %tmp_4_3_1_1" [src/honeybee.c:79]   --->   Operation 143 'or' 'or_ln79_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 144 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_17 = or i1 %or_ln79_16, %or_ln79_15" [src/honeybee.c:79]   --->   Operation 144 'or' 'or_ln79_17' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_21)   --->   "%or_ln79_18 = or i1 %tmp_4_3, %tmp_4_3_0_1" [src/honeybee.c:79]   --->   Operation 145 'or' 'or_ln79_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_21)   --->   "%or_ln79_19 = or i1 %tmp_4_3_0_2, %tmp_4_3_0_3" [src/honeybee.c:79]   --->   Operation 146 'or' 'or_ln79_19' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_21)   --->   "%or_ln79_20 = or i1 %or_ln79_19, %or_ln79_18" [src/honeybee.c:79]   --->   Operation 147 'or' 'or_ln79_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 148 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_21 = or i1 %or_ln79_20, %or_ln79_17" [src/honeybee.c:79]   --->   Operation 148 'or' 'or_ln79_21' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 149 [1/2] (6.40ns)   --->   "%tmp_4_3_2 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 149 'call' 'tmp_4_3_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 150 [1/2] (6.40ns)   --->   "%tmp_4_3_2_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 150 'call' 'tmp_4_3_2_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 151 [1/2] (6.40ns)   --->   "%tmp_4_3_2_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 151 'call' 'tmp_4_3_2_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 152 [1/2] (6.40ns)   --->   "%tmp_4_3_2_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 2.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 152 'call' 'tmp_4_3_2_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 153 [1/2] (6.40ns)   --->   "%tmp_4_3_3 = call fastcc i1 @lineIntersectGrid(float 0.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 153 'call' 'tmp_4_3_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 154 [1/2] (6.40ns)   --->   "%tmp_4_3_3_1 = call fastcc i1 @lineIntersectGrid(float 1.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 154 'call' 'tmp_4_3_3_1' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 155 [1/2] (6.40ns)   --->   "%tmp_4_3_3_2 = call fastcc i1 @lineIntersectGrid(float 2.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 155 'call' 'tmp_4_3_3_2' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 156 [1/2] (6.40ns)   --->   "%tmp_4_3_3_3 = call fastcc i1 @lineIntersectGrid(float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read)" [src/honeybee.c:79]   --->   Operation 156 'call' 'tmp_4_3_3_3' <Predicate = true> <Delay = 6.40> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_24)   --->   "%or_ln79_22 = or i1 %tmp_4_3_3_3, %tmp_4_3_3_2" [src/honeybee.c:79]   --->   Operation 157 'or' 'or_ln79_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_24)   --->   "%or_ln79_23 = or i1 %tmp_4_3_3, %tmp_4_3_3_1" [src/honeybee.c:79]   --->   Operation 158 'or' 'or_ln79_23' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 159 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_24 = or i1 %or_ln79_23, %or_ln79_22" [src/honeybee.c:79]   --->   Operation 159 'or' 'or_ln79_24' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.60>
ST_3 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node select_ln79)   --->   "%zext_ln79 = zext i1 %tmp_4 to i2" [src/honeybee.c:79]   --->   Operation 160 'zext' 'zext_ln79' <Predicate = (!tmp_4_0_0_1)> <Delay = 0.00>
ST_3 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node select_ln79)   --->   "%select_ln80 = select i1 %tmp_4, i2 -1, i2 -2" [src/honeybee.c:80]   --->   Operation 161 'select' 'select_ln80' <Predicate = (tmp_4_0_0_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 162 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln79 = select i1 %tmp_4_0_0_1, i2 %select_ln80, i2 %zext_ln79" [src/honeybee.c:79]   --->   Operation 162 'select' 'select_ln79' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln79_1 = zext i2 %select_ln79 to i3" [src/honeybee.c:79]   --->   Operation 163 'zext' 'zext_ln79_1' <Predicate = (!tmp_4_0_0_2)> <Delay = 0.00>
ST_3 : Operation 164 [1/1] (0.00ns)   --->   "%or_ln = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 true, i2 %select_ln79)" [src/honeybee.c:80]   --->   Operation 164 'bitconcatenate' 'or_ln' <Predicate = (tmp_4_0_0_2)> <Delay = 0.00>
ST_3 : Operation 165 [1/1] (0.98ns)   --->   "%select_ln79_1 = select i1 %tmp_4_0_0_2, i3 %or_ln, i3 %zext_ln79_1" [src/honeybee.c:79]   --->   Operation 165 'select' 'select_ln79_1' <Predicate = true> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln79_2 = zext i3 %select_ln79_1 to i4" [src/honeybee.c:79]   --->   Operation 166 'zext' 'zext_ln79_2' <Predicate = (!tmp_4_0_0_3)> <Delay = 0.00>
ST_3 : Operation 167 [1/1] (0.00ns)   --->   "%or_ln80_1 = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 true, i3 %select_ln79_1)" [src/honeybee.c:80]   --->   Operation 167 'bitconcatenate' 'or_ln80_1' <Predicate = (tmp_4_0_0_3)> <Delay = 0.00>
ST_3 : Operation 168 [1/1] (1.02ns)   --->   "%select_ln79_2 = select i1 %tmp_4_0_0_3, i4 %or_ln80_1, i4 %zext_ln79_2" [src/honeybee.c:79]   --->   Operation 168 'select' 'select_ln79_2' <Predicate = true> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln79_3 = zext i4 %select_ln79_2 to i5" [src/honeybee.c:79]   --->   Operation 169 'zext' 'zext_ln79_3' <Predicate = (!tmp_4_0_1)> <Delay = 0.00>
ST_3 : Operation 170 [1/1] (0.00ns)   --->   "%or_ln80_2 = call i5 @_ssdm_op_BitConcatenate.i5.i1.i4(i1 true, i4 %select_ln79_2)" [src/honeybee.c:80]   --->   Operation 170 'bitconcatenate' 'or_ln80_2' <Predicate = (tmp_4_0_1)> <Delay = 0.00>
ST_3 : Operation 171 [1/1] (1.21ns)   --->   "%select_ln79_3 = select i1 %tmp_4_0_1, i5 %or_ln80_2, i5 %zext_ln79_3" [src/honeybee.c:79]   --->   Operation 171 'select' 'select_ln79_3' <Predicate = true> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln79_4 = zext i5 %select_ln79_3 to i6" [src/honeybee.c:79]   --->   Operation 172 'zext' 'zext_ln79_4' <Predicate = (!tmp_4_0_1_1)> <Delay = 0.00>
ST_3 : Operation 173 [1/1] (0.00ns)   --->   "%or_ln80_3 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i5(i1 true, i5 %select_ln79_3)" [src/honeybee.c:80]   --->   Operation 173 'bitconcatenate' 'or_ln80_3' <Predicate = (tmp_4_0_1_1)> <Delay = 0.00>
ST_3 : Operation 174 [1/1] (1.18ns)   --->   "%select_ln79_4 = select i1 %tmp_4_0_1_1, i6 %or_ln80_3, i6 %zext_ln79_4" [src/honeybee.c:79]   --->   Operation 174 'select' 'select_ln79_4' <Predicate = true> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln79_5 = zext i6 %select_ln79_4 to i7" [src/honeybee.c:79]   --->   Operation 175 'zext' 'zext_ln79_5' <Predicate = (!tmp_4_0_1_2)> <Delay = 0.00>
ST_3 : Operation 176 [1/1] (0.00ns)   --->   "%or_ln80_4 = call i7 @_ssdm_op_BitConcatenate.i7.i1.i6(i1 true, i6 %select_ln79_4)" [src/honeybee.c:80]   --->   Operation 176 'bitconcatenate' 'or_ln80_4' <Predicate = (tmp_4_0_1_2)> <Delay = 0.00>
ST_3 : Operation 177 [1/1] (0.99ns)   --->   "%select_ln79_5 = select i1 %tmp_4_0_1_2, i7 %or_ln80_4, i7 %zext_ln79_5" [src/honeybee.c:79]   --->   Operation 177 'select' 'select_ln79_5' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln79_6 = zext i7 %select_ln79_5 to i8" [src/honeybee.c:79]   --->   Operation 178 'zext' 'zext_ln79_6' <Predicate = (!tmp_4_0_1_3)> <Delay = 0.00>
ST_3 : Operation 179 [1/1] (0.00ns)   --->   "%or_ln80_5 = call i8 @_ssdm_op_BitConcatenate.i8.i1.i7(i1 true, i7 %select_ln79_5)" [src/honeybee.c:80]   --->   Operation 179 'bitconcatenate' 'or_ln80_5' <Predicate = (tmp_4_0_1_3)> <Delay = 0.00>
ST_3 : Operation 180 [1/1] (1.24ns)   --->   "%select_ln79_6 = select i1 %tmp_4_0_1_3, i8 %or_ln80_5, i8 %zext_ln79_6" [src/honeybee.c:79]   --->   Operation 180 'select' 'select_ln79_6' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln79_7 = zext i8 %select_ln79_6 to i9" [src/honeybee.c:79]   --->   Operation 181 'zext' 'zext_ln79_7' <Predicate = (!tmp_4_0_2)> <Delay = 0.00>
ST_3 : Operation 182 [1/1] (0.00ns)   --->   "%or_ln80_6 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 true, i8 %select_ln79_6)" [src/honeybee.c:80]   --->   Operation 182 'bitconcatenate' 'or_ln80_6' <Predicate = (tmp_4_0_2)> <Delay = 0.00>
ST_3 : Operation 183 [1/1] (0.96ns)   --->   "%select_ln79_7 = select i1 %tmp_4_0_2, i9 %or_ln80_6, i9 %zext_ln79_7" [src/honeybee.c:79]   --->   Operation 183 'select' 'select_ln79_7' <Predicate = true> <Delay = 0.96> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_14)   --->   "%or_ln79_10 = or i1 %tmp_4_2_2, %tmp_4_2_2_1" [src/honeybee.c:79]   --->   Operation 184 'or' 'or_ln79_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_14)   --->   "%or_ln79_11 = or i1 %tmp_4_2_2_2, %tmp_4_2_2_3" [src/honeybee.c:79]   --->   Operation 185 'or' 'or_ln79_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_14)   --->   "%or_ln79_12 = or i1 %or_ln79_11, %or_ln79_10" [src/honeybee.c:79]   --->   Operation 186 'or' 'or_ln79_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_14)   --->   "%or_ln79_13 = or i1 %or_ln79_12, %or_ln79_9" [src/honeybee.c:79]   --->   Operation 187 'or' 'or_ln79_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 188 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_14 = or i1 %or_ln79_13, %or_ln79_6" [src/honeybee.c:79]   --->   Operation 188 'or' 'or_ln79_14' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_29)   --->   "%or_ln79_25 = or i1 %tmp_4_3_2, %tmp_4_3_2_1" [src/honeybee.c:79]   --->   Operation 189 'or' 'or_ln79_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_29)   --->   "%or_ln79_26 = or i1 %tmp_4_3_2_2, %tmp_4_3_2_3" [src/honeybee.c:79]   --->   Operation 190 'or' 'or_ln79_26' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_29)   --->   "%or_ln79_27 = or i1 %or_ln79_26, %or_ln79_25" [src/honeybee.c:79]   --->   Operation 191 'or' 'or_ln79_27' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node or_ln79_29)   --->   "%or_ln79_28 = or i1 %or_ln79_27, %or_ln79_24" [src/honeybee.c:79]   --->   Operation 192 'or' 'or_ln79_28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 193 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln79_29 = or i1 %or_ln79_28, %or_ln79_21" [src/honeybee.c:79]   --->   Operation 193 'or' 'or_ln79_29' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.71>
ST_4 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln79_8 = zext i9 %select_ln79_7 to i10" [src/honeybee.c:79]   --->   Operation 194 'zext' 'zext_ln79_8' <Predicate = (!tmp_4_0_2_1)> <Delay = 0.00>
ST_4 : Operation 195 [1/1] (0.00ns)   --->   "%or_ln80_7 = call i10 @_ssdm_op_BitConcatenate.i10.i1.i9(i1 true, i9 %select_ln79_7)" [src/honeybee.c:80]   --->   Operation 195 'bitconcatenate' 'or_ln80_7' <Predicate = (tmp_4_0_2_1)> <Delay = 0.00>
ST_4 : Operation 196 [1/1] (0.68ns)   --->   "%select_ln79_8 = select i1 %tmp_4_0_2_1, i10 %or_ln80_7, i10 %zext_ln79_8" [src/honeybee.c:79]   --->   Operation 196 'select' 'select_ln79_8' <Predicate = true> <Delay = 0.68> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln79_9 = zext i10 %select_ln79_8 to i11" [src/honeybee.c:79]   --->   Operation 197 'zext' 'zext_ln79_9' <Predicate = (!tmp_4_0_2_2)> <Delay = 0.00>
ST_4 : Operation 198 [1/1] (0.00ns)   --->   "%or_ln80_8 = call i11 @_ssdm_op_BitConcatenate.i11.i1.i10(i1 true, i10 %select_ln79_8)" [src/honeybee.c:80]   --->   Operation 198 'bitconcatenate' 'or_ln80_8' <Predicate = (tmp_4_0_2_2)> <Delay = 0.00>
ST_4 : Operation 199 [1/1] (0.69ns)   --->   "%select_ln79_9 = select i1 %tmp_4_0_2_2, i11 %or_ln80_8, i11 %zext_ln79_9" [src/honeybee.c:79]   --->   Operation 199 'select' 'select_ln79_9' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 200 [1/1] (0.00ns)   --->   "%zext_ln79_10 = zext i11 %select_ln79_9 to i12" [src/honeybee.c:79]   --->   Operation 200 'zext' 'zext_ln79_10' <Predicate = (!tmp_4_0_2_3)> <Delay = 0.00>
ST_4 : Operation 201 [1/1] (0.00ns)   --->   "%or_ln80_9 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i11(i1 true, i11 %select_ln79_9)" [src/honeybee.c:80]   --->   Operation 201 'bitconcatenate' 'or_ln80_9' <Predicate = (tmp_4_0_2_3)> <Delay = 0.00>
ST_4 : Operation 202 [1/1] (0.69ns)   --->   "%select_ln79_10 = select i1 %tmp_4_0_2_3, i12 %or_ln80_9, i12 %zext_ln79_10" [src/honeybee.c:79]   --->   Operation 202 'select' 'select_ln79_10' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 203 [1/1] (0.00ns)   --->   "%zext_ln79_11 = zext i12 %select_ln79_10 to i13" [src/honeybee.c:79]   --->   Operation 203 'zext' 'zext_ln79_11' <Predicate = (!tmp_4_0_3)> <Delay = 0.00>
ST_4 : Operation 204 [1/1] (0.00ns)   --->   "%or_ln80_s = call i13 @_ssdm_op_BitConcatenate.i13.i1.i12(i1 true, i12 %select_ln79_10)" [src/honeybee.c:80]   --->   Operation 204 'bitconcatenate' 'or_ln80_s' <Predicate = (tmp_4_0_3)> <Delay = 0.00>
ST_4 : Operation 205 [1/1] (0.69ns)   --->   "%select_ln79_11 = select i1 %tmp_4_0_3, i13 %or_ln80_s, i13 %zext_ln79_11" [src/honeybee.c:79]   --->   Operation 205 'select' 'select_ln79_11' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln79_12 = zext i13 %select_ln79_11 to i14" [src/honeybee.c:79]   --->   Operation 206 'zext' 'zext_ln79_12' <Predicate = (!tmp_4_0_3_1)> <Delay = 0.00>
ST_4 : Operation 207 [1/1] (0.00ns)   --->   "%or_ln80_10 = call i14 @_ssdm_op_BitConcatenate.i14.i1.i13(i1 true, i13 %select_ln79_11)" [src/honeybee.c:80]   --->   Operation 207 'bitconcatenate' 'or_ln80_10' <Predicate = (tmp_4_0_3_1)> <Delay = 0.00>
ST_4 : Operation 208 [1/1] (0.70ns)   --->   "%select_ln79_12 = select i1 %tmp_4_0_3_1, i14 %or_ln80_10, i14 %zext_ln79_12" [src/honeybee.c:79]   --->   Operation 208 'select' 'select_ln79_12' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln79_13 = zext i14 %select_ln79_12 to i15" [src/honeybee.c:79]   --->   Operation 209 'zext' 'zext_ln79_13' <Predicate = (!tmp_4_0_3_2)> <Delay = 0.00>
ST_4 : Operation 210 [1/1] (0.00ns)   --->   "%or_ln80_11 = call i15 @_ssdm_op_BitConcatenate.i15.i1.i14(i1 true, i14 %select_ln79_12)" [src/honeybee.c:80]   --->   Operation 210 'bitconcatenate' 'or_ln80_11' <Predicate = (tmp_4_0_3_2)> <Delay = 0.00>
ST_4 : Operation 211 [1/1] (0.75ns)   --->   "%select_ln79_13 = select i1 %tmp_4_0_3_2, i15 %or_ln80_11, i15 %zext_ln79_13" [src/honeybee.c:79]   --->   Operation 211 'select' 'select_ln79_13' <Predicate = true> <Delay = 0.75> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln79_14 = zext i15 %select_ln79_13 to i16" [src/honeybee.c:79]   --->   Operation 212 'zext' 'zext_ln79_14' <Predicate = (!tmp_4_0_3_3)> <Delay = 0.00>
ST_4 : Operation 213 [1/1] (0.00ns)   --->   "%or_ln80_12 = call i16 @_ssdm_op_BitConcatenate.i16.i1.i15(i1 true, i15 %select_ln79_13)" [src/honeybee.c:80]   --->   Operation 213 'bitconcatenate' 'or_ln80_12' <Predicate = (tmp_4_0_3_3)> <Delay = 0.00>
ST_4 : Operation 214 [1/1] (0.80ns)   --->   "%select_ln79_14 = select i1 %tmp_4_0_3_3, i16 %or_ln80_12, i16 %zext_ln79_14" [src/honeybee.c:79]   --->   Operation 214 'select' 'select_ln79_14' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln79_15 = zext i16 %select_ln79_14 to i17" [src/honeybee.c:79]   --->   Operation 215 'zext' 'zext_ln79_15' <Predicate = (!tmp_4_1)> <Delay = 0.00>
ST_4 : Operation 216 [1/1] (0.00ns)   --->   "%or_ln80_13 = call i17 @_ssdm_op_BitConcatenate.i17.i1.i16(i1 true, i16 %select_ln79_14)" [src/honeybee.c:80]   --->   Operation 216 'bitconcatenate' 'or_ln80_13' <Predicate = (tmp_4_1)> <Delay = 0.00>
ST_4 : Operation 217 [1/1] (0.78ns)   --->   "%select_ln79_15 = select i1 %tmp_4_1, i17 %or_ln80_13, i17 %zext_ln79_15" [src/honeybee.c:79]   --->   Operation 217 'select' 'select_ln79_15' <Predicate = true> <Delay = 0.78> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 218 [1/1] (0.00ns)   --->   "%zext_ln79_16 = zext i17 %select_ln79_15 to i18" [src/honeybee.c:79]   --->   Operation 218 'zext' 'zext_ln79_16' <Predicate = (!tmp_4_1_0_1)> <Delay = 0.00>
ST_4 : Operation 219 [1/1] (0.00ns)   --->   "%or_ln80_14 = call i18 @_ssdm_op_BitConcatenate.i18.i1.i17(i1 true, i17 %select_ln79_15)" [src/honeybee.c:80]   --->   Operation 219 'bitconcatenate' 'or_ln80_14' <Predicate = (tmp_4_1_0_1)> <Delay = 0.00>
ST_4 : Operation 220 [1/1] (0.75ns)   --->   "%select_ln79_16 = select i1 %tmp_4_1_0_1, i18 %or_ln80_14, i18 %zext_ln79_16" [src/honeybee.c:79]   --->   Operation 220 'select' 'select_ln79_16' <Predicate = true> <Delay = 0.75> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 221 [1/1] (0.00ns)   --->   "%zext_ln79_17 = zext i18 %select_ln79_16 to i19" [src/honeybee.c:79]   --->   Operation 221 'zext' 'zext_ln79_17' <Predicate = (!tmp_4_1_0_2)> <Delay = 0.00>
ST_4 : Operation 222 [1/1] (0.00ns)   --->   "%or_ln80_15 = call i19 @_ssdm_op_BitConcatenate.i19.i1.i18(i1 true, i18 %select_ln79_16)" [src/honeybee.c:80]   --->   Operation 222 'bitconcatenate' 'or_ln80_15' <Predicate = (tmp_4_1_0_2)> <Delay = 0.00>
ST_4 : Operation 223 [1/1] (0.73ns)   --->   "%select_ln79_17 = select i1 %tmp_4_1_0_2, i19 %or_ln80_15, i19 %zext_ln79_17" [src/honeybee.c:79]   --->   Operation 223 'select' 'select_ln79_17' <Predicate = true> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 224 [1/1] (0.00ns)   --->   "%zext_ln79_18 = zext i19 %select_ln79_17 to i20" [src/honeybee.c:79]   --->   Operation 224 'zext' 'zext_ln79_18' <Predicate = (!tmp_4_1_0_3)> <Delay = 0.00>
ST_4 : Operation 225 [1/1] (0.00ns)   --->   "%or_ln80_16 = call i20 @_ssdm_op_BitConcatenate.i20.i1.i19(i1 true, i19 %select_ln79_17)" [src/honeybee.c:80]   --->   Operation 225 'bitconcatenate' 'or_ln80_16' <Predicate = (tmp_4_1_0_3)> <Delay = 0.00>
ST_4 : Operation 226 [1/1] (0.70ns)   --->   "%select_ln79_18 = select i1 %tmp_4_1_0_3, i20 %or_ln80_16, i20 %zext_ln79_18" [src/honeybee.c:79]   --->   Operation 226 'select' 'select_ln79_18' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln79_19 = zext i20 %select_ln79_18 to i21" [src/honeybee.c:79]   --->   Operation 227 'zext' 'zext_ln79_19' <Predicate = (!tmp_4_1_1)> <Delay = 0.00>
ST_4 : Operation 228 [1/1] (0.00ns)   --->   "%or_ln80_17 = call i21 @_ssdm_op_BitConcatenate.i21.i1.i20(i1 true, i20 %select_ln79_18)" [src/honeybee.c:80]   --->   Operation 228 'bitconcatenate' 'or_ln80_17' <Predicate = (tmp_4_1_1)> <Delay = 0.00>
ST_4 : Operation 229 [1/1] (0.70ns)   --->   "%select_ln79_19 = select i1 %tmp_4_1_1, i21 %or_ln80_17, i21 %zext_ln79_19" [src/honeybee.c:79]   --->   Operation 229 'select' 'select_ln79_19' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.51>
ST_5 : Operation 230 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p1_x), !map !34"   --->   Operation 230 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 231 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p1_y), !map !40"   --->   Operation 231 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 232 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p1_z), !map !44"   --->   Operation 232 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 233 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p2_x), !map !48"   --->   Operation 233 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 234 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p2_y), !map !52"   --->   Operation 234 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 235 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %edge_p2_z), !map !56"   --->   Operation 235 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 236 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 0) nounwind, !map !60"   --->   Operation 236 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 237 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @honeybee_str) nounwind"   --->   Operation 237 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln79_20 = zext i21 %select_ln79_19 to i22" [src/honeybee.c:79]   --->   Operation 238 'zext' 'zext_ln79_20' <Predicate = (!tmp_4_1_1_1)> <Delay = 0.00>
ST_5 : Operation 239 [1/1] (0.00ns)   --->   "%or_ln80_18 = call i22 @_ssdm_op_BitConcatenate.i22.i1.i21(i1 true, i21 %select_ln79_19)" [src/honeybee.c:80]   --->   Operation 239 'bitconcatenate' 'or_ln80_18' <Predicate = (tmp_4_1_1_1)> <Delay = 0.00>
ST_5 : Operation 240 [1/1] (0.70ns)   --->   "%select_ln79_20 = select i1 %tmp_4_1_1_1, i22 %or_ln80_18, i22 %zext_ln79_20" [src/honeybee.c:79]   --->   Operation 240 'select' 'select_ln79_20' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 241 [1/1] (0.00ns)   --->   "%zext_ln79_21 = zext i22 %select_ln79_20 to i23" [src/honeybee.c:79]   --->   Operation 241 'zext' 'zext_ln79_21' <Predicate = (!tmp_4_1_1_2)> <Delay = 0.00>
ST_5 : Operation 242 [1/1] (0.00ns)   --->   "%or_ln80_19 = call i23 @_ssdm_op_BitConcatenate.i23.i1.i22(i1 true, i22 %select_ln79_20)" [src/honeybee.c:80]   --->   Operation 242 'bitconcatenate' 'or_ln80_19' <Predicate = (tmp_4_1_1_2)> <Delay = 0.00>
ST_5 : Operation 243 [1/1] (0.69ns)   --->   "%select_ln79_21 = select i1 %tmp_4_1_1_2, i23 %or_ln80_19, i23 %zext_ln79_21" [src/honeybee.c:79]   --->   Operation 243 'select' 'select_ln79_21' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 244 [1/1] (0.00ns)   --->   "%zext_ln79_22 = zext i23 %select_ln79_21 to i24" [src/honeybee.c:79]   --->   Operation 244 'zext' 'zext_ln79_22' <Predicate = (!tmp_4_1_1_3)> <Delay = 0.00>
ST_5 : Operation 245 [1/1] (0.00ns)   --->   "%or_ln80_20 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %select_ln79_21)" [src/honeybee.c:80]   --->   Operation 245 'bitconcatenate' 'or_ln80_20' <Predicate = (tmp_4_1_1_3)> <Delay = 0.00>
ST_5 : Operation 246 [1/1] (0.69ns)   --->   "%select_ln79_22 = select i1 %tmp_4_1_1_3, i24 %or_ln80_20, i24 %zext_ln79_22" [src/honeybee.c:79]   --->   Operation 246 'select' 'select_ln79_22' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln79_23 = zext i24 %select_ln79_22 to i25" [src/honeybee.c:79]   --->   Operation 247 'zext' 'zext_ln79_23' <Predicate = (!tmp_4_1_2)> <Delay = 0.00>
ST_5 : Operation 248 [1/1] (0.00ns)   --->   "%or_ln80_21 = call i25 @_ssdm_op_BitConcatenate.i25.i1.i24(i1 true, i24 %select_ln79_22)" [src/honeybee.c:80]   --->   Operation 248 'bitconcatenate' 'or_ln80_21' <Predicate = (tmp_4_1_2)> <Delay = 0.00>
ST_5 : Operation 249 [1/1] (0.73ns)   --->   "%select_ln79_23 = select i1 %tmp_4_1_2, i25 %or_ln80_21, i25 %zext_ln79_23" [src/honeybee.c:79]   --->   Operation 249 'select' 'select_ln79_23' <Predicate = true> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln79_24 = zext i25 %select_ln79_23 to i26" [src/honeybee.c:79]   --->   Operation 250 'zext' 'zext_ln79_24' <Predicate = (!tmp_4_1_2_1)> <Delay = 0.00>
ST_5 : Operation 251 [1/1] (0.00ns)   --->   "%or_ln80_22 = call i26 @_ssdm_op_BitConcatenate.i26.i1.i25(i1 true, i25 %select_ln79_23)" [src/honeybee.c:80]   --->   Operation 251 'bitconcatenate' 'or_ln80_22' <Predicate = (tmp_4_1_2_1)> <Delay = 0.00>
ST_5 : Operation 252 [1/1] (0.76ns)   --->   "%select_ln79_24 = select i1 %tmp_4_1_2_1, i26 %or_ln80_22, i26 %zext_ln79_24" [src/honeybee.c:79]   --->   Operation 252 'select' 'select_ln79_24' <Predicate = true> <Delay = 0.76> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln79_25 = zext i26 %select_ln79_24 to i27" [src/honeybee.c:79]   --->   Operation 253 'zext' 'zext_ln79_25' <Predicate = (!tmp_4_1_2_2)> <Delay = 0.00>
ST_5 : Operation 254 [1/1] (0.00ns)   --->   "%or_ln80_23 = call i27 @_ssdm_op_BitConcatenate.i27.i1.i26(i1 true, i26 %select_ln79_24)" [src/honeybee.c:80]   --->   Operation 254 'bitconcatenate' 'or_ln80_23' <Predicate = (tmp_4_1_2_2)> <Delay = 0.00>
ST_5 : Operation 255 [1/1] (0.80ns)   --->   "%select_ln79_25 = select i1 %tmp_4_1_2_2, i27 %or_ln80_23, i27 %zext_ln79_25" [src/honeybee.c:79]   --->   Operation 255 'select' 'select_ln79_25' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 256 [1/1] (0.00ns)   --->   "%zext_ln79_26 = zext i27 %select_ln79_25 to i28" [src/honeybee.c:79]   --->   Operation 256 'zext' 'zext_ln79_26' <Predicate = (!tmp_4_1_2_3)> <Delay = 0.00>
ST_5 : Operation 257 [1/1] (0.00ns)   --->   "%or_ln80_24 = call i28 @_ssdm_op_BitConcatenate.i28.i1.i27(i1 true, i27 %select_ln79_25)" [src/honeybee.c:80]   --->   Operation 257 'bitconcatenate' 'or_ln80_24' <Predicate = (tmp_4_1_2_3)> <Delay = 0.00>
ST_5 : Operation 258 [1/1] (0.83ns)   --->   "%select_ln79_26 = select i1 %tmp_4_1_2_3, i28 %or_ln80_24, i28 %zext_ln79_26" [src/honeybee.c:79]   --->   Operation 258 'select' 'select_ln79_26' <Predicate = true> <Delay = 0.83> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 259 [1/1] (0.00ns)   --->   "%zext_ln79_27 = zext i28 %select_ln79_26 to i29" [src/honeybee.c:79]   --->   Operation 259 'zext' 'zext_ln79_27' <Predicate = (!tmp_4_1_3)> <Delay = 0.00>
ST_5 : Operation 260 [1/1] (0.00ns)   --->   "%or_ln80_25 = call i29 @_ssdm_op_BitConcatenate.i29.i1.i28(i1 true, i28 %select_ln79_26)" [src/honeybee.c:80]   --->   Operation 260 'bitconcatenate' 'or_ln80_25' <Predicate = (tmp_4_1_3)> <Delay = 0.00>
ST_5 : Operation 261 [1/1] (0.80ns)   --->   "%select_ln79_27 = select i1 %tmp_4_1_3, i29 %or_ln80_25, i29 %zext_ln79_27" [src/honeybee.c:79]   --->   Operation 261 'select' 'select_ln79_27' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 262 [1/1] (0.00ns)   --->   "%zext_ln79_28 = zext i29 %select_ln79_27 to i30" [src/honeybee.c:79]   --->   Operation 262 'zext' 'zext_ln79_28' <Predicate = (!tmp_4_1_3_1)> <Delay = 0.00>
ST_5 : Operation 263 [1/1] (0.00ns)   --->   "%or_ln80_26 = call i30 @_ssdm_op_BitConcatenate.i30.i1.i29(i1 true, i29 %select_ln79_27)" [src/honeybee.c:80]   --->   Operation 263 'bitconcatenate' 'or_ln80_26' <Predicate = (tmp_4_1_3_1)> <Delay = 0.00>
ST_5 : Operation 264 [1/1] (0.76ns)   --->   "%select_ln79_28 = select i1 %tmp_4_1_3_1, i30 %or_ln80_26, i30 %zext_ln79_28" [src/honeybee.c:79]   --->   Operation 264 'select' 'select_ln79_28' <Predicate = true> <Delay = 0.76> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 265 [1/1] (0.00ns)   --->   "%zext_ln79_29 = zext i30 %select_ln79_28 to i31" [src/honeybee.c:79]   --->   Operation 265 'zext' 'zext_ln79_29' <Predicate = (!tmp_4_1_3_2)> <Delay = 0.00>
ST_5 : Operation 266 [1/1] (0.00ns)   --->   "%or_ln80_27 = call i31 @_ssdm_op_BitConcatenate.i31.i1.i30(i1 true, i30 %select_ln79_28)" [src/honeybee.c:80]   --->   Operation 266 'bitconcatenate' 'or_ln80_27' <Predicate = (tmp_4_1_3_2)> <Delay = 0.00>
ST_5 : Operation 267 [1/1] (0.73ns)   --->   "%select_ln79_29 = select i1 %tmp_4_1_3_2, i31 %or_ln80_27, i31 %zext_ln79_29" [src/honeybee.c:79]   --->   Operation 267 'select' 'select_ln79_29' <Predicate = true> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 268 [1/1] (0.00ns) (grouped into LUT with out node select_ln79_31)   --->   "%zext_ln79_30 = zext i31 %select_ln79_29 to i32" [src/honeybee.c:79]   --->   Operation 268 'zext' 'zext_ln79_30' <Predicate = (!tmp_4_1_3_3)> <Delay = 0.00>
ST_5 : Operation 269 [1/1] (0.00ns) (grouped into LUT with out node select_ln79_31)   --->   "%or_ln80_28 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 true, i31 %select_ln79_29)" [src/honeybee.c:80]   --->   Operation 269 'bitconcatenate' 'or_ln80_28' <Predicate = (tmp_4_1_3_3)> <Delay = 0.00>
ST_5 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node select_ln79_31)   --->   "%select_ln79_30 = select i1 %tmp_4_1_3_3, i32 %or_ln80_28, i32 %zext_ln79_30" [src/honeybee.c:79]   --->   Operation 270 'select' 'select_ln79_30' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node select_ln79_31)   --->   "%or_ln79_30 = or i1 %or_ln79_29, %or_ln79_14" [src/honeybee.c:79]   --->   Operation 271 'or' 'or_ln79_30' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 272 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln79_31 = select i1 %or_ln79_30, i32 -1, i32 %select_ln79_30" [src/honeybee.c:79]   --->   Operation 272 'select' 'select_ln79_31' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 273 [1/1] (0.00ns)   --->   "%sext_ln79 = sext i32 %select_ln79_31 to i64" [src/honeybee.c:79]   --->   Operation 273 'sext' 'sext_ln79' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 274 [1/1] (0.00ns)   --->   "ret i64 %sext_ln79" [src/honeybee.c:86]   --->   Operation 274 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.75ns
The critical path consists of the following:
	wire read on port 'edge_p2_z' (src/honeybee.c:79) [15]  (0 ns)
	'call' operation ('tmp_4', src/honeybee.c:79) to 'lineIntersectGrid' [21]  (8.75 ns)

 <State 2>: 8.37ns
The critical path consists of the following:
	'call' operation ('tmp_4_2_1', src/honeybee.c:79) to 'lineIntersectGrid' [150]  (6.41 ns)
	'or' operation ('or_ln79_1', src/honeybee.c:79) [155]  (0 ns)
	'or' operation ('or_ln79_2', src/honeybee.c:79) [156]  (0.978 ns)
	'or' operation ('or_ln79_6', src/honeybee.c:79) [160]  (0.978 ns)

 <State 3>: 8.61ns
The critical path consists of the following:
	'select' operation ('select_ln79', src/honeybee.c:79) [25]  (0.993 ns)
	'select' operation ('select_ln79_1', src/honeybee.c:79) [29]  (0.98 ns)
	'select' operation ('select_ln79_2', src/honeybee.c:79) [33]  (1.02 ns)
	'select' operation ('select_ln79_3', src/honeybee.c:79) [37]  (1.22 ns)
	'select' operation ('select_ln79_4', src/honeybee.c:79) [41]  (1.19 ns)
	'select' operation ('select_ln79_5', src/honeybee.c:79) [45]  (0.993 ns)
	'select' operation ('select_ln79_6', src/honeybee.c:79) [49]  (1.25 ns)
	'select' operation ('select_ln79_7', src/honeybee.c:79) [53]  (0.968 ns)

 <State 4>: 8.72ns
The critical path consists of the following:
	'select' operation ('select_ln79_8', src/honeybee.c:79) [57]  (0.687 ns)
	'select' operation ('select_ln79_9', src/honeybee.c:79) [61]  (0.692 ns)
	'select' operation ('select_ln79_10', src/honeybee.c:79) [65]  (0.697 ns)
	'select' operation ('select_ln79_11', src/honeybee.c:79) [69]  (0.7 ns)
	'select' operation ('select_ln79_12', src/honeybee.c:79) [73]  (0.702 ns)
	'select' operation ('select_ln79_13', src/honeybee.c:79) [77]  (0.754 ns)
	'select' operation ('select_ln79_14', src/honeybee.c:79) [81]  (0.805 ns)
	'select' operation ('select_ln79_15', src/honeybee.c:79) [85]  (0.781 ns)
	'select' operation ('select_ln79_16', src/honeybee.c:79) [89]  (0.756 ns)
	'select' operation ('select_ln79_17', src/honeybee.c:79) [93]  (0.732 ns)
	'select' operation ('select_ln79_18', src/honeybee.c:79) [97]  (0.708 ns)
	'select' operation ('select_ln79_19', src/honeybee.c:79) [101]  (0.704 ns)

 <State 5>: 8.51ns
The critical path consists of the following:
	'select' operation ('select_ln79_20', src/honeybee.c:79) [105]  (0.701 ns)
	'select' operation ('select_ln79_21', src/honeybee.c:79) [109]  (0.698 ns)
	'select' operation ('select_ln79_22', src/honeybee.c:79) [113]  (0.694 ns)
	'select' operation ('select_ln79_23', src/honeybee.c:79) [117]  (0.73 ns)
	'select' operation ('select_ln79_24', src/honeybee.c:79) [121]  (0.766 ns)
	'select' operation ('select_ln79_25', src/honeybee.c:79) [125]  (0.803 ns)
	'select' operation ('select_ln79_26', src/honeybee.c:79) [129]  (0.839 ns)
	'select' operation ('select_ln79_27', src/honeybee.c:79) [133]  (0.804 ns)
	'select' operation ('select_ln79_28', src/honeybee.c:79) [137]  (0.768 ns)
	'select' operation ('select_ln79_29', src/honeybee.c:79) [141]  (0.733 ns)
	'select' operation ('select_ln79_30', src/honeybee.c:79) [145]  (0 ns)
	'select' operation ('select_ln79_31', src/honeybee.c:79) [209]  (0.978 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
