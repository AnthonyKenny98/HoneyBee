// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "honeybee.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic honeybee::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic honeybee::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<76> honeybee::ap_ST_fsm_state1 = "1";
const sc_lv<76> honeybee::ap_ST_fsm_state2 = "10";
const sc_lv<76> honeybee::ap_ST_fsm_state3 = "100";
const sc_lv<76> honeybee::ap_ST_fsm_state4 = "1000";
const sc_lv<76> honeybee::ap_ST_fsm_state5 = "10000";
const sc_lv<76> honeybee::ap_ST_fsm_state6 = "100000";
const sc_lv<76> honeybee::ap_ST_fsm_state7 = "1000000";
const sc_lv<76> honeybee::ap_ST_fsm_state8 = "10000000";
const sc_lv<76> honeybee::ap_ST_fsm_state9 = "100000000";
const sc_lv<76> honeybee::ap_ST_fsm_state10 = "1000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state11 = "10000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state12 = "100000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<76> honeybee::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> honeybee::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> honeybee::ap_const_lv32_7 = "111";
const sc_lv<32> honeybee::ap_const_lv32_1D = "11101";
const sc_lv<32> honeybee::ap_const_lv32_35 = "110101";
const sc_lv<32> honeybee::ap_const_lv32_B = "1011";
const sc_lv<32> honeybee::ap_const_lv32_21 = "100001";
const sc_lv<32> honeybee::ap_const_lv32_39 = "111001";
const sc_lv<32> honeybee::ap_const_lv32_F = "1111";
const sc_lv<32> honeybee::ap_const_lv32_25 = "100101";
const sc_lv<32> honeybee::ap_const_lv32_3D = "111101";
const sc_lv<32> honeybee::ap_const_lv32_43 = "1000011";
const sc_lv<32> honeybee::ap_const_lv32_47 = "1000111";
const sc_lv<32> honeybee::ap_const_lv32_3 = "11";
const sc_lv<32> honeybee::ap_const_lv32_4 = "100";
const sc_lv<32> honeybee::ap_const_lv32_19 = "11001";
const sc_lv<32> honeybee::ap_const_lv32_1A = "11010";
const sc_lv<1> honeybee::ap_const_lv1_0 = "0";
const sc_lv<32> honeybee::ap_const_lv32_2F = "101111";
const sc_lv<32> honeybee::ap_const_lv32_31 = "110001";
const sc_lv<32> honeybee::ap_const_lv32_32 = "110010";
const sc_lv<32> honeybee::ap_const_lv32_45 = "1000101";
const sc_lv<32> honeybee::ap_const_lv32_49 = "1001001";
const sc_lv<32> honeybee::ap_const_lv32_4A = "1001010";
const sc_lv<4> honeybee::ap_const_lv4_0 = "0000";
const sc_lv<1> honeybee::ap_const_lv1_1 = "1";
const sc_lv<32> honeybee::ap_const_lv32_4B = "1001011";
const sc_lv<32> honeybee::ap_const_lv32_1 = "1";
const sc_lv<32> honeybee::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> honeybee::ap_const_lv32_8 = "1000";
const sc_lv<32> honeybee::ap_const_lv32_C = "1100";
const sc_lv<32> honeybee::ap_const_lv32_1E = "11110";
const sc_lv<32> honeybee::ap_const_lv32_22 = "100010";
const sc_lv<32> honeybee::ap_const_lv32_36 = "110110";
const sc_lv<32> honeybee::ap_const_lv32_3A = "111010";
const sc_lv<32> honeybee::ap_const_lv32_10 = "10000";
const sc_lv<32> honeybee::ap_const_lv32_26 = "100110";
const sc_lv<32> honeybee::ap_const_lv32_3E = "111110";
const sc_lv<32> honeybee::ap_const_lv32_30 = "110000";
const sc_lv<32> honeybee::ap_const_lv32_44 = "1000100";
const sc_lv<32> honeybee::ap_const_lv32_48 = "1001000";
const sc_lv<4> honeybee::ap_const_lv4_8 = "1000";
const sc_lv<4> honeybee::ap_const_lv4_1 = "1";
const sc_lv<23> honeybee::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> honeybee::ap_const_lv32_17 = "10111";
const sc_lv<8> honeybee::ap_const_lv8_FF = "11111111";
const sc_lv<2> honeybee::ap_const_lv2_0 = "00";
const sc_lv<2> honeybee::ap_const_lv2_1 = "1";
const sc_lv<5> honeybee::ap_const_lv5_4 = "100";
const sc_lv<5> honeybee::ap_const_lv5_2 = "10";
const bool honeybee::ap_const_boolean_1 = true;

honeybee::honeybee(sc_module_name name) : sc_module(name), mVcdFile(0) {
    honeybee_faddfsubbkb_U1 = new honeybee_faddfsubbkb<1,4,32,32,32>("honeybee_faddfsubbkb_U1");
    honeybee_faddfsubbkb_U1->clk(ap_clk);
    honeybee_faddfsubbkb_U1->reset(ap_rst);
    honeybee_faddfsubbkb_U1->din0(grp_fu_131_p0);
    honeybee_faddfsubbkb_U1->din1(grp_fu_131_p1);
    honeybee_faddfsubbkb_U1->opcode(grp_fu_131_opcode);
    honeybee_faddfsubbkb_U1->ce(ap_var_for_const0);
    honeybee_faddfsubbkb_U1->dout(grp_fu_131_p2);
    honeybee_fsub_32ncud_U2 = new honeybee_fsub_32ncud<1,4,32,32,32>("honeybee_fsub_32ncud_U2");
    honeybee_fsub_32ncud_U2->clk(ap_clk);
    honeybee_fsub_32ncud_U2->reset(ap_rst);
    honeybee_fsub_32ncud_U2->din0(edge_p2_y);
    honeybee_fsub_32ncud_U2->din1(edge_p1_y);
    honeybee_fsub_32ncud_U2->ce(ap_var_for_const0);
    honeybee_fsub_32ncud_U2->dout(grp_fu_137_p2);
    honeybee_fsub_32ncud_U3 = new honeybee_fsub_32ncud<1,4,32,32,32>("honeybee_fsub_32ncud_U3");
    honeybee_fsub_32ncud_U3->clk(ap_clk);
    honeybee_fsub_32ncud_U3->reset(ap_rst);
    honeybee_fsub_32ncud_U3->din0(edge_p2_z);
    honeybee_fsub_32ncud_U3->din1(edge_p1_z);
    honeybee_fsub_32ncud_U3->ce(ap_var_for_const0);
    honeybee_fsub_32ncud_U3->dout(grp_fu_143_p2);
    honeybee_fdiv_32ndEe_U4 = new honeybee_fdiv_32ndEe<1,10,32,32,32>("honeybee_fdiv_32ndEe_U4");
    honeybee_fdiv_32ndEe_U4->clk(ap_clk);
    honeybee_fdiv_32ndEe_U4->reset(ap_rst);
    honeybee_fdiv_32ndEe_U4->din0(grp_fu_150_p0);
    honeybee_fdiv_32ndEe_U4->din1(grp_fu_150_p1);
    honeybee_fdiv_32ndEe_U4->ce(ap_var_for_const0);
    honeybee_fdiv_32ndEe_U4->dout(grp_fu_150_p2);
    honeybee_fdiv_32ndEe_U5 = new honeybee_fdiv_32ndEe<1,10,32,32,32>("honeybee_fdiv_32ndEe_U5");
    honeybee_fdiv_32ndEe_U5->clk(ap_clk);
    honeybee_fdiv_32ndEe_U5->reset(ap_rst);
    honeybee_fdiv_32ndEe_U5->din0(reg_177);
    honeybee_fdiv_32ndEe_U5->din1(grp_fu_154_p1);
    honeybee_fdiv_32ndEe_U5->ce(ap_var_for_const0);
    honeybee_fdiv_32ndEe_U5->dout(grp_fu_154_p2);
    honeybee_sitofp_3eOg_U6 = new honeybee_sitofp_3eOg<1,4,32,32>("honeybee_sitofp_3eOg_U6");
    honeybee_sitofp_3eOg_U6->clk(ap_clk);
    honeybee_sitofp_3eOg_U6->reset(ap_rst);
    honeybee_sitofp_3eOg_U6->din0(grp_fu_158_p0);
    honeybee_sitofp_3eOg_U6->ce(ap_var_for_const0);
    honeybee_sitofp_3eOg_U6->dout(grp_fu_158_p1);
    honeybee_fcmp_32nfYi_U7 = new honeybee_fcmp_32nfYi<1,2,32,32,1>("honeybee_fcmp_32nfYi_U7");
    honeybee_fcmp_32nfYi_U7->clk(ap_clk);
    honeybee_fcmp_32nfYi_U7->reset(ap_rst);
    honeybee_fcmp_32nfYi_U7->din0(grp_fu_161_p0);
    honeybee_fcmp_32nfYi_U7->din1(grp_fu_161_p1);
    honeybee_fcmp_32nfYi_U7->ce(ap_var_for_const0);
    honeybee_fcmp_32nfYi_U7->opcode(grp_fu_161_opcode);
    honeybee_fcmp_32nfYi_U7->dout(grp_fu_161_p2);
    honeybee_fcmp_32nfYi_U8 = new honeybee_fcmp_32nfYi<1,2,32,32,1>("honeybee_fcmp_32nfYi_U8");
    honeybee_fcmp_32nfYi_U8->clk(ap_clk);
    honeybee_fcmp_32nfYi_U8->reset(ap_rst);
    honeybee_fcmp_32nfYi_U8->din0(max_2_reg_741);
    honeybee_fcmp_32nfYi_U8->din1(max_5_reg_800);
    honeybee_fcmp_32nfYi_U8->ce(ap_var_for_const0);
    honeybee_fcmp_32nfYi_U8->opcode(ap_var_for_const1);
    honeybee_fcmp_32nfYi_U8->dout(grp_fu_165_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln20_1_fu_387_p2);
    sensitive << ( and_ln20_fu_382_p2 );
    sensitive << ( grp_fu_165_p2 );

    SC_METHOD(thread_and_ln20_fu_382_p2);
    sensitive << ( or_ln20_reg_787 );
    sensitive << ( or_ln20_1_fu_376_p2 );

    SC_METHOD(thread_and_ln22_1_fu_451_p2);
    sensitive << ( grp_fu_161_p2 );
    sensitive << ( and_ln22_fu_446_p2 );

    SC_METHOD(thread_and_ln22_fu_446_p2);
    sensitive << ( or_ln20_reg_787 );
    sensitive << ( or_ln22_fu_440_p2 );

    SC_METHOD(thread_and_ln25_1_fu_469_p2);
    sensitive << ( grp_fu_161_p2 );
    sensitive << ( and_ln25_fu_464_p2 );

    SC_METHOD(thread_and_ln25_fu_464_p2);
    sensitive << ( or_ln20_1_reg_818 );
    sensitive << ( or_ln22_fu_440_p2 );

    SC_METHOD(thread_and_ln40_1_fu_341_p2);
    sensitive << ( and_ln40_fu_336_p2 );
    sensitive << ( grp_fu_161_p2 );

    SC_METHOD(thread_and_ln40_fu_336_p2);
    sensitive << ( or_ln40_reg_781 );
    sensitive << ( or_ln40_1_fu_330_p2 );

    SC_METHOD(thread_and_ln42_1_fu_530_p2);
    sensitive << ( grp_fu_161_p2 );
    sensitive << ( and_ln42_fu_525_p2 );

    SC_METHOD(thread_and_ln42_fu_525_p2);
    sensitive << ( or_ln40_reg_781 );
    sensitive << ( or_ln42_fu_519_p2 );

    SC_METHOD(thread_and_ln45_1_fu_548_p2);
    sensitive << ( grp_fu_161_p2 );
    sensitive << ( and_ln45_fu_543_p2 );

    SC_METHOD(thread_and_ln45_fu_543_p2);
    sensitive << ( or_ln40_1_reg_808 );
    sensitive << ( or_ln42_fu_519_p2 );

    SC_METHOD(thread_and_ln70_1_fu_640_p2);
    sensitive << ( grp_fu_161_p2 );
    sensitive << ( and_ln70_fu_634_p2 );

    SC_METHOD(thread_and_ln70_fu_634_p2);
    sensitive << ( or_ln70_fu_626_p2 );
    sensitive << ( or_ln70_1_fu_630_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln76_fu_204_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln76_fu_204_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( collisionCount_0_fu_58 );
    sensitive << ( icmp_ln76_fu_204_p2 );

    SC_METHOD(thread_bitcast_ln20_1_fu_347_p1);
    sensitive << ( max_5_reg_800 );

    SC_METHOD(thread_bitcast_ln20_fu_230_p1);
    sensitive << ( grp_fu_154_p2 );

    SC_METHOD(thread_bitcast_ln22_fu_410_p1);
    sensitive << ( reg_189 );

    SC_METHOD(thread_bitcast_ln40_1_fu_301_p1);
    sensitive << ( min_3_reg_793 );

    SC_METHOD(thread_bitcast_ln40_fu_216_p1);
    sensitive << ( grp_fu_150_p2 );

    SC_METHOD(thread_bitcast_ln42_fu_489_p1);
    sensitive << ( reg_189 );

    SC_METHOD(thread_bitcast_ln70_1_fu_585_p1);
    sensitive << ( min_7_reg_847 );

    SC_METHOD(thread_bitcast_ln70_fu_568_p1);
    sensitive << ( max_reg_841 );

    SC_METHOD(thread_collisionCount_fu_646_p2);
    sensitive << ( collisionCount_0_fu_58 );

    SC_METHOD(thread_grp_fu_131_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_grp_fu_131_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( edge_p2_x );
    sensitive << ( reg_172 );
    sensitive << ( reg_177 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_grp_fu_131_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( edge_p1_x );
    sensitive << ( edge_p1_y );
    sensitive << ( edge_p1_z );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_grp_fu_150_p0);
    sensitive << ( reg_177 );
    sensitive << ( reg_184 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_grp_fu_150_p1);
    sensitive << ( tmp_1_i_i_reg_704 );
    sensitive << ( tmp_1_i3_i_reg_710 );
    sensitive << ( tmp_1_i7_i_reg_716 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_grp_fu_154_p1);
    sensitive << ( tmp_1_i_i_reg_704 );
    sensitive << ( tmp_1_i3_i_reg_710 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_grp_fu_158_p0);
    sensitive << ( zext_ln76_fu_199_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln77_fu_244_p1 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( zext_ln78_fu_393_p1 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_grp_fu_161_opcode);
    sensitive << ( and_ln40_1_reg_813 );
    sensitive << ( and_ln20_1_reg_823 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );

    SC_METHOD(thread_grp_fu_161_p0);
    sensitive << ( reg_189 );
    sensitive << ( min_reg_734 );
    sensitive << ( and_ln40_1_reg_813 );
    sensitive << ( and_ln20_1_reg_823 );
    sensitive << ( max_reg_841 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );

    SC_METHOD(thread_grp_fu_161_p1);
    sensitive << ( min_reg_734 );
    sensitive << ( max_2_reg_741 );
    sensitive << ( min_3_reg_793 );
    sensitive << ( max_5_reg_800 );
    sensitive << ( and_ln40_1_reg_813 );
    sensitive << ( and_ln20_1_reg_823 );
    sensitive << ( min_7_reg_847 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );

    SC_METHOD(thread_i_fu_210_p2);
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_icmp_ln20_1_fu_238_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( trunc_ln20_fu_234_p1 );

    SC_METHOD(thread_icmp_ln20_2_fu_364_p2);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( tmp_6_fu_350_p4 );

    SC_METHOD(thread_icmp_ln20_3_fu_370_p2);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( trunc_ln20_1_fu_360_p1 );

    SC_METHOD(thread_icmp_ln20_fu_290_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( icmp_ln77_fu_249_p2 );
    sensitive << ( tmp_5_fu_281_p4 );

    SC_METHOD(thread_icmp_ln22_1_fu_434_p2);
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( trunc_ln22_fu_424_p1 );

    SC_METHOD(thread_icmp_ln22_fu_428_p2);
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( tmp_10_fu_414_p4 );

    SC_METHOD(thread_icmp_ln40_1_fu_224_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( trunc_ln40_fu_220_p1 );

    SC_METHOD(thread_icmp_ln40_2_fu_318_p2);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( tmp_3_fu_304_p4 );

    SC_METHOD(thread_icmp_ln40_3_fu_324_p2);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( trunc_ln40_1_fu_314_p1 );

    SC_METHOD(thread_icmp_ln40_fu_270_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( icmp_ln77_fu_249_p2 );
    sensitive << ( tmp_2_fu_261_p4 );

    SC_METHOD(thread_icmp_ln42_1_fu_513_p2);
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( trunc_ln42_fu_503_p1 );

    SC_METHOD(thread_icmp_ln42_fu_507_p2);
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( tmp_8_fu_493_p4 );

    SC_METHOD(thread_icmp_ln70_1_fu_608_p2);
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( trunc_ln70_fu_581_p1 );

    SC_METHOD(thread_icmp_ln70_2_fu_614_p2);
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( tmp_14_fu_588_p4 );

    SC_METHOD(thread_icmp_ln70_3_fu_620_p2);
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( trunc_ln70_1_fu_598_p1 );

    SC_METHOD(thread_icmp_ln70_fu_602_p2);
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( tmp_13_fu_571_p4 );

    SC_METHOD(thread_icmp_ln76_fu_204_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_icmp_ln77_fu_249_p2);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_icmp_ln78_fu_398_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( k_0_reg_120 );

    SC_METHOD(thread_j_fu_255_p2);
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_k_fu_404_p2);
    sensitive << ( k_0_reg_120 );

    SC_METHOD(thread_max_4_fu_457_p3);
    sensitive << ( reg_189 );
    sensitive << ( max_2_reg_741 );
    sensitive << ( and_ln22_1_fu_451_p2 );

    SC_METHOD(thread_max_6_fu_475_p3);
    sensitive << ( reg_189 );
    sensitive << ( max_5_reg_800 );
    sensitive << ( and_ln25_1_fu_469_p2 );

    SC_METHOD(thread_max_fu_482_p3);
    sensitive << ( and_ln20_1_reg_823 );
    sensitive << ( max_4_fu_457_p3 );
    sensitive << ( max_6_fu_475_p3 );

    SC_METHOD(thread_min_2_fu_536_p3);
    sensitive << ( reg_189 );
    sensitive << ( min_reg_734 );
    sensitive << ( and_ln42_1_fu_530_p2 );

    SC_METHOD(thread_min_4_fu_554_p3);
    sensitive << ( reg_189 );
    sensitive << ( min_3_reg_793 );
    sensitive << ( and_ln45_1_fu_548_p2 );

    SC_METHOD(thread_min_7_fu_561_p3);
    sensitive << ( and_ln40_1_reg_813 );
    sensitive << ( min_2_fu_536_p3 );
    sensitive << ( min_4_fu_554_p3 );

    SC_METHOD(thread_or_ln20_1_fu_376_p2);
    sensitive << ( icmp_ln20_3_fu_370_p2 );
    sensitive << ( icmp_ln20_2_fu_364_p2 );

    SC_METHOD(thread_or_ln20_fu_296_p2);
    sensitive << ( icmp_ln20_1_reg_763 );
    sensitive << ( icmp_ln20_fu_290_p2 );

    SC_METHOD(thread_or_ln22_fu_440_p2);
    sensitive << ( icmp_ln22_1_fu_434_p2 );
    sensitive << ( icmp_ln22_fu_428_p2 );

    SC_METHOD(thread_or_ln40_1_fu_330_p2);
    sensitive << ( icmp_ln40_3_fu_324_p2 );
    sensitive << ( icmp_ln40_2_fu_318_p2 );

    SC_METHOD(thread_or_ln40_fu_276_p2);
    sensitive << ( icmp_ln40_1_reg_753 );
    sensitive << ( icmp_ln40_fu_270_p2 );

    SC_METHOD(thread_or_ln42_fu_519_p2);
    sensitive << ( icmp_ln42_1_fu_513_p2 );
    sensitive << ( icmp_ln42_fu_507_p2 );

    SC_METHOD(thread_or_ln70_1_fu_630_p2);
    sensitive << ( icmp_ln70_2_reg_863 );
    sensitive << ( icmp_ln70_3_reg_868 );

    SC_METHOD(thread_or_ln70_fu_626_p2);
    sensitive << ( icmp_ln70_reg_853 );
    sensitive << ( icmp_ln70_1_reg_858 );

    SC_METHOD(thread_select_ln80_fu_652_p3);
    sensitive << ( collisionCount_0_fu_58 );
    sensitive << ( and_ln70_1_fu_640_p2 );
    sensitive << ( collisionCount_fu_646_p2 );

    SC_METHOD(thread_tmp_10_fu_414_p4);
    sensitive << ( bitcast_ln22_fu_410_p1 );

    SC_METHOD(thread_tmp_13_fu_571_p4);
    sensitive << ( bitcast_ln70_fu_568_p1 );

    SC_METHOD(thread_tmp_14_fu_588_p4);
    sensitive << ( bitcast_ln70_1_fu_585_p1 );

    SC_METHOD(thread_tmp_2_fu_261_p4);
    sensitive << ( bitcast_ln40_reg_748 );

    SC_METHOD(thread_tmp_3_fu_304_p4);
    sensitive << ( bitcast_ln40_1_fu_301_p1 );

    SC_METHOD(thread_tmp_5_fu_281_p4);
    sensitive << ( bitcast_ln20_reg_758 );

    SC_METHOD(thread_tmp_6_fu_350_p4);
    sensitive << ( bitcast_ln20_1_fu_347_p1 );

    SC_METHOD(thread_tmp_8_fu_493_p4);
    sensitive << ( bitcast_ln42_fu_489_p1 );

    SC_METHOD(thread_trunc_ln20_1_fu_360_p1);
    sensitive << ( bitcast_ln20_1_fu_347_p1 );

    SC_METHOD(thread_trunc_ln20_fu_234_p1);
    sensitive << ( bitcast_ln20_fu_230_p1 );

    SC_METHOD(thread_trunc_ln22_fu_424_p1);
    sensitive << ( bitcast_ln22_fu_410_p1 );

    SC_METHOD(thread_trunc_ln40_1_fu_314_p1);
    sensitive << ( bitcast_ln40_1_fu_301_p1 );

    SC_METHOD(thread_trunc_ln40_fu_220_p1);
    sensitive << ( bitcast_ln40_fu_216_p1 );

    SC_METHOD(thread_trunc_ln42_fu_503_p1);
    sensitive << ( bitcast_ln42_fu_489_p1 );

    SC_METHOD(thread_trunc_ln70_1_fu_598_p1);
    sensitive << ( bitcast_ln70_1_fu_585_p1 );

    SC_METHOD(thread_trunc_ln70_fu_581_p1);
    sensitive << ( bitcast_ln70_fu_568_p1 );

    SC_METHOD(thread_zext_ln76_fu_199_p1);
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_zext_ln77_fu_244_p1);
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_zext_ln78_fu_393_p1);
    sensitive << ( k_0_reg_120 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( icmp_ln77_fu_249_p2 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_ln78_fu_398_p2 );
    sensitive << ( icmp_ln76_fu_204_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "honeybee_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, edge_p1_x, "(port)edge_p1_x");
    sc_trace(mVcdFile, edge_p1_y, "(port)edge_p1_y");
    sc_trace(mVcdFile, edge_p1_z, "(port)edge_p1_z");
    sc_trace(mVcdFile, edge_p2_x, "(port)edge_p2_x");
    sc_trace(mVcdFile, edge_p2_y, "(port)edge_p2_y");
    sc_trace(mVcdFile, edge_p2_z, "(port)edge_p2_z");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_158_p1, "grp_fu_158_p1");
    sc_trace(mVcdFile, reg_172, "reg_172");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, grp_fu_131_p2, "grp_fu_131_p2");
    sc_trace(mVcdFile, reg_177, "reg_177");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, reg_184, "reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, grp_fu_150_p2, "grp_fu_150_p2");
    sc_trace(mVcdFile, reg_189, "reg_189");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, tmp_1_i_i_reg_704, "tmp_1_i_i_reg_704");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_137_p2, "grp_fu_137_p2");
    sc_trace(mVcdFile, tmp_1_i3_i_reg_710, "tmp_1_i3_i_reg_710");
    sc_trace(mVcdFile, grp_fu_143_p2, "grp_fu_143_p2");
    sc_trace(mVcdFile, tmp_1_i7_i_reg_716, "tmp_1_i7_i_reg_716");
    sc_trace(mVcdFile, zext_ln76_fu_199_p1, "zext_ln76_fu_199_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_fu_210_p2, "i_fu_210_p2");
    sc_trace(mVcdFile, i_reg_729, "i_reg_729");
    sc_trace(mVcdFile, min_reg_734, "min_reg_734");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_154_p2, "grp_fu_154_p2");
    sc_trace(mVcdFile, max_2_reg_741, "max_2_reg_741");
    sc_trace(mVcdFile, bitcast_ln40_fu_216_p1, "bitcast_ln40_fu_216_p1");
    sc_trace(mVcdFile, bitcast_ln40_reg_748, "bitcast_ln40_reg_748");
    sc_trace(mVcdFile, icmp_ln40_1_fu_224_p2, "icmp_ln40_1_fu_224_p2");
    sc_trace(mVcdFile, icmp_ln40_1_reg_753, "icmp_ln40_1_reg_753");
    sc_trace(mVcdFile, bitcast_ln20_fu_230_p1, "bitcast_ln20_fu_230_p1");
    sc_trace(mVcdFile, bitcast_ln20_reg_758, "bitcast_ln20_reg_758");
    sc_trace(mVcdFile, icmp_ln20_1_fu_238_p2, "icmp_ln20_1_fu_238_p2");
    sc_trace(mVcdFile, icmp_ln20_1_reg_763, "icmp_ln20_1_reg_763");
    sc_trace(mVcdFile, zext_ln77_fu_244_p1, "zext_ln77_fu_244_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, j_fu_255_p2, "j_fu_255_p2");
    sc_trace(mVcdFile, j_reg_776, "j_reg_776");
    sc_trace(mVcdFile, or_ln40_fu_276_p2, "or_ln40_fu_276_p2");
    sc_trace(mVcdFile, or_ln40_reg_781, "or_ln40_reg_781");
    sc_trace(mVcdFile, icmp_ln77_fu_249_p2, "icmp_ln77_fu_249_p2");
    sc_trace(mVcdFile, or_ln20_fu_296_p2, "or_ln20_fu_296_p2");
    sc_trace(mVcdFile, or_ln20_reg_787, "or_ln20_reg_787");
    sc_trace(mVcdFile, min_3_reg_793, "min_3_reg_793");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, max_5_reg_800, "max_5_reg_800");
    sc_trace(mVcdFile, or_ln40_1_fu_330_p2, "or_ln40_1_fu_330_p2");
    sc_trace(mVcdFile, or_ln40_1_reg_808, "or_ln40_1_reg_808");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, and_ln40_1_fu_341_p2, "and_ln40_1_fu_341_p2");
    sc_trace(mVcdFile, and_ln40_1_reg_813, "and_ln40_1_reg_813");
    sc_trace(mVcdFile, or_ln20_1_fu_376_p2, "or_ln20_1_fu_376_p2");
    sc_trace(mVcdFile, or_ln20_1_reg_818, "or_ln20_1_reg_818");
    sc_trace(mVcdFile, and_ln20_1_fu_387_p2, "and_ln20_1_fu_387_p2");
    sc_trace(mVcdFile, and_ln20_1_reg_823, "and_ln20_1_reg_823");
    sc_trace(mVcdFile, zext_ln78_fu_393_p1, "zext_ln78_fu_393_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, k_fu_404_p2, "k_fu_404_p2");
    sc_trace(mVcdFile, k_reg_836, "k_reg_836");
    sc_trace(mVcdFile, max_fu_482_p3, "max_fu_482_p3");
    sc_trace(mVcdFile, max_reg_841, "max_reg_841");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, min_7_fu_561_p3, "min_7_fu_561_p3");
    sc_trace(mVcdFile, min_7_reg_847, "min_7_reg_847");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, icmp_ln70_fu_602_p2, "icmp_ln70_fu_602_p2");
    sc_trace(mVcdFile, icmp_ln70_reg_853, "icmp_ln70_reg_853");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, icmp_ln70_1_fu_608_p2, "icmp_ln70_1_fu_608_p2");
    sc_trace(mVcdFile, icmp_ln70_1_reg_858, "icmp_ln70_1_reg_858");
    sc_trace(mVcdFile, icmp_ln70_2_fu_614_p2, "icmp_ln70_2_fu_614_p2");
    sc_trace(mVcdFile, icmp_ln70_2_reg_863, "icmp_ln70_2_reg_863");
    sc_trace(mVcdFile, icmp_ln70_3_fu_620_p2, "icmp_ln70_3_fu_620_p2");
    sc_trace(mVcdFile, icmp_ln70_3_reg_868, "icmp_ln70_3_reg_868");
    sc_trace(mVcdFile, i_0_reg_98, "i_0_reg_98");
    sc_trace(mVcdFile, j_0_reg_109, "j_0_reg_109");
    sc_trace(mVcdFile, icmp_ln78_fu_398_p2, "icmp_ln78_fu_398_p2");
    sc_trace(mVcdFile, k_0_reg_120, "k_0_reg_120");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, collisionCount_0_fu_58, "collisionCount_0_fu_58");
    sc_trace(mVcdFile, select_ln80_fu_652_p3, "select_ln80_fu_652_p3");
    sc_trace(mVcdFile, icmp_ln76_fu_204_p2, "icmp_ln76_fu_204_p2");
    sc_trace(mVcdFile, grp_fu_131_p0, "grp_fu_131_p0");
    sc_trace(mVcdFile, grp_fu_131_p1, "grp_fu_131_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, grp_fu_150_p0, "grp_fu_150_p0");
    sc_trace(mVcdFile, grp_fu_150_p1, "grp_fu_150_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, grp_fu_154_p1, "grp_fu_154_p1");
    sc_trace(mVcdFile, grp_fu_158_p0, "grp_fu_158_p0");
    sc_trace(mVcdFile, grp_fu_161_p0, "grp_fu_161_p0");
    sc_trace(mVcdFile, grp_fu_161_p1, "grp_fu_161_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, trunc_ln40_fu_220_p1, "trunc_ln40_fu_220_p1");
    sc_trace(mVcdFile, trunc_ln20_fu_234_p1, "trunc_ln20_fu_234_p1");
    sc_trace(mVcdFile, tmp_2_fu_261_p4, "tmp_2_fu_261_p4");
    sc_trace(mVcdFile, icmp_ln40_fu_270_p2, "icmp_ln40_fu_270_p2");
    sc_trace(mVcdFile, tmp_5_fu_281_p4, "tmp_5_fu_281_p4");
    sc_trace(mVcdFile, icmp_ln20_fu_290_p2, "icmp_ln20_fu_290_p2");
    sc_trace(mVcdFile, bitcast_ln40_1_fu_301_p1, "bitcast_ln40_1_fu_301_p1");
    sc_trace(mVcdFile, tmp_3_fu_304_p4, "tmp_3_fu_304_p4");
    sc_trace(mVcdFile, trunc_ln40_1_fu_314_p1, "trunc_ln40_1_fu_314_p1");
    sc_trace(mVcdFile, icmp_ln40_3_fu_324_p2, "icmp_ln40_3_fu_324_p2");
    sc_trace(mVcdFile, icmp_ln40_2_fu_318_p2, "icmp_ln40_2_fu_318_p2");
    sc_trace(mVcdFile, and_ln40_fu_336_p2, "and_ln40_fu_336_p2");
    sc_trace(mVcdFile, grp_fu_161_p2, "grp_fu_161_p2");
    sc_trace(mVcdFile, bitcast_ln20_1_fu_347_p1, "bitcast_ln20_1_fu_347_p1");
    sc_trace(mVcdFile, tmp_6_fu_350_p4, "tmp_6_fu_350_p4");
    sc_trace(mVcdFile, trunc_ln20_1_fu_360_p1, "trunc_ln20_1_fu_360_p1");
    sc_trace(mVcdFile, icmp_ln20_3_fu_370_p2, "icmp_ln20_3_fu_370_p2");
    sc_trace(mVcdFile, icmp_ln20_2_fu_364_p2, "icmp_ln20_2_fu_364_p2");
    sc_trace(mVcdFile, and_ln20_fu_382_p2, "and_ln20_fu_382_p2");
    sc_trace(mVcdFile, grp_fu_165_p2, "grp_fu_165_p2");
    sc_trace(mVcdFile, bitcast_ln22_fu_410_p1, "bitcast_ln22_fu_410_p1");
    sc_trace(mVcdFile, tmp_10_fu_414_p4, "tmp_10_fu_414_p4");
    sc_trace(mVcdFile, trunc_ln22_fu_424_p1, "trunc_ln22_fu_424_p1");
    sc_trace(mVcdFile, icmp_ln22_1_fu_434_p2, "icmp_ln22_1_fu_434_p2");
    sc_trace(mVcdFile, icmp_ln22_fu_428_p2, "icmp_ln22_fu_428_p2");
    sc_trace(mVcdFile, or_ln22_fu_440_p2, "or_ln22_fu_440_p2");
    sc_trace(mVcdFile, and_ln22_fu_446_p2, "and_ln22_fu_446_p2");
    sc_trace(mVcdFile, and_ln22_1_fu_451_p2, "and_ln22_1_fu_451_p2");
    sc_trace(mVcdFile, and_ln25_fu_464_p2, "and_ln25_fu_464_p2");
    sc_trace(mVcdFile, and_ln25_1_fu_469_p2, "and_ln25_1_fu_469_p2");
    sc_trace(mVcdFile, max_4_fu_457_p3, "max_4_fu_457_p3");
    sc_trace(mVcdFile, max_6_fu_475_p3, "max_6_fu_475_p3");
    sc_trace(mVcdFile, bitcast_ln42_fu_489_p1, "bitcast_ln42_fu_489_p1");
    sc_trace(mVcdFile, tmp_8_fu_493_p4, "tmp_8_fu_493_p4");
    sc_trace(mVcdFile, trunc_ln42_fu_503_p1, "trunc_ln42_fu_503_p1");
    sc_trace(mVcdFile, icmp_ln42_1_fu_513_p2, "icmp_ln42_1_fu_513_p2");
    sc_trace(mVcdFile, icmp_ln42_fu_507_p2, "icmp_ln42_fu_507_p2");
    sc_trace(mVcdFile, or_ln42_fu_519_p2, "or_ln42_fu_519_p2");
    sc_trace(mVcdFile, and_ln42_fu_525_p2, "and_ln42_fu_525_p2");
    sc_trace(mVcdFile, and_ln42_1_fu_530_p2, "and_ln42_1_fu_530_p2");
    sc_trace(mVcdFile, and_ln45_fu_543_p2, "and_ln45_fu_543_p2");
    sc_trace(mVcdFile, and_ln45_1_fu_548_p2, "and_ln45_1_fu_548_p2");
    sc_trace(mVcdFile, min_2_fu_536_p3, "min_2_fu_536_p3");
    sc_trace(mVcdFile, min_4_fu_554_p3, "min_4_fu_554_p3");
    sc_trace(mVcdFile, bitcast_ln70_fu_568_p1, "bitcast_ln70_fu_568_p1");
    sc_trace(mVcdFile, bitcast_ln70_1_fu_585_p1, "bitcast_ln70_1_fu_585_p1");
    sc_trace(mVcdFile, tmp_13_fu_571_p4, "tmp_13_fu_571_p4");
    sc_trace(mVcdFile, trunc_ln70_fu_581_p1, "trunc_ln70_fu_581_p1");
    sc_trace(mVcdFile, tmp_14_fu_588_p4, "tmp_14_fu_588_p4");
    sc_trace(mVcdFile, trunc_ln70_1_fu_598_p1, "trunc_ln70_1_fu_598_p1");
    sc_trace(mVcdFile, or_ln70_fu_626_p2, "or_ln70_fu_626_p2");
    sc_trace(mVcdFile, or_ln70_1_fu_630_p2, "or_ln70_1_fu_630_p2");
    sc_trace(mVcdFile, and_ln70_fu_634_p2, "and_ln70_fu_634_p2");
    sc_trace(mVcdFile, and_ln70_1_fu_640_p2, "and_ln70_1_fu_640_p2");
    sc_trace(mVcdFile, collisionCount_fu_646_p2, "collisionCount_fu_646_p2");
    sc_trace(mVcdFile, grp_fu_131_opcode, "grp_fu_131_opcode");
    sc_trace(mVcdFile, grp_fu_161_opcode, "grp_fu_161_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("honeybee.hdltvin.dat");
    mHdltvoutHandle.open("honeybee.hdltvout.dat");
}

honeybee::~honeybee() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete honeybee_faddfsubbkb_U1;
    delete honeybee_fsub_32ncud_U2;
    delete honeybee_fsub_32ncud_U3;
    delete honeybee_fdiv_32ndEe_U4;
    delete honeybee_fdiv_32ndEe_U5;
    delete honeybee_sitofp_3eOg_U6;
    delete honeybee_fcmp_32nfYi_U7;
    delete honeybee_fcmp_32nfYi_U8;
}

void honeybee::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void honeybee::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void honeybee::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        collisionCount_0_fu_58 = select_ln80_fu_652_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        collisionCount_0_fu_58 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(icmp_ln77_fu_249_p2.read(), ap_const_lv1_1))) {
        i_0_reg_98 = i_reg_729.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_reg_98 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln78_fu_398_p2.read()))) {
        j_0_reg_109 = j_reg_776.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        j_0_reg_109 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        k_0_reg_120 = k_reg_836.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        k_0_reg_120 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        and_ln20_1_reg_823 = and_ln20_1_fu_387_p2.read();
        and_ln40_1_reg_813 = and_ln40_1_fu_341_p2.read();
        or_ln20_1_reg_818 = or_ln20_1_fu_376_p2.read();
        or_ln40_1_reg_808 = or_ln40_1_fu_330_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        bitcast_ln20_reg_758 = bitcast_ln20_fu_230_p1.read();
        bitcast_ln40_reg_748 = bitcast_ln40_fu_216_p1.read();
        icmp_ln20_1_reg_763 = icmp_ln20_1_fu_238_p2.read();
        icmp_ln40_1_reg_753 = icmp_ln40_1_fu_224_p2.read();
        max_2_reg_741 = grp_fu_154_p2.read();
        min_reg_734 = grp_fu_150_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_reg_729 = i_fu_210_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        icmp_ln70_1_reg_858 = icmp_ln70_1_fu_608_p2.read();
        icmp_ln70_2_reg_863 = icmp_ln70_2_fu_614_p2.read();
        icmp_ln70_3_reg_868 = icmp_ln70_3_fu_620_p2.read();
        icmp_ln70_reg_853 = icmp_ln70_fu_602_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        j_reg_776 = j_fu_255_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        k_reg_836 = k_fu_404_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        max_5_reg_800 = grp_fu_154_p2.read();
        min_3_reg_793 = grp_fu_150_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        max_reg_841 = max_fu_482_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        min_7_reg_847 = min_7_fu_561_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(icmp_ln77_fu_249_p2.read(), ap_const_lv1_0))) {
        or_ln20_reg_787 = or_ln20_fu_296_p2.read();
        or_ln40_reg_781 = or_ln40_fu_276_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()))) {
        reg_172 = grp_fu_158_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        reg_177 = grp_fu_131_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()))) {
        reg_184 = grp_fu_131_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
        reg_189 = grp_fu_150_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_1_i3_i_reg_710 = grp_fu_137_p2.read();
        tmp_1_i7_i_reg_716 = grp_fu_143_p2.read();
        tmp_1_i_i_reg_704 = grp_fu_131_p2.read();
    }
}

void honeybee::thread_and_ln20_1_fu_387_p2() {
    and_ln20_1_fu_387_p2 = (and_ln20_fu_382_p2.read() & grp_fu_165_p2.read());
}

void honeybee::thread_and_ln20_fu_382_p2() {
    and_ln20_fu_382_p2 = (or_ln20_reg_787.read() & or_ln20_1_fu_376_p2.read());
}

void honeybee::thread_and_ln22_1_fu_451_p2() {
    and_ln22_1_fu_451_p2 = (and_ln22_fu_446_p2.read() & grp_fu_161_p2.read());
}

void honeybee::thread_and_ln22_fu_446_p2() {
    and_ln22_fu_446_p2 = (or_ln22_fu_440_p2.read() & or_ln20_reg_787.read());
}

void honeybee::thread_and_ln25_1_fu_469_p2() {
    and_ln25_1_fu_469_p2 = (and_ln25_fu_464_p2.read() & grp_fu_161_p2.read());
}

void honeybee::thread_and_ln25_fu_464_p2() {
    and_ln25_fu_464_p2 = (or_ln22_fu_440_p2.read() & or_ln20_1_reg_818.read());
}

void honeybee::thread_and_ln40_1_fu_341_p2() {
    and_ln40_1_fu_341_p2 = (and_ln40_fu_336_p2.read() & grp_fu_161_p2.read());
}

void honeybee::thread_and_ln40_fu_336_p2() {
    and_ln40_fu_336_p2 = (or_ln40_reg_781.read() & or_ln40_1_fu_330_p2.read());
}

void honeybee::thread_and_ln42_1_fu_530_p2() {
    and_ln42_1_fu_530_p2 = (and_ln42_fu_525_p2.read() & grp_fu_161_p2.read());
}

void honeybee::thread_and_ln42_fu_525_p2() {
    and_ln42_fu_525_p2 = (or_ln42_fu_519_p2.read() & or_ln40_reg_781.read());
}

void honeybee::thread_and_ln45_1_fu_548_p2() {
    and_ln45_1_fu_548_p2 = (and_ln45_fu_543_p2.read() & grp_fu_161_p2.read());
}

void honeybee::thread_and_ln45_fu_543_p2() {
    and_ln45_fu_543_p2 = (or_ln42_fu_519_p2.read() & or_ln40_1_reg_808.read());
}

void honeybee::thread_and_ln70_1_fu_640_p2() {
    and_ln70_1_fu_640_p2 = (and_ln70_fu_634_p2.read() & grp_fu_161_p2.read());
}

void honeybee::thread_and_ln70_fu_634_p2() {
    and_ln70_fu_634_p2 = (or_ln70_fu_626_p2.read() & or_ln70_1_fu_630_p2.read());
}

void honeybee::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void honeybee::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void honeybee::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void honeybee::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void honeybee::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void honeybee::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void honeybee::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void honeybee::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void honeybee::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void honeybee::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void honeybee::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void honeybee::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void honeybee::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void honeybee::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void honeybee::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void honeybee::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void honeybee::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void honeybee::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void honeybee::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void honeybee::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void honeybee::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void honeybee::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void honeybee::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void honeybee::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void honeybee::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void honeybee::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void honeybee::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void honeybee::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void honeybee::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void honeybee::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[72];
}

void honeybee::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void honeybee::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void honeybee::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[75];
}

void honeybee::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void honeybee::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void honeybee::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_fu_204_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void honeybee::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void honeybee::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_fu_204_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void honeybee::thread_ap_return() {
    ap_return = collisionCount_0_fu_58.read();
}

void honeybee::thread_bitcast_ln20_1_fu_347_p1() {
    bitcast_ln20_1_fu_347_p1 = max_5_reg_800.read();
}

void honeybee::thread_bitcast_ln20_fu_230_p1() {
    bitcast_ln20_fu_230_p1 = grp_fu_154_p2.read();
}

void honeybee::thread_bitcast_ln22_fu_410_p1() {
    bitcast_ln22_fu_410_p1 = reg_189.read();
}

void honeybee::thread_bitcast_ln40_1_fu_301_p1() {
    bitcast_ln40_1_fu_301_p1 = min_3_reg_793.read();
}

void honeybee::thread_bitcast_ln40_fu_216_p1() {
    bitcast_ln40_fu_216_p1 = grp_fu_150_p2.read();
}

void honeybee::thread_bitcast_ln42_fu_489_p1() {
    bitcast_ln42_fu_489_p1 = reg_189.read();
}

void honeybee::thread_bitcast_ln70_1_fu_585_p1() {
    bitcast_ln70_1_fu_585_p1 = min_7_reg_847.read();
}

void honeybee::thread_bitcast_ln70_fu_568_p1() {
    bitcast_ln70_fu_568_p1 = max_reg_841.read();
}

void honeybee::thread_collisionCount_fu_646_p2() {
    collisionCount_fu_646_p2 = (!ap_const_lv32_1.is_01() || !collisionCount_0_fu_58.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(collisionCount_0_fu_58.read()));
}

void honeybee::thread_grp_fu_131_opcode() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()))) {
        grp_fu_131_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        grp_fu_131_opcode = ap_const_lv2_0;
    } else {
        grp_fu_131_opcode = "XX";
    }
}

void honeybee::thread_grp_fu_131_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        grp_fu_131_p0 = reg_177.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()))) {
        grp_fu_131_p0 = reg_172.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_131_p0 = edge_p2_x.read();
    } else {
        grp_fu_131_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_grp_fu_131_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        grp_fu_131_p1 = edge_p1_z.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_131_p1 = edge_p1_y.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        grp_fu_131_p1 = ap_const_lv32_3F800000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        grp_fu_131_p1 = edge_p1_x.read();
    } else {
        grp_fu_131_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_grp_fu_150_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        grp_fu_150_p0 = reg_177.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()))) {
        grp_fu_150_p0 = reg_184.read();
    } else {
        grp_fu_150_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_grp_fu_150_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()))) {
        grp_fu_150_p1 = tmp_1_i7_i_reg_716.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_150_p1 = tmp_1_i3_i_reg_710.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_150_p1 = tmp_1_i_i_reg_704.read();
    } else {
        grp_fu_150_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_grp_fu_154_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_154_p1 = tmp_1_i3_i_reg_710.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_154_p1 = tmp_1_i_i_reg_704.read();
    } else {
        grp_fu_154_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_grp_fu_158_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        grp_fu_158_p0 = zext_ln78_fu_393_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_158_p0 = zext_ln77_fu_244_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_158_p0 = zext_ln76_fu_199_p1.read();
    } else {
        grp_fu_158_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_grp_fu_161_opcode() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
          esl_seteq<1,1,1>(and_ln20_1_reg_823.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln20_1_reg_823.read())))) {
        grp_fu_161_opcode = ap_const_lv5_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
                 esl_seteq<1,1,1>(and_ln40_1_reg_813.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln40_1_reg_813.read())))) {
        grp_fu_161_opcode = ap_const_lv5_4;
    } else {
        grp_fu_161_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void honeybee::thread_grp_fu_161_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        grp_fu_161_p0 = max_reg_841.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
                 esl_seteq<1,1,1>(and_ln20_1_reg_823.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln20_1_reg_823.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
                 esl_seteq<1,1,1>(and_ln40_1_reg_813.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln40_1_reg_813.read())))) {
        grp_fu_161_p0 = reg_189.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        grp_fu_161_p0 = min_reg_734.read();
    } else {
        grp_fu_161_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_grp_fu_161_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        grp_fu_161_p1 = min_7_reg_847.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
                esl_seteq<1,1,1>(and_ln40_1_reg_813.read(), ap_const_lv1_1))) {
        grp_fu_161_p1 = min_reg_734.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, and_ln20_1_reg_823.read()))) {
        grp_fu_161_p1 = max_5_reg_800.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
                esl_seteq<1,1,1>(and_ln20_1_reg_823.read(), ap_const_lv1_1))) {
        grp_fu_161_p1 = max_2_reg_741.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln40_1_reg_813.read())))) {
        grp_fu_161_p1 = min_3_reg_793.read();
    } else {
        grp_fu_161_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void honeybee::thread_i_fu_210_p2() {
    i_fu_210_p2 = (!i_0_reg_98.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_98.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void honeybee::thread_icmp_ln20_1_fu_238_p2() {
    icmp_ln20_1_fu_238_p2 = (!trunc_ln20_fu_234_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln20_fu_234_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln20_2_fu_364_p2() {
    icmp_ln20_2_fu_364_p2 = (!tmp_6_fu_350_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_350_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln20_3_fu_370_p2() {
    icmp_ln20_3_fu_370_p2 = (!trunc_ln20_1_fu_360_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln20_1_fu_360_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln20_fu_290_p2() {
    icmp_ln20_fu_290_p2 = (!tmp_5_fu_281_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_281_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln22_1_fu_434_p2() {
    icmp_ln22_1_fu_434_p2 = (!trunc_ln22_fu_424_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln22_fu_424_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln22_fu_428_p2() {
    icmp_ln22_fu_428_p2 = (!tmp_10_fu_414_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_414_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln40_1_fu_224_p2() {
    icmp_ln40_1_fu_224_p2 = (!trunc_ln40_fu_220_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln40_fu_220_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln40_2_fu_318_p2() {
    icmp_ln40_2_fu_318_p2 = (!tmp_3_fu_304_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_304_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln40_3_fu_324_p2() {
    icmp_ln40_3_fu_324_p2 = (!trunc_ln40_1_fu_314_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln40_1_fu_314_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln40_fu_270_p2() {
    icmp_ln40_fu_270_p2 = (!tmp_2_fu_261_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_261_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln42_1_fu_513_p2() {
    icmp_ln42_1_fu_513_p2 = (!trunc_ln42_fu_503_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln42_fu_503_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln42_fu_507_p2() {
    icmp_ln42_fu_507_p2 = (!tmp_8_fu_493_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_493_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln70_1_fu_608_p2() {
    icmp_ln70_1_fu_608_p2 = (!trunc_ln70_fu_581_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln70_fu_581_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln70_2_fu_614_p2() {
    icmp_ln70_2_fu_614_p2 = (!tmp_14_fu_588_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_588_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln70_3_fu_620_p2() {
    icmp_ln70_3_fu_620_p2 = (!trunc_ln70_1_fu_598_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln70_1_fu_598_p1.read() == ap_const_lv23_0);
}

void honeybee::thread_icmp_ln70_fu_602_p2() {
    icmp_ln70_fu_602_p2 = (!tmp_13_fu_571_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_571_p4.read() != ap_const_lv8_FF);
}

void honeybee::thread_icmp_ln76_fu_204_p2() {
    icmp_ln76_fu_204_p2 = (!i_0_reg_98.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_98.read() == ap_const_lv4_8);
}

void honeybee::thread_icmp_ln77_fu_249_p2() {
    icmp_ln77_fu_249_p2 = (!j_0_reg_109.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_109.read() == ap_const_lv4_8);
}

void honeybee::thread_icmp_ln78_fu_398_p2() {
    icmp_ln78_fu_398_p2 = (!k_0_reg_120.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_120.read() == ap_const_lv4_8);
}

void honeybee::thread_j_fu_255_p2() {
    j_fu_255_p2 = (!j_0_reg_109.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_109.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void honeybee::thread_k_fu_404_p2() {
    k_fu_404_p2 = (!k_0_reg_120.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_0_reg_120.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void honeybee::thread_max_4_fu_457_p3() {
    max_4_fu_457_p3 = (!and_ln22_1_fu_451_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln22_1_fu_451_p2.read()[0].to_bool())? reg_189.read(): max_2_reg_741.read());
}

void honeybee::thread_max_6_fu_475_p3() {
    max_6_fu_475_p3 = (!and_ln25_1_fu_469_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln25_1_fu_469_p2.read()[0].to_bool())? reg_189.read(): max_5_reg_800.read());
}

void honeybee::thread_max_fu_482_p3() {
    max_fu_482_p3 = (!and_ln20_1_reg_823.read()[0].is_01())? sc_lv<32>(): ((and_ln20_1_reg_823.read()[0].to_bool())? max_4_fu_457_p3.read(): max_6_fu_475_p3.read());
}

void honeybee::thread_min_2_fu_536_p3() {
    min_2_fu_536_p3 = (!and_ln42_1_fu_530_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln42_1_fu_530_p2.read()[0].to_bool())? reg_189.read(): min_reg_734.read());
}

void honeybee::thread_min_4_fu_554_p3() {
    min_4_fu_554_p3 = (!and_ln45_1_fu_548_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln45_1_fu_548_p2.read()[0].to_bool())? reg_189.read(): min_3_reg_793.read());
}

void honeybee::thread_min_7_fu_561_p3() {
    min_7_fu_561_p3 = (!and_ln40_1_reg_813.read()[0].is_01())? sc_lv<32>(): ((and_ln40_1_reg_813.read()[0].to_bool())? min_2_fu_536_p3.read(): min_4_fu_554_p3.read());
}

void honeybee::thread_or_ln20_1_fu_376_p2() {
    or_ln20_1_fu_376_p2 = (icmp_ln20_3_fu_370_p2.read() | icmp_ln20_2_fu_364_p2.read());
}

void honeybee::thread_or_ln20_fu_296_p2() {
    or_ln20_fu_296_p2 = (icmp_ln20_1_reg_763.read() | icmp_ln20_fu_290_p2.read());
}

void honeybee::thread_or_ln22_fu_440_p2() {
    or_ln22_fu_440_p2 = (icmp_ln22_1_fu_434_p2.read() | icmp_ln22_fu_428_p2.read());
}

void honeybee::thread_or_ln40_1_fu_330_p2() {
    or_ln40_1_fu_330_p2 = (icmp_ln40_3_fu_324_p2.read() | icmp_ln40_2_fu_318_p2.read());
}

void honeybee::thread_or_ln40_fu_276_p2() {
    or_ln40_fu_276_p2 = (icmp_ln40_1_reg_753.read() | icmp_ln40_fu_270_p2.read());
}

void honeybee::thread_or_ln42_fu_519_p2() {
    or_ln42_fu_519_p2 = (icmp_ln42_1_fu_513_p2.read() | icmp_ln42_fu_507_p2.read());
}

void honeybee::thread_or_ln70_1_fu_630_p2() {
    or_ln70_1_fu_630_p2 = (icmp_ln70_3_reg_868.read() | icmp_ln70_2_reg_863.read());
}

void honeybee::thread_or_ln70_fu_626_p2() {
    or_ln70_fu_626_p2 = (icmp_ln70_1_reg_858.read() | icmp_ln70_reg_853.read());
}

void honeybee::thread_select_ln80_fu_652_p3() {
    select_ln80_fu_652_p3 = (!and_ln70_1_fu_640_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln70_1_fu_640_p2.read()[0].to_bool())? collisionCount_fu_646_p2.read(): collisionCount_0_fu_58.read());
}

void honeybee::thread_tmp_10_fu_414_p4() {
    tmp_10_fu_414_p4 = bitcast_ln22_fu_410_p1.read().range(30, 23);
}

void honeybee::thread_tmp_13_fu_571_p4() {
    tmp_13_fu_571_p4 = bitcast_ln70_fu_568_p1.read().range(30, 23);
}

void honeybee::thread_tmp_14_fu_588_p4() {
    tmp_14_fu_588_p4 = bitcast_ln70_1_fu_585_p1.read().range(30, 23);
}

void honeybee::thread_tmp_2_fu_261_p4() {
    tmp_2_fu_261_p4 = bitcast_ln40_reg_748.read().range(30, 23);
}

void honeybee::thread_tmp_3_fu_304_p4() {
    tmp_3_fu_304_p4 = bitcast_ln40_1_fu_301_p1.read().range(30, 23);
}

void honeybee::thread_tmp_5_fu_281_p4() {
    tmp_5_fu_281_p4 = bitcast_ln20_reg_758.read().range(30, 23);
}

void honeybee::thread_tmp_6_fu_350_p4() {
    tmp_6_fu_350_p4 = bitcast_ln20_1_fu_347_p1.read().range(30, 23);
}

void honeybee::thread_tmp_8_fu_493_p4() {
    tmp_8_fu_493_p4 = bitcast_ln42_fu_489_p1.read().range(30, 23);
}

void honeybee::thread_trunc_ln20_1_fu_360_p1() {
    trunc_ln20_1_fu_360_p1 = bitcast_ln20_1_fu_347_p1.read().range(23-1, 0);
}

void honeybee::thread_trunc_ln20_fu_234_p1() {
    trunc_ln20_fu_234_p1 = bitcast_ln20_fu_230_p1.read().range(23-1, 0);
}

void honeybee::thread_trunc_ln22_fu_424_p1() {
    trunc_ln22_fu_424_p1 = bitcast_ln22_fu_410_p1.read().range(23-1, 0);
}

void honeybee::thread_trunc_ln40_1_fu_314_p1() {
    trunc_ln40_1_fu_314_p1 = bitcast_ln40_1_fu_301_p1.read().range(23-1, 0);
}

void honeybee::thread_trunc_ln40_fu_220_p1() {
    trunc_ln40_fu_220_p1 = bitcast_ln40_fu_216_p1.read().range(23-1, 0);
}

void honeybee::thread_trunc_ln42_fu_503_p1() {
    trunc_ln42_fu_503_p1 = bitcast_ln42_fu_489_p1.read().range(23-1, 0);
}

void honeybee::thread_trunc_ln70_1_fu_598_p1() {
    trunc_ln70_1_fu_598_p1 = bitcast_ln70_1_fu_585_p1.read().range(23-1, 0);
}

void honeybee::thread_trunc_ln70_fu_581_p1() {
    trunc_ln70_fu_581_p1 = bitcast_ln70_fu_568_p1.read().range(23-1, 0);
}

void honeybee::thread_zext_ln76_fu_199_p1() {
    zext_ln76_fu_199_p1 = esl_zext<32,4>(i_0_reg_98.read());
}

void honeybee::thread_zext_ln77_fu_244_p1() {
    zext_ln77_fu_244_p1 = esl_zext<32,4>(j_0_reg_109.read());
}

void honeybee::thread_zext_ln78_fu_393_p1() {
    zext_ln78_fu_393_p1 = esl_zext<32,4>(k_0_reg_120.read());
}

void honeybee::thread_ap_NS_fsm() {
    if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_fu_204_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state6;
        }
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(icmp_ln77_fu_249_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state5;
        } else {
            ap_NS_fsm = ap_ST_fsm_state28;
        }
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln78_fu_398_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state27;
        } else {
            ap_NS_fsm = ap_ST_fsm_state52;
        }
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,76,76>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<76>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void honeybee::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_x\" :  \"" << edge_p1_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_y\" :  \"" << edge_p1_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_z\" :  \"" << edge_p1_z.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_x\" :  \"" << edge_p2_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_y\" :  \"" << edge_p2_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_z\" :  \"" << edge_p2_z.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

