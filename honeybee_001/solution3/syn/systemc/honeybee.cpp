// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "honeybee.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic honeybee::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic honeybee::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> honeybee::ap_ST_fsm_state1 = "1";
const sc_lv<3> honeybee::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> honeybee::ap_ST_fsm_state30 = "100";
const sc_lv<32> honeybee::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool honeybee::ap_const_boolean_1 = true;
const sc_lv<32> honeybee::ap_const_lv32_1 = "1";
const bool honeybee::ap_const_boolean_0 = false;
const sc_lv<1> honeybee::ap_const_lv1_0 = "0";
const sc_lv<1> honeybee::ap_const_lv1_1 = "1";
const sc_lv<5> honeybee::ap_const_lv5_0 = "00000";
const sc_lv<3> honeybee::ap_const_lv3_0 = "000";
const sc_lv<32> honeybee::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> honeybee::ap_const_lv32_40000000 = "1000000000000000000000000000000";
const sc_lv<32> honeybee::ap_const_lv32_40400000 = "1000000010000000000000000000000";
const sc_lv<5> honeybee::ap_const_lv5_10 = "10000";
const sc_lv<5> honeybee::ap_const_lv5_1 = "1";
const sc_lv<3> honeybee::ap_const_lv3_4 = "100";
const sc_lv<3> honeybee::ap_const_lv3_1 = "1";
const sc_lv<32> honeybee::ap_const_lv32_2 = "10";

honeybee::honeybee(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_lineIntersectPrism_fu_147 = new lineIntersectPrism("grp_lineIntersectPrism_fu_147");
    grp_lineIntersectPrism_fu_147->ap_clk(ap_clk);
    grp_lineIntersectPrism_fu_147->ap_rst(ap_rst);
    grp_lineIntersectPrism_fu_147->obs_x(obs_x_mid2_reg_394);
    grp_lineIntersectPrism_fu_147->obs_y(obs_y_reg_402);
    grp_lineIntersectPrism_fu_147->obs_z(ap_var_for_const0);
    grp_lineIntersectPrism_fu_147->edge_p1_x(edge_p1_x);
    grp_lineIntersectPrism_fu_147->edge_p1_y(edge_p1_y);
    grp_lineIntersectPrism_fu_147->edge_p1_z(edge_p1_z);
    grp_lineIntersectPrism_fu_147->edge_p2_x(edge_p2_x);
    grp_lineIntersectPrism_fu_147->edge_p2_y(edge_p2_y);
    grp_lineIntersectPrism_fu_147->edge_p2_z(edge_p2_z);
    grp_lineIntersectPrism_fu_147->ap_return(grp_lineIntersectPrism_fu_147_ap_return);
    grp_lineIntersectPrism_fu_161 = new lineIntersectPrism("grp_lineIntersectPrism_fu_161");
    grp_lineIntersectPrism_fu_161->ap_clk(ap_clk);
    grp_lineIntersectPrism_fu_161->ap_rst(ap_rst);
    grp_lineIntersectPrism_fu_161->obs_x(obs_x_mid2_reg_394);
    grp_lineIntersectPrism_fu_161->obs_y(obs_y_reg_402);
    grp_lineIntersectPrism_fu_161->obs_z(ap_var_for_const1);
    grp_lineIntersectPrism_fu_161->edge_p1_x(edge_p1_x);
    grp_lineIntersectPrism_fu_161->edge_p1_y(edge_p1_y);
    grp_lineIntersectPrism_fu_161->edge_p1_z(edge_p1_z);
    grp_lineIntersectPrism_fu_161->edge_p2_x(edge_p2_x);
    grp_lineIntersectPrism_fu_161->edge_p2_y(edge_p2_y);
    grp_lineIntersectPrism_fu_161->edge_p2_z(edge_p2_z);
    grp_lineIntersectPrism_fu_161->ap_return(grp_lineIntersectPrism_fu_161_ap_return);
    grp_lineIntersectPrism_fu_175 = new lineIntersectPrism("grp_lineIntersectPrism_fu_175");
    grp_lineIntersectPrism_fu_175->ap_clk(ap_clk);
    grp_lineIntersectPrism_fu_175->ap_rst(ap_rst);
    grp_lineIntersectPrism_fu_175->obs_x(obs_x_mid2_reg_394);
    grp_lineIntersectPrism_fu_175->obs_y(obs_y_reg_402);
    grp_lineIntersectPrism_fu_175->obs_z(ap_var_for_const2);
    grp_lineIntersectPrism_fu_175->edge_p1_x(edge_p1_x);
    grp_lineIntersectPrism_fu_175->edge_p1_y(edge_p1_y);
    grp_lineIntersectPrism_fu_175->edge_p1_z(edge_p1_z);
    grp_lineIntersectPrism_fu_175->edge_p2_x(edge_p2_x);
    grp_lineIntersectPrism_fu_175->edge_p2_y(edge_p2_y);
    grp_lineIntersectPrism_fu_175->edge_p2_z(edge_p2_z);
    grp_lineIntersectPrism_fu_175->ap_return(grp_lineIntersectPrism_fu_175_ap_return);
    grp_lineIntersectPrism_fu_189 = new lineIntersectPrism("grp_lineIntersectPrism_fu_189");
    grp_lineIntersectPrism_fu_189->ap_clk(ap_clk);
    grp_lineIntersectPrism_fu_189->ap_rst(ap_rst);
    grp_lineIntersectPrism_fu_189->obs_x(obs_x_mid2_reg_394);
    grp_lineIntersectPrism_fu_189->obs_y(obs_y_reg_402);
    grp_lineIntersectPrism_fu_189->obs_z(ap_var_for_const3);
    grp_lineIntersectPrism_fu_189->edge_p1_x(edge_p1_x);
    grp_lineIntersectPrism_fu_189->edge_p1_y(edge_p1_y);
    grp_lineIntersectPrism_fu_189->edge_p1_z(edge_p1_z);
    grp_lineIntersectPrism_fu_189->edge_p2_x(edge_p2_x);
    grp_lineIntersectPrism_fu_189->edge_p2_y(edge_p2_y);
    grp_lineIntersectPrism_fu_189->edge_p2_z(edge_p2_z);
    grp_lineIntersectPrism_fu_189->ap_return(grp_lineIntersectPrism_fu_189_ap_return);
    honeybee_sitofp_3fYi_U36 = new honeybee_sitofp_3fYi<1,4,32,32>("honeybee_sitofp_3fYi_U36");
    honeybee_sitofp_3fYi_U36->clk(ap_clk);
    honeybee_sitofp_3fYi_U36->reset(ap_rst);
    honeybee_sitofp_3fYi_U36->din0(grp_fu_203_p0);
    honeybee_sitofp_3fYi_U36->ce(ap_var_for_const4);
    honeybee_sitofp_3fYi_U36->dout(grp_fu_203_p1);
    honeybee_sitofp_3fYi_U37 = new honeybee_sitofp_3fYi<1,4,32,32>("honeybee_sitofp_3fYi_U37");
    honeybee_sitofp_3fYi_U37->clk(ap_clk);
    honeybee_sitofp_3fYi_U37->reset(ap_rst);
    honeybee_sitofp_3fYi_U37->din0(grp_fu_206_p0);
    honeybee_sitofp_3fYi_U37->ce(ap_var_for_const4);
    honeybee_sitofp_3fYi_U37->dout(grp_fu_206_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln76_1_fu_235_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_117_p4 );

    SC_METHOD(thread_add_ln76_fu_215_p2);
    sensitive << ( indvar_flatten_reg_102 );

    SC_METHOD(thread_add_ln80_1_fu_279_p2);
    sensitive << ( select_ln80_fu_271_p3 );

    SC_METHOD(thread_add_ln80_2_fu_293_p2);
    sensitive << ( select_ln80_1_reg_410 );

    SC_METHOD(thread_add_ln80_3_fu_304_p2);
    sensitive << ( select_ln80_2_fu_298_p3 );

    SC_METHOD(thread_add_ln80_fu_265_p2);
    sensitive << ( ap_phi_mux_collisionCount_1_phi_fu_139_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter26);

    SC_METHOD(thread_ap_block_state29_pp0_stage0_iter27);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln76_fu_209_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( ap_enable_reg_pp0_iter26 );

    SC_METHOD(thread_ap_phi_mux_collisionCount_1_phi_fu_139_p4);
    sensitive << ( collisionCount_1_reg_135 );
    sensitive << ( icmp_ln76_reg_365_pp0_iter26_reg );
    sensitive << ( select_ln80_3_fu_310_p3 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_117_p4);
    sensitive << ( i_0_reg_113 );
    sensitive << ( icmp_ln76_reg_365 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln76_1_reg_374 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_ap_return);
    sensitive << ( collisionCount_1_reg_135 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_fu_203_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln76_1_fu_241_p3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_206_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( select_ln76_fu_227_p3 );

    SC_METHOD(thread_icmp_ln76_fu_209_p2);
    sensitive << ( indvar_flatten_reg_102 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln77_fu_221_p2);
    sensitive << ( j_0_reg_124 );
    sensitive << ( icmp_ln76_fu_209_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_259_p2);
    sensitive << ( select_ln76_fu_227_p3 );

    SC_METHOD(thread_select_ln76_1_fu_241_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_117_p4 );
    sensitive << ( icmp_ln77_fu_221_p2 );
    sensitive << ( add_ln76_1_fu_235_p2 );

    SC_METHOD(thread_select_ln76_fu_227_p3);
    sensitive << ( j_0_reg_124 );
    sensitive << ( icmp_ln77_fu_221_p2 );

    SC_METHOD(thread_select_ln80_1_fu_285_p3);
    sensitive << ( grp_lineIntersectPrism_fu_161_ap_return );
    sensitive << ( select_ln80_fu_271_p3 );
    sensitive << ( add_ln80_1_fu_279_p2 );

    SC_METHOD(thread_select_ln80_2_fu_298_p3);
    sensitive << ( select_ln80_1_reg_410 );
    sensitive << ( tmp_4_2_reg_416 );
    sensitive << ( add_ln80_2_fu_293_p2 );

    SC_METHOD(thread_select_ln80_3_fu_310_p3);
    sensitive << ( tmp_4_3_reg_421 );
    sensitive << ( select_ln80_2_fu_298_p3 );
    sensitive << ( add_ln80_3_fu_304_p2 );

    SC_METHOD(thread_select_ln80_fu_271_p3);
    sensitive << ( grp_lineIntersectPrism_fu_147_ap_return );
    sensitive << ( ap_phi_mux_collisionCount_1_phi_fu_139_p4 );
    sensitive << ( add_ln80_fu_265_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln76_fu_209_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter26 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter27 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "honeybee_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, edge_p1_x, "(port)edge_p1_x");
    sc_trace(mVcdFile, edge_p1_y, "(port)edge_p1_y");
    sc_trace(mVcdFile, edge_p1_z, "(port)edge_p1_z");
    sc_trace(mVcdFile, edge_p2_x, "(port)edge_p2_x");
    sc_trace(mVcdFile, edge_p2_y, "(port)edge_p2_y");
    sc_trace(mVcdFile, edge_p2_z, "(port)edge_p2_z");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_102, "indvar_flatten_reg_102");
    sc_trace(mVcdFile, i_0_reg_113, "i_0_reg_113");
    sc_trace(mVcdFile, j_0_reg_124, "j_0_reg_124");
    sc_trace(mVcdFile, collisionCount_1_reg_135, "collisionCount_1_reg_135");
    sc_trace(mVcdFile, icmp_ln76_fu_209_p2, "icmp_ln76_fu_209_p2");
    sc_trace(mVcdFile, icmp_ln76_reg_365, "icmp_ln76_reg_365");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter21, "ap_block_state23_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter22, "ap_block_state24_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter23, "ap_block_state25_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter24, "ap_block_state26_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter25, "ap_block_state27_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter26, "ap_block_state28_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage0_iter27, "ap_block_state29_pp0_stage0_iter27");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter1_reg, "icmp_ln76_reg_365_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter2_reg, "icmp_ln76_reg_365_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter3_reg, "icmp_ln76_reg_365_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter4_reg, "icmp_ln76_reg_365_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter5_reg, "icmp_ln76_reg_365_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter6_reg, "icmp_ln76_reg_365_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter7_reg, "icmp_ln76_reg_365_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter8_reg, "icmp_ln76_reg_365_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter9_reg, "icmp_ln76_reg_365_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter10_reg, "icmp_ln76_reg_365_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter11_reg, "icmp_ln76_reg_365_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter12_reg, "icmp_ln76_reg_365_pp0_iter12_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter13_reg, "icmp_ln76_reg_365_pp0_iter13_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter14_reg, "icmp_ln76_reg_365_pp0_iter14_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter15_reg, "icmp_ln76_reg_365_pp0_iter15_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter16_reg, "icmp_ln76_reg_365_pp0_iter16_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter17_reg, "icmp_ln76_reg_365_pp0_iter17_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter18_reg, "icmp_ln76_reg_365_pp0_iter18_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter19_reg, "icmp_ln76_reg_365_pp0_iter19_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter20_reg, "icmp_ln76_reg_365_pp0_iter20_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter21_reg, "icmp_ln76_reg_365_pp0_iter21_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter22_reg, "icmp_ln76_reg_365_pp0_iter22_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter23_reg, "icmp_ln76_reg_365_pp0_iter23_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter24_reg, "icmp_ln76_reg_365_pp0_iter24_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter25_reg, "icmp_ln76_reg_365_pp0_iter25_reg");
    sc_trace(mVcdFile, icmp_ln76_reg_365_pp0_iter26_reg, "icmp_ln76_reg_365_pp0_iter26_reg");
    sc_trace(mVcdFile, add_ln76_fu_215_p2, "add_ln76_fu_215_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln76_1_fu_241_p3, "select_ln76_1_fu_241_p3");
    sc_trace(mVcdFile, select_ln76_1_reg_374, "select_ln76_1_reg_374");
    sc_trace(mVcdFile, j_fu_259_p2, "j_fu_259_p2");
    sc_trace(mVcdFile, grp_fu_203_p1, "grp_fu_203_p1");
    sc_trace(mVcdFile, obs_x_mid2_reg_394, "obs_x_mid2_reg_394");
    sc_trace(mVcdFile, grp_fu_206_p1, "grp_fu_206_p1");
    sc_trace(mVcdFile, obs_y_reg_402, "obs_y_reg_402");
    sc_trace(mVcdFile, select_ln80_1_fu_285_p3, "select_ln80_1_fu_285_p3");
    sc_trace(mVcdFile, select_ln80_1_reg_410, "select_ln80_1_reg_410");
    sc_trace(mVcdFile, grp_lineIntersectPrism_fu_175_ap_return, "grp_lineIntersectPrism_fu_175_ap_return");
    sc_trace(mVcdFile, tmp_4_2_reg_416, "tmp_4_2_reg_416");
    sc_trace(mVcdFile, grp_lineIntersectPrism_fu_189_ap_return, "grp_lineIntersectPrism_fu_189_ap_return");
    sc_trace(mVcdFile, tmp_4_3_reg_421, "tmp_4_3_reg_421");
    sc_trace(mVcdFile, select_ln80_3_fu_310_p3, "select_ln80_3_fu_310_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter27, "ap_enable_reg_pp0_iter27");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, grp_lineIntersectPrism_fu_147_ap_return, "grp_lineIntersectPrism_fu_147_ap_return");
    sc_trace(mVcdFile, grp_lineIntersectPrism_fu_161_ap_return, "grp_lineIntersectPrism_fu_161_ap_return");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_117_p4, "ap_phi_mux_i_0_phi_fu_117_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_collisionCount_1_phi_fu_139_p4, "ap_phi_mux_collisionCount_1_phi_fu_139_p4");
    sc_trace(mVcdFile, grp_fu_203_p0, "grp_fu_203_p0");
    sc_trace(mVcdFile, grp_fu_206_p0, "grp_fu_206_p0");
    sc_trace(mVcdFile, icmp_ln77_fu_221_p2, "icmp_ln77_fu_221_p2");
    sc_trace(mVcdFile, add_ln76_1_fu_235_p2, "add_ln76_1_fu_235_p2");
    sc_trace(mVcdFile, select_ln76_fu_227_p3, "select_ln76_fu_227_p3");
    sc_trace(mVcdFile, add_ln80_fu_265_p2, "add_ln80_fu_265_p2");
    sc_trace(mVcdFile, select_ln80_fu_271_p3, "select_ln80_fu_271_p3");
    sc_trace(mVcdFile, add_ln80_1_fu_279_p2, "add_ln80_1_fu_279_p2");
    sc_trace(mVcdFile, add_ln80_2_fu_293_p2, "add_ln80_2_fu_293_p2");
    sc_trace(mVcdFile, select_ln80_2_fu_298_p3, "select_ln80_2_fu_298_p3");
    sc_trace(mVcdFile, add_ln80_3_fu_304_p2, "add_ln80_3_fu_304_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("honeybee.hdltvin.dat");
    mHdltvoutHandle.open("honeybee.hdltvout.dat");
}

honeybee::~honeybee() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_lineIntersectPrism_fu_147;
    delete grp_lineIntersectPrism_fu_161;
    delete grp_lineIntersectPrism_fu_175;
    delete grp_lineIntersectPrism_fu_189;
    delete honeybee_sitofp_3fYi_U36;
    delete honeybee_sitofp_3fYi_U37;
}

void honeybee::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_logic_1;
}

void honeybee::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void honeybee::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void honeybee::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_40000000;
}

void honeybee::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_40400000;
}

void honeybee::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter27 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter27 = ap_enable_reg_pp0_iter26.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter27 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(icmp_ln76_reg_365_pp0_iter26_reg.read(), ap_const_lv1_0))) {
        collisionCount_1_reg_135 = select_ln80_3_fu_310_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        collisionCount_1_reg_135 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln76_reg_365.read(), ap_const_lv1_0))) {
        i_0_reg_113 = select_ln76_1_reg_374.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_113 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln76_fu_209_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_102 = add_ln76_fu_215_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_102 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln76_fu_209_p2.read(), ap_const_lv1_0))) {
        j_0_reg_124 = j_fu_259_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_124 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln76_reg_365 = icmp_ln76_fu_209_p2.read();
        icmp_ln76_reg_365_pp0_iter1_reg = icmp_ln76_reg_365.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln76_reg_365_pp0_iter10_reg = icmp_ln76_reg_365_pp0_iter9_reg.read();
        icmp_ln76_reg_365_pp0_iter11_reg = icmp_ln76_reg_365_pp0_iter10_reg.read();
        icmp_ln76_reg_365_pp0_iter12_reg = icmp_ln76_reg_365_pp0_iter11_reg.read();
        icmp_ln76_reg_365_pp0_iter13_reg = icmp_ln76_reg_365_pp0_iter12_reg.read();
        icmp_ln76_reg_365_pp0_iter14_reg = icmp_ln76_reg_365_pp0_iter13_reg.read();
        icmp_ln76_reg_365_pp0_iter15_reg = icmp_ln76_reg_365_pp0_iter14_reg.read();
        icmp_ln76_reg_365_pp0_iter16_reg = icmp_ln76_reg_365_pp0_iter15_reg.read();
        icmp_ln76_reg_365_pp0_iter17_reg = icmp_ln76_reg_365_pp0_iter16_reg.read();
        icmp_ln76_reg_365_pp0_iter18_reg = icmp_ln76_reg_365_pp0_iter17_reg.read();
        icmp_ln76_reg_365_pp0_iter19_reg = icmp_ln76_reg_365_pp0_iter18_reg.read();
        icmp_ln76_reg_365_pp0_iter20_reg = icmp_ln76_reg_365_pp0_iter19_reg.read();
        icmp_ln76_reg_365_pp0_iter21_reg = icmp_ln76_reg_365_pp0_iter20_reg.read();
        icmp_ln76_reg_365_pp0_iter22_reg = icmp_ln76_reg_365_pp0_iter21_reg.read();
        icmp_ln76_reg_365_pp0_iter23_reg = icmp_ln76_reg_365_pp0_iter22_reg.read();
        icmp_ln76_reg_365_pp0_iter24_reg = icmp_ln76_reg_365_pp0_iter23_reg.read();
        icmp_ln76_reg_365_pp0_iter25_reg = icmp_ln76_reg_365_pp0_iter24_reg.read();
        icmp_ln76_reg_365_pp0_iter26_reg = icmp_ln76_reg_365_pp0_iter25_reg.read();
        icmp_ln76_reg_365_pp0_iter2_reg = icmp_ln76_reg_365_pp0_iter1_reg.read();
        icmp_ln76_reg_365_pp0_iter3_reg = icmp_ln76_reg_365_pp0_iter2_reg.read();
        icmp_ln76_reg_365_pp0_iter4_reg = icmp_ln76_reg_365_pp0_iter3_reg.read();
        icmp_ln76_reg_365_pp0_iter5_reg = icmp_ln76_reg_365_pp0_iter4_reg.read();
        icmp_ln76_reg_365_pp0_iter6_reg = icmp_ln76_reg_365_pp0_iter5_reg.read();
        icmp_ln76_reg_365_pp0_iter7_reg = icmp_ln76_reg_365_pp0_iter6_reg.read();
        icmp_ln76_reg_365_pp0_iter8_reg = icmp_ln76_reg_365_pp0_iter7_reg.read();
        icmp_ln76_reg_365_pp0_iter9_reg = icmp_ln76_reg_365_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln76_reg_365_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        obs_x_mid2_reg_394 = grp_fu_203_p1.read();
        obs_y_reg_402 = grp_fu_206_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln76_fu_209_p2.read(), ap_const_lv1_0))) {
        select_ln76_1_reg_374 = select_ln76_1_fu_241_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln76_reg_365_pp0_iter25_reg.read(), ap_const_lv1_0))) {
        select_ln80_1_reg_410 = select_ln80_1_fu_285_p3.read();
        tmp_4_2_reg_416 = grp_lineIntersectPrism_fu_175_ap_return.read();
        tmp_4_3_reg_421 = grp_lineIntersectPrism_fu_189_ap_return.read();
    }
}

void honeybee::thread_add_ln76_1_fu_235_p2() {
    add_ln76_1_fu_235_p2 = (!ap_phi_mux_i_0_phi_fu_117_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_i_0_phi_fu_117_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void honeybee::thread_add_ln76_fu_215_p2() {
    add_ln76_fu_215_p2 = (!indvar_flatten_reg_102.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(indvar_flatten_reg_102.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void honeybee::thread_add_ln80_1_fu_279_p2() {
    add_ln80_1_fu_279_p2 = (!select_ln80_fu_271_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln80_fu_271_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void honeybee::thread_add_ln80_2_fu_293_p2() {
    add_ln80_2_fu_293_p2 = (!select_ln80_1_reg_410.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln80_1_reg_410.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void honeybee::thread_add_ln80_3_fu_304_p2() {
    add_ln80_3_fu_304_p2 = (!select_ln80_2_fu_298_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln80_2_fu_298_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void honeybee::thread_add_ln80_fu_265_p2() {
    add_ln80_fu_265_p2 = (!ap_phi_mux_collisionCount_1_phi_fu_139_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_collisionCount_1_phi_fu_139_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void honeybee::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void honeybee::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void honeybee::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[2];
}

void honeybee::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state23_pp0_stage0_iter21() {
    ap_block_state23_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state24_pp0_stage0_iter22() {
    ap_block_state24_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state25_pp0_stage0_iter23() {
    ap_block_state25_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state26_pp0_stage0_iter24() {
    ap_block_state26_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state27_pp0_stage0_iter25() {
    ap_block_state27_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state28_pp0_stage0_iter26() {
    ap_block_state28_pp0_stage0_iter26 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state29_pp0_stage0_iter27() {
    ap_block_state29_pp0_stage0_iter27 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void honeybee::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln76_fu_209_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void honeybee::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void honeybee::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void honeybee::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void honeybee::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void honeybee::thread_ap_phi_mux_collisionCount_1_phi_fu_139_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(icmp_ln76_reg_365_pp0_iter26_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_collisionCount_1_phi_fu_139_p4 = select_ln80_3_fu_310_p3.read();
    } else {
        ap_phi_mux_collisionCount_1_phi_fu_139_p4 = collisionCount_1_reg_135.read();
    }
}

void honeybee::thread_ap_phi_mux_i_0_phi_fu_117_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln76_reg_365.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_117_p4 = select_ln76_1_reg_374.read();
    } else {
        ap_phi_mux_i_0_phi_fu_117_p4 = i_0_reg_113.read();
    }
}

void honeybee::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void honeybee::thread_ap_return() {
    ap_return = collisionCount_1_reg_135.read();
}

void honeybee::thread_grp_fu_203_p0() {
    grp_fu_203_p0 = esl_zext<32,3>(select_ln76_1_fu_241_p3.read());
}

void honeybee::thread_grp_fu_206_p0() {
    grp_fu_206_p0 = esl_zext<32,3>(select_ln76_fu_227_p3.read());
}

void honeybee::thread_icmp_ln76_fu_209_p2() {
    icmp_ln76_fu_209_p2 = (!indvar_flatten_reg_102.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_102.read() == ap_const_lv5_10);
}

void honeybee::thread_icmp_ln77_fu_221_p2() {
    icmp_ln77_fu_221_p2 = (!j_0_reg_124.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_124.read() == ap_const_lv3_4);
}

void honeybee::thread_j_fu_259_p2() {
    j_fu_259_p2 = (!select_ln76_fu_227_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln76_fu_227_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void honeybee::thread_select_ln76_1_fu_241_p3() {
    select_ln76_1_fu_241_p3 = (!icmp_ln77_fu_221_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln77_fu_221_p2.read()[0].to_bool())? add_ln76_1_fu_235_p2.read(): ap_phi_mux_i_0_phi_fu_117_p4.read());
}

void honeybee::thread_select_ln76_fu_227_p3() {
    select_ln76_fu_227_p3 = (!icmp_ln77_fu_221_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln77_fu_221_p2.read()[0].to_bool())? ap_const_lv3_0: j_0_reg_124.read());
}

void honeybee::thread_select_ln80_1_fu_285_p3() {
    select_ln80_1_fu_285_p3 = (!grp_lineIntersectPrism_fu_161_ap_return.read()[0].is_01())? sc_lv<32>(): ((grp_lineIntersectPrism_fu_161_ap_return.read()[0].to_bool())? add_ln80_1_fu_279_p2.read(): select_ln80_fu_271_p3.read());
}

void honeybee::thread_select_ln80_2_fu_298_p3() {
    select_ln80_2_fu_298_p3 = (!tmp_4_2_reg_416.read()[0].is_01())? sc_lv<32>(): ((tmp_4_2_reg_416.read()[0].to_bool())? add_ln80_2_fu_293_p2.read(): select_ln80_1_reg_410.read());
}

void honeybee::thread_select_ln80_3_fu_310_p3() {
    select_ln80_3_fu_310_p3 = (!tmp_4_3_reg_421.read()[0].is_01())? sc_lv<32>(): ((tmp_4_3_reg_421.read()[0].to_bool())? add_ln80_3_fu_304_p2.read(): select_ln80_2_fu_298_p3.read());
}

void honeybee::thread_select_ln80_fu_271_p3() {
    select_ln80_fu_271_p3 = (!grp_lineIntersectPrism_fu_147_ap_return.read()[0].is_01())? sc_lv<32>(): ((grp_lineIntersectPrism_fu_147_ap_return.read()[0].to_bool())? add_ln80_fu_265_p2.read(): ap_phi_mux_collisionCount_1_phi_fu_139_p4.read());
}

void honeybee::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter26.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln76_fu_209_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter26.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln76_fu_209_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void honeybee::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_x\" :  \"" << edge_p1_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_y\" :  \"" << edge_p1_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p1_z\" :  \"" << edge_p1_z.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_x\" :  \"" << edge_p2_x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_y\" :  \"" << edge_p2_y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_p2_z\" :  \"" << edge_p2_z.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

