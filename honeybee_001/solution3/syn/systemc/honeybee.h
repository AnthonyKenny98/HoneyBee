// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _honeybee_HH_
#define _honeybee_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lineIntersectPrism.h"
#include "honeybee_sitofp_3fYi.h"

namespace ap_rtl {

struct honeybee : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > edge_p1_x;
    sc_in< sc_lv<32> > edge_p1_y;
    sc_in< sc_lv<32> > edge_p1_z;
    sc_in< sc_lv<32> > edge_p2_x;
    sc_in< sc_lv<32> > edge_p2_y;
    sc_in< sc_lv<32> > edge_p2_z;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const3;


    // Module declarations
    honeybee(sc_module_name name);
    SC_HAS_PROCESS(honeybee);

    ~honeybee();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    lineIntersectPrism* grp_lineIntersectPrism_fu_147;
    lineIntersectPrism* grp_lineIntersectPrism_fu_161;
    lineIntersectPrism* grp_lineIntersectPrism_fu_175;
    lineIntersectPrism* grp_lineIntersectPrism_fu_189;
    honeybee_sitofp_3fYi<1,4,32,32>* honeybee_sitofp_3fYi_U36;
    honeybee_sitofp_3fYi<1,4,32,32>* honeybee_sitofp_3fYi_U37;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > indvar_flatten_reg_102;
    sc_signal< sc_lv<3> > i_0_reg_113;
    sc_signal< sc_lv<3> > j_0_reg_124;
    sc_signal< sc_lv<32> > collisionCount_1_reg_135;
    sc_signal< sc_lv<1> > icmp_ln76_fu_209_p2;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter27;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter15_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter16_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter17_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter18_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter19_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter20_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter21_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter22_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter23_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter24_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter25_reg;
    sc_signal< sc_lv<1> > icmp_ln76_reg_365_pp0_iter26_reg;
    sc_signal< sc_lv<5> > add_ln76_fu_215_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > select_ln76_1_fu_241_p3;
    sc_signal< sc_lv<3> > select_ln76_1_reg_374;
    sc_signal< sc_lv<3> > j_fu_259_p2;
    sc_signal< sc_lv<32> > grp_fu_203_p1;
    sc_signal< sc_lv<32> > obs_x_mid2_reg_394;
    sc_signal< sc_lv<32> > grp_fu_206_p1;
    sc_signal< sc_lv<32> > obs_y_reg_402;
    sc_signal< sc_lv<32> > select_ln80_1_fu_285_p3;
    sc_signal< sc_lv<32> > select_ln80_1_reg_410;
    sc_signal< sc_lv<1> > grp_lineIntersectPrism_fu_175_ap_return;
    sc_signal< sc_lv<1> > tmp_4_2_reg_416;
    sc_signal< sc_lv<1> > grp_lineIntersectPrism_fu_189_ap_return;
    sc_signal< sc_lv<1> > tmp_4_3_reg_421;
    sc_signal< sc_lv<32> > select_ln80_3_fu_310_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_lv<1> > grp_lineIntersectPrism_fu_147_ap_return;
    sc_signal< sc_lv<1> > grp_lineIntersectPrism_fu_161_ap_return;
    sc_signal< sc_lv<3> > ap_phi_mux_i_0_phi_fu_117_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_collisionCount_1_phi_fu_139_p4;
    sc_signal< sc_lv<32> > grp_fu_203_p0;
    sc_signal< sc_lv<32> > grp_fu_206_p0;
    sc_signal< sc_lv<1> > icmp_ln77_fu_221_p2;
    sc_signal< sc_lv<3> > add_ln76_1_fu_235_p2;
    sc_signal< sc_lv<3> > select_ln76_fu_227_p3;
    sc_signal< sc_lv<32> > add_ln80_fu_265_p2;
    sc_signal< sc_lv<32> > select_ln80_fu_271_p3;
    sc_signal< sc_lv<32> > add_ln80_1_fu_279_p2;
    sc_signal< sc_lv<32> > add_ln80_2_fu_293_p2;
    sc_signal< sc_lv<32> > select_ln80_2_fu_298_p3;
    sc_signal< sc_lv<32> > add_ln80_3_fu_304_p2;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state30;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_40000000;
    static const sc_lv<32> ap_const_lv32_40400000;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_add_ln76_1_fu_235_p2();
    void thread_add_ln76_fu_215_p2();
    void thread_add_ln80_1_fu_279_p2();
    void thread_add_ln80_2_fu_293_p2();
    void thread_add_ln80_3_fu_304_p2();
    void thread_add_ln80_fu_265_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state30();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state19_pp0_stage0_iter17();
    void thread_ap_block_state20_pp0_stage0_iter18();
    void thread_ap_block_state21_pp0_stage0_iter19();
    void thread_ap_block_state22_pp0_stage0_iter20();
    void thread_ap_block_state23_pp0_stage0_iter21();
    void thread_ap_block_state24_pp0_stage0_iter22();
    void thread_ap_block_state25_pp0_stage0_iter23();
    void thread_ap_block_state26_pp0_stage0_iter24();
    void thread_ap_block_state27_pp0_stage0_iter25();
    void thread_ap_block_state28_pp0_stage0_iter26();
    void thread_ap_block_state29_pp0_stage0_iter27();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_collisionCount_1_phi_fu_139_p4();
    void thread_ap_phi_mux_i_0_phi_fu_117_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_203_p0();
    void thread_grp_fu_206_p0();
    void thread_icmp_ln76_fu_209_p2();
    void thread_icmp_ln77_fu_221_p2();
    void thread_j_fu_259_p2();
    void thread_select_ln76_1_fu_241_p3();
    void thread_select_ln76_fu_227_p3();
    void thread_select_ln80_1_fu_285_p3();
    void thread_select_ln80_2_fu_298_p3();
    void thread_select_ln80_3_fu_310_p3();
    void thread_select_ln80_fu_271_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
