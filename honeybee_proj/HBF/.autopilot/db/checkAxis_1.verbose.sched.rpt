

================================================================
== Vivado HLS Report for 'checkAxis_1'
================================================================
* Date:           Sun Mar 29 21:05:07 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        honeybee_proj
* Solution:       HBF
* Product family: zynq
* Target device:  xc7z030i-fbg484-2L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.478 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      213|      213| 2.130 us | 2.130 us |  213|  213|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- memset_collisions  |        3|        3|         1|          -|          -|     4|    no    |
        |- Loop 2             |        4|        4|         1|          -|          -|     4|    no    |
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 19 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%collisions_load_1_075 = alloca i64"   --->   Operation 20 'alloca' 'collisions_load_1_075' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%collisions_load_1_177 = alloca i64"   --->   Operation 21 'alloca' 'collisions_load_1_177' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%collisions_load_1_279 = alloca i64"   --->   Operation 22 'alloca' 'collisions_load_1_279' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%collisions_load_1_381 = alloca i64"   --->   Operation 23 'alloca' 'collisions_load_1_381' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%collisions_0_0 = alloca i64"   --->   Operation 24 'alloca' 'collisions_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%collisions_1_0 = alloca i64"   --->   Operation 25 'alloca' 'collisions_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%collisions_2_0 = alloca i64"   --->   Operation 26 'alloca' 'collisions_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%collisions_3_0 = alloca i64"   --->   Operation 27 'alloca' 'collisions_3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%edge_p2_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_z)"   --->   Operation 28 'read' 'edge_p2_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%edge_p2_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_y)"   --->   Operation 29 'read' 'edge_p2_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%edge_p2_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_x)"   --->   Operation 30 'read' 'edge_p2_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%edge_p1_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_z)"   --->   Operation 31 'read' 'edge_p1_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%edge_p1_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_y)"   --->   Operation 32 'read' 'edge_p1_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%edge_p1_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_x)"   --->   Operation 33 'read' 'edge_p1_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.46ns)   --->   "br label %meminst_ifconv"   --->   Operation 34 'br' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%phi_ln84 = phi i2 [ 0, %0 ], [ %add_ln84, %meminst_ifconv ]" [src/honeybee.c:84]   --->   Operation 35 'phi' 'phi_ln84' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%collisions_load = load i64* %collisions_load_1_075" [src/honeybee.c:84]   --->   Operation 36 'load' 'collisions_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%collisions_load_4 = load i64* %collisions_load_1_177" [src/honeybee.c:84]   --->   Operation 37 'load' 'collisions_load_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%collisions_load_5 = load i64* %collisions_load_1_279" [src/honeybee.c:84]   --->   Operation 38 'load' 'collisions_load_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%collisions_load_6 = load i64* %collisions_load_1_381" [src/honeybee.c:84]   --->   Operation 39 'load' 'collisions_load_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%collisions_0_0_load = load i64* %collisions_0_0" [src/honeybee.c:84]   --->   Operation 40 'load' 'collisions_0_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%collisions_1_0_load = load i64* %collisions_1_0" [src/honeybee.c:84]   --->   Operation 41 'load' 'collisions_1_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%collisions_2_0_load = load i64* %collisions_2_0" [src/honeybee.c:84]   --->   Operation 42 'load' 'collisions_2_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%collisions_3_0_load = load i64* %collisions_3_0" [src/honeybee.c:84]   --->   Operation 43 'load' 'collisions_3_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.63ns)   --->   "%add_ln84 = add i2 %phi_ln84, 1" [src/honeybee.c:84]   --->   Operation 44 'add' 'add_ln84' <Predicate = true> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.50ns)   --->   "%icmp_ln84_4 = icmp eq i2 %phi_ln84, -2" [src/honeybee.c:84]   --->   Operation 45 'icmp' 'icmp_ln84_4' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_19)   --->   "%select_ln84 = select i1 %icmp_ln84_4, i64 %collisions_3_0_load, i64 0" [src/honeybee.c:84]   --->   Operation 46 'select' 'select_ln84' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.50ns)   --->   "%icmp_ln84_5 = icmp eq i2 %phi_ln84, 1" [src/honeybee.c:84]   --->   Operation 47 'icmp' 'icmp_ln84_5' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_19)   --->   "%select_ln84_18 = select i1 %icmp_ln84_5, i64 %collisions_3_0_load, i64 %select_ln84" [src/honeybee.c:84]   --->   Operation 48 'select' 'select_ln84_18' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.50ns)   --->   "%icmp_ln84_6 = icmp eq i2 %phi_ln84, 0" [src/honeybee.c:84]   --->   Operation 49 'icmp' 'icmp_ln84_6' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.17ns) (out node of the LUT)   --->   "%select_ln84_19 = select i1 %icmp_ln84_6, i64 %collisions_3_0_load, i64 %select_ln84_18" [src/honeybee.c:84]   --->   Operation 50 'select' 'select_ln84_19' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_22)   --->   "%select_ln84_20 = select i1 %icmp_ln84_4, i64 0, i64 %collisions_2_0_load" [src/honeybee.c:84]   --->   Operation 51 'select' 'select_ln84_20' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_22)   --->   "%select_ln84_21 = select i1 %icmp_ln84_5, i64 %collisions_2_0_load, i64 %select_ln84_20" [src/honeybee.c:84]   --->   Operation 52 'select' 'select_ln84_21' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.17ns) (out node of the LUT)   --->   "%select_ln84_22 = select i1 %icmp_ln84_6, i64 %collisions_2_0_load, i64 %select_ln84_21" [src/honeybee.c:84]   --->   Operation 53 'select' 'select_ln84_22' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_24)   --->   "%select_ln84_23 = select i1 %icmp_ln84_5, i64 0, i64 %collisions_1_0_load" [src/honeybee.c:84]   --->   Operation 54 'select' 'select_ln84_23' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.17ns) (out node of the LUT)   --->   "%select_ln84_24 = select i1 %icmp_ln84_6, i64 %collisions_1_0_load, i64 %select_ln84_23" [src/honeybee.c:84]   --->   Operation 55 'select' 'select_ln84_24' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.17ns)   --->   "%select_ln84_25 = select i1 %icmp_ln84_6, i64 0, i64 %collisions_0_0_load" [src/honeybee.c:84]   --->   Operation 56 'select' 'select_ln84_25' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_28)   --->   "%select_ln84_26 = select i1 %icmp_ln84_4, i64 %collisions_load_6, i64 0" [src/honeybee.c:84]   --->   Operation 57 'select' 'select_ln84_26' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_28)   --->   "%select_ln84_27 = select i1 %icmp_ln84_5, i64 %collisions_load_6, i64 %select_ln84_26" [src/honeybee.c:84]   --->   Operation 58 'select' 'select_ln84_27' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.17ns) (out node of the LUT)   --->   "%select_ln84_28 = select i1 %icmp_ln84_6, i64 %collisions_load_6, i64 %select_ln84_27" [src/honeybee.c:84]   --->   Operation 59 'select' 'select_ln84_28' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_31)   --->   "%select_ln84_29 = select i1 %icmp_ln84_4, i64 0, i64 %collisions_load_5" [src/honeybee.c:84]   --->   Operation 60 'select' 'select_ln84_29' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_31)   --->   "%select_ln84_30 = select i1 %icmp_ln84_5, i64 %collisions_load_5, i64 %select_ln84_29" [src/honeybee.c:84]   --->   Operation 61 'select' 'select_ln84_30' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (1.17ns) (out node of the LUT)   --->   "%select_ln84_31 = select i1 %icmp_ln84_6, i64 %collisions_load_5, i64 %select_ln84_30" [src/honeybee.c:84]   --->   Operation 62 'select' 'select_ln84_31' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln84_33)   --->   "%select_ln84_32 = select i1 %icmp_ln84_5, i64 0, i64 %collisions_load_4" [src/honeybee.c:84]   --->   Operation 63 'select' 'select_ln84_32' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (1.17ns) (out node of the LUT)   --->   "%select_ln84_33 = select i1 %icmp_ln84_6, i64 %collisions_load_4, i64 %select_ln84_32" [src/honeybee.c:84]   --->   Operation 64 'select' 'select_ln84_33' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (1.17ns)   --->   "%select_ln84_34 = select i1 %icmp_ln84_6, i64 0, i64 %collisions_load" [src/honeybee.c:84]   --->   Operation 65 'select' 'select_ln84_34' <Predicate = true> <Delay = 1.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.50ns)   --->   "%icmp_ln84 = icmp eq i2 %phi_ln84, -1" [src/honeybee.c:84]   --->   Operation 66 'icmp' 'icmp_ln84' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @memset_collisions_st)"   --->   Operation 67 'specloopname' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 68 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "store i64 %select_ln84_19, i64* %collisions_3_0" [src/honeybee.c:84]   --->   Operation 69 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "store i64 %select_ln84_22, i64* %collisions_2_0" [src/honeybee.c:84]   --->   Operation 70 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "store i64 %select_ln84_24, i64* %collisions_1_0" [src/honeybee.c:84]   --->   Operation 71 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "store i64 %select_ln84_25, i64* %collisions_0_0" [src/honeybee.c:84]   --->   Operation 72 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "store i64 %select_ln84_28, i64* %collisions_load_1_381" [src/honeybee.c:84]   --->   Operation 73 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "store i64 %select_ln84_31, i64* %collisions_load_1_279" [src/honeybee.c:84]   --->   Operation 74 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "store i64 %select_ln84_33, i64* %collisions_load_1_177" [src/honeybee.c:84]   --->   Operation 75 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "store i64 %select_ln84_34, i64* %collisions_load_1_075" [src/honeybee.c:84]   --->   Operation 76 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "br i1 %icmp_ln84, label %._crit_edge, label %meminst_ifconv" [src/honeybee.c:84]   --->   Operation 77 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [2/2] (8.75ns)   --->   "%call_ret = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 0.000000e+00)" [src/honeybee.c:105]   --->   Operation 78 'call' 'call_ret' <Predicate = (icmp_ln84)> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 8.58>
ST_3 : Operation 79 [1/2] (8.58ns)   --->   "%call_ret = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 0.000000e+00)" [src/honeybee.c:105]   --->   Operation 79 'call' 'call_ret' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%p_0 = extractvalue { float, float, float } %call_ret, 0" [src/honeybee.c:105]   --->   Operation 80 'extractvalue' 'p_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%p_1 = extractvalue { float, float, float } %call_ret, 1" [src/honeybee.c:105]   --->   Operation 81 'extractvalue' 'p_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%p_2 = extractvalue { float, float, float } %call_ret, 2" [src/honeybee.c:105]   --->   Operation 82 'extractvalue' 'p_2' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.28>
ST_4 : Operation 83 [2/2] (5.28ns)   --->   "%tmp_s = call fastcc i1 @pointOnSegment(float %p_2, float %p_1, float %p_0, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 83 'call' 'tmp_s' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 8.58>
ST_5 : Operation 84 [1/2] (7.39ns)   --->   "%tmp_s = call fastcc i1 @pointOnSegment(float %p_2, float %p_1, float %p_0, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 84 'call' 'tmp_s' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 85 [1/1] (0.46ns)   --->   "br i1 %tmp_s, label %1, label %._crit_edge22.0" [src/honeybee.c:125]   --->   Operation 85 'br' <Predicate = true> <Delay = 0.46>
ST_5 : Operation 86 [1/1] (8.58ns)   --->   "%j_assign = call fastcc i32 @__hls_fptosi_float_i(float %p_1)" [src/honeybee.c:126]   --->   Operation 86 'call' 'j_assign' <Predicate = (tmp_s)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 87 [1/1] (8.58ns)   --->   "%k_assign = call fastcc i32 @__hls_fptosi_float_i(float %p_0)" [src/honeybee.c:126]   --->   Operation 87 'call' 'k_assign' <Predicate = (tmp_s)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%shl_ln80 = shl i32 %j_assign, 2" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 88 'shl' 'shl_ln80' <Predicate = (tmp_s)> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%shl_ln80_4 = shl i32 %k_assign, 4" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 89 'shl' 'shl_ln80_4' <Predicate = (tmp_s)> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (1.89ns)   --->   "%add_ln80 = add i32 %shl_ln80, %shl_ln80_4" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 90 'add' 'add_ln80' <Predicate = (tmp_s)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node collisions_0)   --->   "%zext_ln126 = zext i32 %add_ln80 to i64" [src/honeybee.c:126]   --->   Operation 91 'zext' 'zext_ln126' <Predicate = (tmp_s)> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node collisions_0)   --->   "%shl_ln126 = shl i64 1, %zext_ln126" [src/honeybee.c:126]   --->   Operation 92 'shl' 'shl_ln126' <Predicate = (tmp_s)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 93 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_10 = add i32 -1, %shl_ln80_4" [src/honeybee.c:80->src/honeybee.c:127]   --->   Operation 93 'add' 'add_ln80_10' <Predicate = (tmp_s)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 94 [1/1] (3.58ns) (root node of TernaryAdder)   --->   "%add_ln80_11 = add i32 %add_ln80_10, %shl_ln80" [src/honeybee.c:80->src/honeybee.c:127]   --->   Operation 94 'add' 'add_ln80_11' <Predicate = (tmp_s)> <Delay = 3.58> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node collisions_0)   --->   "%zext_ln127 = zext i32 %add_ln80_11 to i64" [src/honeybee.c:127]   --->   Operation 95 'zext' 'zext_ln127' <Predicate = (tmp_s)> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node collisions_0)   --->   "%shl_ln127 = shl i64 1, %zext_ln127" [src/honeybee.c:127]   --->   Operation 96 'shl' 'shl_ln127' <Predicate = (tmp_s)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node collisions_0)   --->   "%or_ln127 = or i64 %select_ln84_34, %shl_ln127" [src/honeybee.c:127]   --->   Operation 97 'or' 'or_ln127' <Predicate = (tmp_s)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 98 [1/1] (2.93ns) (out node of the LUT)   --->   "%collisions_0 = or i64 %or_ln127, %shl_ln126" [src/honeybee.c:127]   --->   Operation 98 'or' 'collisions_0' <Predicate = (tmp_s)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 99 [1/1] (0.46ns)   --->   "br label %._crit_edge22.0" [src/honeybee.c:128]   --->   Operation 99 'br' <Predicate = (tmp_s)> <Delay = 0.46>
ST_6 : Operation 100 [2/2] (8.75ns)   --->   "%call_ret_1 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 1.000000e+00)" [src/honeybee.c:105]   --->   Operation 100 'call' 'call_ret_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 8.58>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%collisions_0_21 = phi i64 [ %collisions_0, %1 ], [ %select_ln84_25, %._crit_edge ]"   --->   Operation 101 'phi' 'collisions_0_21' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 102 [1/2] (8.58ns)   --->   "%call_ret_1 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 1.000000e+00)" [src/honeybee.c:105]   --->   Operation 102 'call' 'call_ret_1' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "%p_0_0_1 = extractvalue { float, float, float } %call_ret_1, 0" [src/honeybee.c:105]   --->   Operation 103 'extractvalue' 'p_0_0_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%p_1_0_1 = extractvalue { float, float, float } %call_ret_1, 1" [src/honeybee.c:105]   --->   Operation 104 'extractvalue' 'p_1_0_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "%p_2_0_1 = extractvalue { float, float, float } %call_ret_1, 2" [src/honeybee.c:105]   --->   Operation 105 'extractvalue' 'p_2_0_1' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 5.28>
ST_8 : Operation 106 [2/2] (5.28ns)   --->   "%tmp_43_1 = call fastcc i1 @pointOnSegment(float %p_2_0_1, float %p_1_0_1, float %p_0_0_1, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 106 'call' 'tmp_43_1' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 8.58>
ST_9 : Operation 107 [1/2] (7.39ns)   --->   "%tmp_43_1 = call fastcc i1 @pointOnSegment(float %p_2_0_1, float %p_1_0_1, float %p_0_0_1, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 107 'call' 'tmp_43_1' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 108 [1/1] (0.46ns)   --->   "br i1 %tmp_43_1, label %2, label %._crit_edge22.1" [src/honeybee.c:125]   --->   Operation 108 'br' <Predicate = true> <Delay = 0.46>
ST_9 : Operation 109 [1/1] (8.58ns)   --->   "%j_assign_4 = call fastcc i32 @__hls_fptosi_float_i(float %p_1_0_1)" [src/honeybee.c:126]   --->   Operation 109 'call' 'j_assign_4' <Predicate = (tmp_43_1)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 110 [1/1] (8.58ns)   --->   "%k_assign_1 = call fastcc i32 @__hls_fptosi_float_i(float %p_0_0_1)" [src/honeybee.c:126]   --->   Operation 110 'call' 'k_assign_1' <Predicate = (tmp_43_1)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%shl_ln80_5 = shl i32 %j_assign_4, 2" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 111 'shl' 'shl_ln80_5' <Predicate = (tmp_43_1)> <Delay = 0.00>
ST_10 : Operation 112 [1/1] (0.00ns)   --->   "%shl_ln80_6 = shl i32 %k_assign_1, 4" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 112 'shl' 'shl_ln80_6' <Predicate = (tmp_43_1)> <Delay = 0.00>
ST_10 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_12)   --->   "%or_ln80 = or i32 %shl_ln80_5, 1" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 113 'or' 'or_ln80' <Predicate = (tmp_43_1)> <Delay = 0.00>
ST_10 : Operation 114 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_12 = add i32 %or_ln80, %shl_ln80_6" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 114 'add' 'add_ln80_12' <Predicate = (tmp_43_1)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node collisions_1)   --->   "%zext_ln126_1 = zext i32 %add_ln80_12 to i64" [src/honeybee.c:126]   --->   Operation 115 'zext' 'zext_ln126_1' <Predicate = (tmp_43_1)> <Delay = 0.00>
ST_10 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node collisions_1)   --->   "%shl_ln126_1 = shl i64 1, %zext_ln126_1" [src/honeybee.c:126]   --->   Operation 116 'shl' 'shl_ln126_1' <Predicate = (tmp_43_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 117 [1/1] (1.89ns)   --->   "%add_ln80_13 = add i32 %shl_ln80_5, %shl_ln80_6" [src/honeybee.c:80->src/honeybee.c:127]   --->   Operation 117 'add' 'add_ln80_13' <Predicate = (tmp_43_1)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node collisions_1)   --->   "%zext_ln127_1 = zext i32 %add_ln80_13 to i64" [src/honeybee.c:127]   --->   Operation 118 'zext' 'zext_ln127_1' <Predicate = (tmp_43_1)> <Delay = 0.00>
ST_10 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node collisions_1)   --->   "%shl_ln127_1 = shl i64 1, %zext_ln127_1" [src/honeybee.c:127]   --->   Operation 119 'shl' 'shl_ln127_1' <Predicate = (tmp_43_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node collisions_1)   --->   "%or_ln127_2 = or i64 %select_ln84_33, %shl_ln127_1" [src/honeybee.c:127]   --->   Operation 120 'or' 'or_ln127_2' <Predicate = (tmp_43_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 121 [1/1] (2.93ns) (out node of the LUT)   --->   "%collisions_1 = or i64 %or_ln127_2, %shl_ln126_1" [src/honeybee.c:127]   --->   Operation 121 'or' 'collisions_1' <Predicate = (tmp_43_1)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 122 [1/1] (0.46ns)   --->   "br label %._crit_edge22.1" [src/honeybee.c:128]   --->   Operation 122 'br' <Predicate = (tmp_43_1)> <Delay = 0.46>
ST_10 : Operation 123 [2/2] (8.75ns)   --->   "%call_ret_2 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 2.000000e+00)" [src/honeybee.c:105]   --->   Operation 123 'call' 'call_ret_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 8.58>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "%collisions_1_22 = phi i64 [ %collisions_1, %2 ], [ %select_ln84_24, %._crit_edge22.0 ]"   --->   Operation 124 'phi' 'collisions_1_22' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 125 [1/2] (8.58ns)   --->   "%call_ret_2 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 2.000000e+00)" [src/honeybee.c:105]   --->   Operation 125 'call' 'call_ret_2' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 126 [1/1] (0.00ns)   --->   "%p_0_0_2 = extractvalue { float, float, float } %call_ret_2, 0" [src/honeybee.c:105]   --->   Operation 126 'extractvalue' 'p_0_0_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 127 [1/1] (0.00ns)   --->   "%p_1_0_2 = extractvalue { float, float, float } %call_ret_2, 1" [src/honeybee.c:105]   --->   Operation 127 'extractvalue' 'p_1_0_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 128 [1/1] (0.00ns)   --->   "%p_2_0_2 = extractvalue { float, float, float } %call_ret_2, 2" [src/honeybee.c:105]   --->   Operation 128 'extractvalue' 'p_2_0_2' <Predicate = true> <Delay = 0.00>

State 12 <SV = 11> <Delay = 5.28>
ST_12 : Operation 129 [2/2] (5.28ns)   --->   "%tmp_43_2 = call fastcc i1 @pointOnSegment(float %p_2_0_2, float %p_1_0_2, float %p_0_0_2, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 129 'call' 'tmp_43_2' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 8.58>
ST_13 : Operation 130 [1/2] (7.39ns)   --->   "%tmp_43_2 = call fastcc i1 @pointOnSegment(float %p_2_0_2, float %p_1_0_2, float %p_0_0_2, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 130 'call' 'tmp_43_2' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 131 [1/1] (0.46ns)   --->   "br i1 %tmp_43_2, label %3, label %._crit_edge22.2" [src/honeybee.c:125]   --->   Operation 131 'br' <Predicate = true> <Delay = 0.46>
ST_13 : Operation 132 [1/1] (8.58ns)   --->   "%j_assign_5 = call fastcc i32 @__hls_fptosi_float_i(float %p_1_0_2)" [src/honeybee.c:126]   --->   Operation 132 'call' 'j_assign_5' <Predicate = (tmp_43_2)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 133 [1/1] (8.58ns)   --->   "%k_assign_2 = call fastcc i32 @__hls_fptosi_float_i(float %p_0_0_2)" [src/honeybee.c:126]   --->   Operation 133 'call' 'k_assign_2' <Predicate = (tmp_43_2)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 134 [1/1] (0.00ns)   --->   "%shl_ln80_7 = shl i32 %j_assign_5, 2" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 134 'shl' 'shl_ln80_7' <Predicate = (tmp_43_2)> <Delay = 0.00>
ST_14 : Operation 135 [1/1] (0.00ns)   --->   "%shl_ln80_8 = shl i32 %k_assign_2, 4" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 135 'shl' 'shl_ln80_8' <Predicate = (tmp_43_2)> <Delay = 0.00>
ST_14 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_14)   --->   "%or_ln80_1 = or i32 %shl_ln80_7, 2" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 136 'or' 'or_ln80_1' <Predicate = (tmp_43_2)> <Delay = 0.00>
ST_14 : Operation 137 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_14 = add i32 %or_ln80_1, %shl_ln80_8" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 137 'add' 'add_ln80_14' <Predicate = (tmp_43_2)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node collisions_2)   --->   "%zext_ln126_2 = zext i32 %add_ln80_14 to i64" [src/honeybee.c:126]   --->   Operation 138 'zext' 'zext_ln126_2' <Predicate = (tmp_43_2)> <Delay = 0.00>
ST_14 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node collisions_2)   --->   "%shl_ln126_2 = shl i64 1, %zext_ln126_2" [src/honeybee.c:126]   --->   Operation 139 'shl' 'shl_ln126_2' <Predicate = (tmp_43_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_15)   --->   "%or_ln80_2 = or i32 %shl_ln80_7, 1" [src/honeybee.c:80->src/honeybee.c:127]   --->   Operation 140 'or' 'or_ln80_2' <Predicate = (tmp_43_2)> <Delay = 0.00>
ST_14 : Operation 141 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_15 = add i32 %or_ln80_2, %shl_ln80_8" [src/honeybee.c:80->src/honeybee.c:127]   --->   Operation 141 'add' 'add_ln80_15' <Predicate = (tmp_43_2)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node collisions_2)   --->   "%zext_ln127_2 = zext i32 %add_ln80_15 to i64" [src/honeybee.c:127]   --->   Operation 142 'zext' 'zext_ln127_2' <Predicate = (tmp_43_2)> <Delay = 0.00>
ST_14 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node collisions_2)   --->   "%shl_ln127_2 = shl i64 1, %zext_ln127_2" [src/honeybee.c:127]   --->   Operation 143 'shl' 'shl_ln127_2' <Predicate = (tmp_43_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node collisions_2)   --->   "%or_ln127_4 = or i64 %select_ln84_31, %shl_ln127_2" [src/honeybee.c:127]   --->   Operation 144 'or' 'or_ln127_4' <Predicate = (tmp_43_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 145 [1/1] (2.93ns) (out node of the LUT)   --->   "%collisions_2 = or i64 %or_ln127_4, %shl_ln126_2" [src/honeybee.c:127]   --->   Operation 145 'or' 'collisions_2' <Predicate = (tmp_43_2)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 146 [1/1] (0.46ns)   --->   "br label %._crit_edge22.2" [src/honeybee.c:128]   --->   Operation 146 'br' <Predicate = (tmp_43_2)> <Delay = 0.46>
ST_14 : Operation 147 [2/2] (8.75ns)   --->   "%call_ret_3 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 3.000000e+00)" [src/honeybee.c:105]   --->   Operation 147 'call' 'call_ret_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 8.58>
ST_15 : Operation 148 [1/1] (0.00ns)   --->   "%collisions_2_23 = phi i64 [ %collisions_2, %3 ], [ %select_ln84_22, %._crit_edge22.1 ]"   --->   Operation 148 'phi' 'collisions_2_23' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 149 [1/2] (8.58ns)   --->   "%call_ret_3 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 3.000000e+00)" [src/honeybee.c:105]   --->   Operation 149 'call' 'call_ret_3' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 150 [1/1] (0.00ns)   --->   "%p_0_0_3 = extractvalue { float, float, float } %call_ret_3, 0" [src/honeybee.c:105]   --->   Operation 150 'extractvalue' 'p_0_0_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 151 [1/1] (0.00ns)   --->   "%p_1_0_3 = extractvalue { float, float, float } %call_ret_3, 1" [src/honeybee.c:105]   --->   Operation 151 'extractvalue' 'p_1_0_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 152 [1/1] (0.00ns)   --->   "%p_2_0_3 = extractvalue { float, float, float } %call_ret_3, 2" [src/honeybee.c:105]   --->   Operation 152 'extractvalue' 'p_2_0_3' <Predicate = true> <Delay = 0.00>

State 16 <SV = 15> <Delay = 5.28>
ST_16 : Operation 153 [2/2] (5.28ns)   --->   "%tmp_43_3 = call fastcc i1 @pointOnSegment(float %p_2_0_3, float %p_1_0_3, float %p_0_0_3, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 153 'call' 'tmp_43_3' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 8.58>
ST_17 : Operation 154 [1/2] (7.39ns)   --->   "%tmp_43_3 = call fastcc i1 @pointOnSegment(float %p_2_0_3, float %p_1_0_3, float %p_0_0_3, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read)" [src/honeybee.c:125]   --->   Operation 154 'call' 'tmp_43_3' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 155 [1/1] (0.46ns)   --->   "br i1 %tmp_43_3, label %4, label %._crit_edge22.3" [src/honeybee.c:125]   --->   Operation 155 'br' <Predicate = true> <Delay = 0.46>
ST_17 : Operation 156 [1/1] (8.58ns)   --->   "%j_assign_6 = call fastcc i32 @__hls_fptosi_float_i(float %p_1_0_3)" [src/honeybee.c:126]   --->   Operation 156 'call' 'j_assign_6' <Predicate = (tmp_43_3)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 157 [1/1] (8.58ns)   --->   "%k_assign_3 = call fastcc i32 @__hls_fptosi_float_i(float %p_0_0_3)" [src/honeybee.c:126]   --->   Operation 157 'call' 'k_assign_3' <Predicate = (tmp_43_3)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 5.29>
ST_18 : Operation 158 [1/1] (0.00ns)   --->   "%shl_ln80_9 = shl i32 %j_assign_6, 2" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 158 'shl' 'shl_ln80_9' <Predicate = (tmp_43_3)> <Delay = 0.00>
ST_18 : Operation 159 [1/1] (0.00ns)   --->   "%shl_ln80_10 = shl i32 %k_assign_3, 4" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 159 'shl' 'shl_ln80_10' <Predicate = (tmp_43_3)> <Delay = 0.00>
ST_18 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_16)   --->   "%or_ln80_3 = or i32 %shl_ln80_9, 3" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 160 'or' 'or_ln80_3' <Predicate = (tmp_43_3)> <Delay = 0.00>
ST_18 : Operation 161 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_16 = add i32 %or_ln80_3, %shl_ln80_10" [src/honeybee.c:80->src/honeybee.c:126]   --->   Operation 161 'add' 'add_ln80_16' <Predicate = (tmp_43_3)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node collisions_3)   --->   "%zext_ln126_3 = zext i32 %add_ln80_16 to i64" [src/honeybee.c:126]   --->   Operation 162 'zext' 'zext_ln126_3' <Predicate = (tmp_43_3)> <Delay = 0.00>
ST_18 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node collisions_3)   --->   "%shl_ln126_3 = shl i64 1, %zext_ln126_3" [src/honeybee.c:126]   --->   Operation 163 'shl' 'shl_ln126_3' <Predicate = (tmp_43_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_17)   --->   "%or_ln80_4 = or i32 %shl_ln80_9, 2" [src/honeybee.c:80->src/honeybee.c:127]   --->   Operation 164 'or' 'or_ln80_4' <Predicate = (tmp_43_3)> <Delay = 0.00>
ST_18 : Operation 165 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_17 = add i32 %or_ln80_4, %shl_ln80_10" [src/honeybee.c:80->src/honeybee.c:127]   --->   Operation 165 'add' 'add_ln80_17' <Predicate = (tmp_43_3)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node collisions_3)   --->   "%zext_ln127_3 = zext i32 %add_ln80_17 to i64" [src/honeybee.c:127]   --->   Operation 166 'zext' 'zext_ln127_3' <Predicate = (tmp_43_3)> <Delay = 0.00>
ST_18 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node collisions_3)   --->   "%shl_ln127_3 = shl i64 1, %zext_ln127_3" [src/honeybee.c:127]   --->   Operation 167 'shl' 'shl_ln127_3' <Predicate = (tmp_43_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node collisions_3)   --->   "%or_ln127_6 = or i64 %select_ln84_28, %shl_ln127_3" [src/honeybee.c:127]   --->   Operation 168 'or' 'or_ln127_6' <Predicate = (tmp_43_3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 169 [1/1] (2.93ns) (out node of the LUT)   --->   "%collisions_3 = or i64 %or_ln127_6, %shl_ln126_3" [src/honeybee.c:127]   --->   Operation 169 'or' 'collisions_3' <Predicate = (tmp_43_3)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 170 [1/1] (0.46ns)   --->   "br label %._crit_edge22.3" [src/honeybee.c:128]   --->   Operation 170 'br' <Predicate = (tmp_43_3)> <Delay = 0.46>
ST_18 : Operation 171 [1/1] (0.00ns)   --->   "%collisions_3_24 = phi i64 [ %collisions_3, %4 ], [ %select_ln84_19, %._crit_edge22.2 ]"   --->   Operation 171 'phi' 'collisions_3_24' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 172 [1/1] (0.46ns)   --->   "br label %.preheader" [src/honeybee.c:132]   --->   Operation 172 'br' <Predicate = true> <Delay = 0.46>

State 19 <SV = 18> <Delay = 2.22>
ST_19 : Operation 173 [1/1] (0.00ns)   --->   "%returnCollisions_0 = phi i64 [ %returnCollisions, %5 ], [ 0, %._crit_edge22.3 ]"   --->   Operation 173 'phi' 'returnCollisions_0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 174 [1/1] (0.00ns)   --->   "%i_1 = phi i3 [ %i, %5 ], [ 0, %._crit_edge22.3 ]"   --->   Operation 174 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 175 [1/1] (0.98ns)   --->   "%icmp_ln132 = icmp eq i3 %i_1, -4" [src/honeybee.c:132]   --->   Operation 175 'icmp' 'icmp_ln132' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 176 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 176 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 177 [1/1] (0.76ns)   --->   "%i = add i3 %i_1, 1" [src/honeybee.c:132]   --->   Operation 177 'add' 'i' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 178 [1/1] (0.00ns)   --->   "br i1 %icmp_ln132, label %6, label %5" [src/honeybee.c:132]   --->   Operation 178 'br' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 179 [1/1] (0.00ns)   --->   "%trunc_ln133 = trunc i3 %i_1 to i2" [src/honeybee.c:133]   --->   Operation 179 'trunc' 'trunc_ln133' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_19 : Operation 180 [1/1] (1.42ns)   --->   "%tmp = call i64 @_ssdm_op_Mux.ap_auto.4i64.i2(i64 %collisions_0_21, i64 %collisions_1_22, i64 %collisions_2_23, i64 %collisions_3_24, i2 %trunc_ln133)" [src/honeybee.c:133]   --->   Operation 180 'mux' 'tmp' <Predicate = (!icmp_ln132)> <Delay = 1.42> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 181 [1/1] (0.80ns)   --->   "%returnCollisions = or i64 %tmp, %returnCollisions_0" [src/honeybee.c:133]   --->   Operation 181 'or' 'returnCollisions' <Predicate = (!icmp_ln132)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 182 [1/1] (0.00ns)   --->   "br label %.preheader" [src/honeybee.c:132]   --->   Operation 182 'br' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_19 : Operation 183 [1/1] (0.00ns)   --->   "ret i64 %returnCollisions_0" [src/honeybee.c:135]   --->   Operation 183 'ret' <Predicate = (icmp_ln132)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln84', src/honeybee.c:84) with incoming values : ('add_ln84', src/honeybee.c:84) [23]  (0.466 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ret', src/honeybee.c:105) to 'lineIntersectsPlane' [67]  (8.75 ns)

 <State 3>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret', src/honeybee.c:105) to 'lineIntersectsPlane' [67]  (8.59 ns)

 <State 4>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_s', src/honeybee.c:125) to 'pointOnSegment' [71]  (5.28 ns)

 <State 5>: 8.58ns
The critical path consists of the following:
	'call' operation ('j', src/honeybee.c:126) to '__hls_fptosi_float_i' [74]  (8.58 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ret_1', src/honeybee.c:105) to 'lineIntersectsPlane' [90]  (8.75 ns)

 <State 7>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret_1', src/honeybee.c:105) to 'lineIntersectsPlane' [90]  (8.59 ns)

 <State 8>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_43_1', src/honeybee.c:125) to 'pointOnSegment' [94]  (5.28 ns)

 <State 9>: 8.58ns
The critical path consists of the following:
	'call' operation ('j', src/honeybee.c:126) to '__hls_fptosi_float_i' [97]  (8.58 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ret_2', src/honeybee.c:105) to 'lineIntersectsPlane' [113]  (8.75 ns)

 <State 11>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret_2', src/honeybee.c:105) to 'lineIntersectsPlane' [113]  (8.59 ns)

 <State 12>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_43_2', src/honeybee.c:125) to 'pointOnSegment' [117]  (5.28 ns)

 <State 13>: 8.58ns
The critical path consists of the following:
	'call' operation ('j', src/honeybee.c:126) to '__hls_fptosi_float_i' [120]  (8.58 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ret_3', src/honeybee.c:105) to 'lineIntersectsPlane' [137]  (8.75 ns)

 <State 15>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret_3', src/honeybee.c:105) to 'lineIntersectsPlane' [137]  (8.59 ns)

 <State 16>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_43_3', src/honeybee.c:125) to 'pointOnSegment' [141]  (5.28 ns)

 <State 17>: 8.58ns
The critical path consists of the following:
	'call' operation ('j', src/honeybee.c:126) to '__hls_fptosi_float_i' [144]  (8.58 ns)

 <State 18>: 5.3ns
The critical path consists of the following:
	'shl' operation ('shl_ln80_9', src/honeybee.c:80->src/honeybee.c:126) [146]  (0 ns)
	'or' operation ('or_ln80_3', src/honeybee.c:80->src/honeybee.c:126) [148]  (0 ns)
	'add' operation ('add_ln80_16', src/honeybee.c:80->src/honeybee.c:126) [149]  (1.9 ns)
	'shl' operation ('shl_ln126_3', src/honeybee.c:126) [151]  (0 ns)
	'or' operation ('collisions[3]', src/honeybee.c:127) [157]  (2.94 ns)
	multiplexor before 'phi' operation ('collisions[3]') with incoming values : ('select_ln84_19', src/honeybee.c:84) ('collisions[3]', src/honeybee.c:127) [160]  (0.466 ns)
	'phi' operation ('collisions[3]') with incoming values : ('select_ln84_19', src/honeybee.c:84) ('collisions[3]', src/honeybee.c:127) [160]  (0 ns)

 <State 19>: 2.23ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/honeybee.c:132) [164]  (0 ns)
	'mux' operation ('tmp', src/honeybee.c:133) [171]  (1.42 ns)
	'or' operation ('returnCollisions', src/honeybee.c:133) [172]  (0.806 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
