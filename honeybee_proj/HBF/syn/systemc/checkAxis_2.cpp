// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "checkAxis_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic checkAxis_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic checkAxis_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> checkAxis_2::ap_ST_fsm_state1 = "1";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state2 = "10";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state3 = "100";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state4 = "1000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state5 = "10000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state6 = "100000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state7 = "1000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state8 = "10000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state9 = "100000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<19> checkAxis_2::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> checkAxis_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> checkAxis_2::ap_const_lv32_2 = "10";
const sc_lv<32> checkAxis_2::ap_const_lv32_6 = "110";
const sc_lv<32> checkAxis_2::ap_const_lv32_A = "1010";
const sc_lv<32> checkAxis_2::ap_const_lv32_E = "1110";
const sc_lv<32> checkAxis_2::ap_const_lv32_4 = "100";
const sc_lv<1> checkAxis_2::ap_const_lv1_1 = "1";
const sc_lv<32> checkAxis_2::ap_const_lv32_8 = "1000";
const sc_lv<32> checkAxis_2::ap_const_lv32_C = "1100";
const sc_lv<32> checkAxis_2::ap_const_lv32_10 = "10000";
const sc_lv<32> checkAxis_2::ap_const_lv32_1 = "1";
const sc_lv<32> checkAxis_2::ap_const_lv32_5 = "101";
const sc_lv<32> checkAxis_2::ap_const_lv32_9 = "1001";
const sc_lv<32> checkAxis_2::ap_const_lv32_D = "1101";
const sc_lv<32> checkAxis_2::ap_const_lv32_12 = "10010";
const sc_lv<1> checkAxis_2::ap_const_lv1_0 = "0";
const sc_lv<2> checkAxis_2::ap_const_lv2_0 = "00";
const sc_lv<32> checkAxis_2::ap_const_lv32_11 = "10001";
const sc_lv<64> checkAxis_2::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> checkAxis_2::ap_const_lv3_0 = "000";
const sc_lv<32> checkAxis_2::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> checkAxis_2::ap_const_lv32_40000000 = "1000000000000000000000000000000";
const sc_lv<32> checkAxis_2::ap_const_lv32_40400000 = "1000000010000000000000000000000";
const sc_lv<32> checkAxis_2::ap_const_lv32_3 = "11";
const sc_lv<32> checkAxis_2::ap_const_lv32_7 = "111";
const sc_lv<32> checkAxis_2::ap_const_lv32_B = "1011";
const sc_lv<32> checkAxis_2::ap_const_lv32_F = "1111";
const sc_lv<2> checkAxis_2::ap_const_lv2_1 = "1";
const sc_lv<2> checkAxis_2::ap_const_lv2_2 = "10";
const sc_lv<2> checkAxis_2::ap_const_lv2_3 = "11";
const sc_lv<64> checkAxis_2::ap_const_lv64_1 = "1";
const sc_lv<32> checkAxis_2::ap_const_lv32_FFFFFFF0 = "11111111111111111111111111110000";
const sc_lv<32> checkAxis_2::ap_const_lv32_20 = "100000";
const sc_lv<32> checkAxis_2::ap_const_lv32_30 = "110000";
const sc_lv<3> checkAxis_2::ap_const_lv3_4 = "100";
const sc_lv<3> checkAxis_2::ap_const_lv3_1 = "1";
const bool checkAxis_2::ap_const_boolean_1 = true;

checkAxis_2::checkAxis_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_lineIntersectsPlane_fu_209 = new lineIntersectsPlane("grp_lineIntersectsPlane_fu_209");
    grp_lineIntersectsPlane_fu_209->ap_clk(ap_clk);
    grp_lineIntersectsPlane_fu_209->ap_rst(ap_rst);
    grp_lineIntersectsPlane_fu_209->ap_start(grp_lineIntersectsPlane_fu_209_ap_start);
    grp_lineIntersectsPlane_fu_209->ap_done(grp_lineIntersectsPlane_fu_209_ap_done);
    grp_lineIntersectsPlane_fu_209->ap_idle(grp_lineIntersectsPlane_fu_209_ap_idle);
    grp_lineIntersectsPlane_fu_209->ap_ready(grp_lineIntersectsPlane_fu_209_ap_ready);
    grp_lineIntersectsPlane_fu_209->edge_p1_x(edge_p1_x);
    grp_lineIntersectsPlane_fu_209->edge_p1_y(edge_p1_y);
    grp_lineIntersectsPlane_fu_209->edge_p1_z(edge_p1_z);
    grp_lineIntersectsPlane_fu_209->edge_p2_x(edge_p2_x);
    grp_lineIntersectsPlane_fu_209->edge_p2_y(edge_p2_y);
    grp_lineIntersectsPlane_fu_209->edge_p2_z(edge_p2_z);
    grp_lineIntersectsPlane_fu_209->plane(grp_lineIntersectsPlane_fu_209_plane);
    grp_lineIntersectsPlane_fu_209->ap_return_0(grp_lineIntersectsPlane_fu_209_ap_return_0);
    grp_lineIntersectsPlane_fu_209->ap_return_1(grp_lineIntersectsPlane_fu_209_ap_return_1);
    grp_lineIntersectsPlane_fu_209->ap_return_2(grp_lineIntersectsPlane_fu_209_ap_return_2);
    grp_pointOnSegment_fu_224 = new pointOnSegment("grp_pointOnSegment_fu_224");
    grp_pointOnSegment_fu_224->ap_clk(ap_clk);
    grp_pointOnSegment_fu_224->ap_rst(ap_rst);
    grp_pointOnSegment_fu_224->ap_start(grp_pointOnSegment_fu_224_ap_start);
    grp_pointOnSegment_fu_224->ap_done(grp_pointOnSegment_fu_224_ap_done);
    grp_pointOnSegment_fu_224->ap_idle(grp_pointOnSegment_fu_224_ap_idle);
    grp_pointOnSegment_fu_224->ap_ready(grp_pointOnSegment_fu_224_ap_ready);
    grp_pointOnSegment_fu_224->p_x(reg_259);
    grp_pointOnSegment_fu_224->p_y(reg_265);
    grp_pointOnSegment_fu_224->p_z(reg_271);
    grp_pointOnSegment_fu_224->e_p1_x(edge_p1_x);
    grp_pointOnSegment_fu_224->e_p1_y(edge_p1_y);
    grp_pointOnSegment_fu_224->e_p1_z(edge_p1_z);
    grp_pointOnSegment_fu_224->e_p2_x(edge_p2_x);
    grp_pointOnSegment_fu_224->e_p2_y(edge_p2_y);
    grp_pointOnSegment_fu_224->e_p2_z(edge_p2_z);
    grp_pointOnSegment_fu_224->ap_return(grp_pointOnSegment_fu_224_ap_return);
    grp_p_hls_fptosi_float_i_fu_237 = new p_hls_fptosi_float_i("grp_p_hls_fptosi_float_i_fu_237");
    grp_p_hls_fptosi_float_i_fu_237->ap_ready(grp_p_hls_fptosi_float_i_fu_237_ap_ready);
    grp_p_hls_fptosi_float_i_fu_237->x(reg_259);
    grp_p_hls_fptosi_float_i_fu_237->ap_return(grp_p_hls_fptosi_float_i_fu_237_ap_return);
    grp_p_hls_fptosi_float_i_fu_242 = new p_hls_fptosi_float_i("grp_p_hls_fptosi_float_i_fu_242");
    grp_p_hls_fptosi_float_i_fu_242->ap_ready(grp_p_hls_fptosi_float_i_fu_242_ap_ready);
    grp_p_hls_fptosi_float_i_fu_242->x(reg_265);
    grp_p_hls_fptosi_float_i_fu_242->ap_return(grp_p_hls_fptosi_float_i_fu_242_ap_return);
    honeybee_mux_42_6hbi_U38 = new honeybee_mux_42_6hbi<1,1,64,64,64,64,2,64>("honeybee_mux_42_6hbi_U38");
    honeybee_mux_42_6hbi_U38->din0(collisions_0_2_reg_147);
    honeybee_mux_42_6hbi_U38->din1(collisions_1_2_reg_157);
    honeybee_mux_42_6hbi_U38->din2(collisions_2_2_reg_167);
    honeybee_mux_42_6hbi_U38->din3(collisions_3_2_reg_177);
    honeybee_mux_42_6hbi_U38->din4(tmp_fu_747_p5);
    honeybee_mux_42_6hbi_U38->dout(tmp_fu_747_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln80_1_fu_544_p2);
    sensitive << ( add_ln80_fu_528_p2 );

    SC_METHOD(thread_add_ln80_2_fu_577_p2);
    sensitive << ( reg_276 );
    sensitive << ( shl_ln80_1_fu_571_p2 );

    SC_METHOD(thread_add_ln80_3_fu_583_p2);
    sensitive << ( add_ln80_2_fu_577_p2 );

    SC_METHOD(thread_add_ln80_4_fu_626_p2);
    sensitive << ( reg_276 );
    sensitive << ( shl_ln80_2_fu_620_p2 );

    SC_METHOD(thread_add_ln80_5_fu_632_p2);
    sensitive << ( add_ln80_4_fu_626_p2 );

    SC_METHOD(thread_add_ln80_6_fu_648_p2);
    sensitive << ( add_ln80_4_fu_626_p2 );

    SC_METHOD(thread_add_ln80_7_fu_681_p2);
    sensitive << ( reg_276 );
    sensitive << ( shl_ln80_3_fu_675_p2 );

    SC_METHOD(thread_add_ln80_8_fu_687_p2);
    sensitive << ( add_ln80_7_fu_681_p2 );

    SC_METHOD(thread_add_ln80_9_fu_703_p2);
    sensitive << ( add_ln80_7_fu_681_p2 );

    SC_METHOD(thread_add_ln80_fu_528_p2);
    sensitive << ( reg_276 );
    sensitive << ( shl_ln80_fu_522_p2 );

    SC_METHOD(thread_add_ln84_fu_308_p2);
    sensitive << ( phi_ln84_reg_136 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln132_fu_731_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln132_fu_731_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln132_fu_731_p2 );
    sensitive << ( returnCollisions_0_reg_187 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_collisions_0_fu_565_p2);
    sensitive << ( or_ln110_fu_560_p2 );
    sensitive << ( shl_ln109_fu_538_p2 );

    SC_METHOD(thread_collisions_1_fu_614_p2);
    sensitive << ( or_ln110_2_fu_609_p2 );
    sensitive << ( shl_ln109_1_fu_593_p2 );

    SC_METHOD(thread_collisions_2_fu_669_p2);
    sensitive << ( or_ln110_4_fu_664_p2 );
    sensitive << ( shl_ln109_2_fu_642_p2 );

    SC_METHOD(thread_collisions_3_fu_724_p2);
    sensitive << ( or_ln110_6_fu_719_p2 );
    sensitive << ( shl_ln109_3_fu_697_p2 );

    SC_METHOD(thread_grp_lineIntersectsPlane_fu_209_ap_start);
    sensitive << ( grp_lineIntersectsPlane_fu_209_ap_start_reg );

    SC_METHOD(thread_grp_lineIntersectsPlane_fu_209_plane);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_pointOnSegment_fu_224_ap_start);
    sensitive << ( grp_pointOnSegment_fu_224_ap_start_reg );

    SC_METHOD(thread_i_fu_737_p2);
    sensitive << ( i_1_reg_198 );

    SC_METHOD(thread_icmp_ln132_fu_731_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i_1_reg_198 );

    SC_METHOD(thread_icmp_ln84_1_fu_314_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln84_reg_136 );

    SC_METHOD(thread_icmp_ln84_2_fu_328_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln84_reg_136 );

    SC_METHOD(thread_icmp_ln84_3_fu_342_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln84_reg_136 );

    SC_METHOD(thread_icmp_ln84_fu_476_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln84_reg_136 );

    SC_METHOD(thread_or_ln110_2_fu_609_p2);
    sensitive << ( select_ln84_16_reg_886 );
    sensitive << ( shl_ln110_1_fu_603_p2 );

    SC_METHOD(thread_or_ln110_4_fu_664_p2);
    sensitive << ( select_ln84_14_reg_881 );
    sensitive << ( shl_ln110_2_fu_658_p2 );

    SC_METHOD(thread_or_ln110_6_fu_719_p2);
    sensitive << ( select_ln84_11_reg_876 );
    sensitive << ( shl_ln110_3_fu_713_p2 );

    SC_METHOD(thread_or_ln110_fu_560_p2);
    sensitive << ( select_ln84_17_reg_891 );
    sensitive << ( shl_ln110_fu_554_p2 );

    SC_METHOD(thread_returnCollisions_fu_761_p2);
    sensitive << ( returnCollisions_0_reg_187 );
    sensitive << ( tmp_fu_747_p6 );

    SC_METHOD(thread_select_ln84_10_fu_412_p3);
    sensitive << ( collisions_load_1_381_fu_80 );
    sensitive << ( icmp_ln84_2_fu_328_p2 );
    sensitive << ( select_ln84_9_fu_404_p3 );

    SC_METHOD(thread_select_ln84_11_fu_420_p3);
    sensitive << ( collisions_load_1_381_fu_80 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );
    sensitive << ( select_ln84_10_fu_412_p3 );

    SC_METHOD(thread_select_ln84_12_fu_428_p3);
    sensitive << ( collisions_load_1_279_fu_76 );
    sensitive << ( icmp_ln84_1_fu_314_p2 );

    SC_METHOD(thread_select_ln84_13_fu_436_p3);
    sensitive << ( collisions_load_1_279_fu_76 );
    sensitive << ( icmp_ln84_2_fu_328_p2 );
    sensitive << ( select_ln84_12_fu_428_p3 );

    SC_METHOD(thread_select_ln84_14_fu_444_p3);
    sensitive << ( collisions_load_1_279_fu_76 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );
    sensitive << ( select_ln84_13_fu_436_p3 );

    SC_METHOD(thread_select_ln84_15_fu_452_p3);
    sensitive << ( collisions_load_1_177_fu_72 );
    sensitive << ( icmp_ln84_2_fu_328_p2 );

    SC_METHOD(thread_select_ln84_16_fu_460_p3);
    sensitive << ( collisions_load_1_177_fu_72 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );
    sensitive << ( select_ln84_15_fu_452_p3 );

    SC_METHOD(thread_select_ln84_17_fu_468_p3);
    sensitive << ( collisions_load_1_075_fu_68 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );

    SC_METHOD(thread_select_ln84_1_fu_334_p3);
    sensitive << ( collisions_3_0_fu_96 );
    sensitive << ( icmp_ln84_2_fu_328_p2 );
    sensitive << ( select_ln84_fu_320_p3 );

    SC_METHOD(thread_select_ln84_2_fu_348_p3);
    sensitive << ( collisions_3_0_fu_96 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );
    sensitive << ( select_ln84_1_fu_334_p3 );

    SC_METHOD(thread_select_ln84_3_fu_356_p3);
    sensitive << ( collisions_2_0_fu_92 );
    sensitive << ( icmp_ln84_1_fu_314_p2 );

    SC_METHOD(thread_select_ln84_4_fu_364_p3);
    sensitive << ( collisions_2_0_fu_92 );
    sensitive << ( icmp_ln84_2_fu_328_p2 );
    sensitive << ( select_ln84_3_fu_356_p3 );

    SC_METHOD(thread_select_ln84_5_fu_372_p3);
    sensitive << ( collisions_2_0_fu_92 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );
    sensitive << ( select_ln84_4_fu_364_p3 );

    SC_METHOD(thread_select_ln84_6_fu_380_p3);
    sensitive << ( collisions_1_0_fu_88 );
    sensitive << ( icmp_ln84_2_fu_328_p2 );

    SC_METHOD(thread_select_ln84_7_fu_388_p3);
    sensitive << ( collisions_1_0_fu_88 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );
    sensitive << ( select_ln84_6_fu_380_p3 );

    SC_METHOD(thread_select_ln84_8_fu_396_p3);
    sensitive << ( collisions_0_0_fu_84 );
    sensitive << ( icmp_ln84_3_fu_342_p2 );

    SC_METHOD(thread_select_ln84_9_fu_404_p3);
    sensitive << ( collisions_load_1_381_fu_80 );
    sensitive << ( icmp_ln84_1_fu_314_p2 );

    SC_METHOD(thread_select_ln84_fu_320_p3);
    sensitive << ( collisions_3_0_fu_96 );
    sensitive << ( icmp_ln84_1_fu_314_p2 );

    SC_METHOD(thread_shl_ln109_1_fu_593_p2);
    sensitive << ( zext_ln109_1_fu_589_p1 );

    SC_METHOD(thread_shl_ln109_2_fu_642_p2);
    sensitive << ( zext_ln109_2_fu_638_p1 );

    SC_METHOD(thread_shl_ln109_3_fu_697_p2);
    sensitive << ( zext_ln109_3_fu_693_p1 );

    SC_METHOD(thread_shl_ln109_fu_538_p2);
    sensitive << ( zext_ln109_fu_534_p1 );

    SC_METHOD(thread_shl_ln110_1_fu_603_p2);
    sensitive << ( zext_ln110_1_fu_599_p1 );

    SC_METHOD(thread_shl_ln110_2_fu_658_p2);
    sensitive << ( zext_ln110_2_fu_654_p1 );

    SC_METHOD(thread_shl_ln110_3_fu_713_p2);
    sensitive << ( zext_ln110_3_fu_709_p1 );

    SC_METHOD(thread_shl_ln110_fu_554_p2);
    sensitive << ( zext_ln110_fu_550_p1 );

    SC_METHOD(thread_shl_ln80_1_fu_571_p2);
    sensitive << ( reg_280 );

    SC_METHOD(thread_shl_ln80_2_fu_620_p2);
    sensitive << ( reg_280 );

    SC_METHOD(thread_shl_ln80_3_fu_675_p2);
    sensitive << ( reg_280 );

    SC_METHOD(thread_shl_ln80_fu_522_p2);
    sensitive << ( reg_280 );

    SC_METHOD(thread_tmp_fu_747_p5);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i_1_reg_198 );

    SC_METHOD(thread_zext_ln109_1_fu_589_p1);
    sensitive << ( add_ln80_3_fu_583_p2 );

    SC_METHOD(thread_zext_ln109_2_fu_638_p1);
    sensitive << ( add_ln80_5_fu_632_p2 );

    SC_METHOD(thread_zext_ln109_3_fu_693_p1);
    sensitive << ( add_ln80_8_fu_687_p2 );

    SC_METHOD(thread_zext_ln109_fu_534_p1);
    sensitive << ( add_ln80_fu_528_p2 );

    SC_METHOD(thread_zext_ln110_1_fu_599_p1);
    sensitive << ( add_ln80_2_fu_577_p2 );

    SC_METHOD(thread_zext_ln110_2_fu_654_p1);
    sensitive << ( add_ln80_6_fu_648_p2 );

    SC_METHOD(thread_zext_ln110_3_fu_709_p1);
    sensitive << ( add_ln80_9_fu_703_p2 );

    SC_METHOD(thread_zext_ln110_fu_550_p1);
    sensitive << ( add_ln80_1_fu_544_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_lineIntersectsPlane_fu_209_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_pointOnSegment_fu_224_ap_done );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln132_fu_731_p2 );
    sensitive << ( icmp_ln84_fu_476_p2 );

    ap_CS_fsm = "0000000000000000001";
    grp_lineIntersectsPlane_fu_209_ap_start_reg = SC_LOGIC_0;
    grp_pointOnSegment_fu_224_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "checkAxis_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, edge_p1_x, "(port)edge_p1_x");
    sc_trace(mVcdFile, edge_p1_y, "(port)edge_p1_y");
    sc_trace(mVcdFile, edge_p1_z, "(port)edge_p1_z");
    sc_trace(mVcdFile, edge_p2_x, "(port)edge_p2_x");
    sc_trace(mVcdFile, edge_p2_y, "(port)edge_p2_y");
    sc_trace(mVcdFile, edge_p2_z, "(port)edge_p2_z");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_259, "reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_ready, "grp_lineIntersectsPlane_fu_209_ap_ready");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_done, "grp_lineIntersectsPlane_fu_209_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, reg_265, "reg_265");
    sc_trace(mVcdFile, reg_271, "reg_271");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_237_ap_return, "grp_p_hls_fptosi_float_i_fu_237_ap_return");
    sc_trace(mVcdFile, reg_276, "reg_276");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_224_ap_ready, "grp_pointOnSegment_fu_224_ap_ready");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_224_ap_done, "grp_pointOnSegment_fu_224_ap_done");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_224_ap_return, "grp_pointOnSegment_fu_224_ap_return");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_242_ap_return, "grp_p_hls_fptosi_float_i_fu_242_ap_return");
    sc_trace(mVcdFile, reg_280, "reg_280");
    sc_trace(mVcdFile, add_ln84_fu_308_p2, "add_ln84_fu_308_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, select_ln84_2_fu_348_p3, "select_ln84_2_fu_348_p3");
    sc_trace(mVcdFile, select_ln84_2_reg_856, "select_ln84_2_reg_856");
    sc_trace(mVcdFile, select_ln84_5_fu_372_p3, "select_ln84_5_fu_372_p3");
    sc_trace(mVcdFile, select_ln84_5_reg_861, "select_ln84_5_reg_861");
    sc_trace(mVcdFile, select_ln84_7_fu_388_p3, "select_ln84_7_fu_388_p3");
    sc_trace(mVcdFile, select_ln84_7_reg_866, "select_ln84_7_reg_866");
    sc_trace(mVcdFile, select_ln84_8_fu_396_p3, "select_ln84_8_fu_396_p3");
    sc_trace(mVcdFile, select_ln84_8_reg_871, "select_ln84_8_reg_871");
    sc_trace(mVcdFile, select_ln84_11_fu_420_p3, "select_ln84_11_fu_420_p3");
    sc_trace(mVcdFile, select_ln84_11_reg_876, "select_ln84_11_reg_876");
    sc_trace(mVcdFile, select_ln84_14_fu_444_p3, "select_ln84_14_fu_444_p3");
    sc_trace(mVcdFile, select_ln84_14_reg_881, "select_ln84_14_reg_881");
    sc_trace(mVcdFile, select_ln84_16_fu_460_p3, "select_ln84_16_fu_460_p3");
    sc_trace(mVcdFile, select_ln84_16_reg_886, "select_ln84_16_reg_886");
    sc_trace(mVcdFile, select_ln84_17_fu_468_p3, "select_ln84_17_fu_468_p3");
    sc_trace(mVcdFile, select_ln84_17_reg_891, "select_ln84_17_reg_891");
    sc_trace(mVcdFile, tmp_s_reg_899, "tmp_s_reg_899");
    sc_trace(mVcdFile, collisions_0_fu_565_p2, "collisions_0_fu_565_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_1_reg_908, "tmp_1_reg_908");
    sc_trace(mVcdFile, collisions_1_fu_614_p2, "collisions_1_fu_614_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_2_reg_917, "tmp_2_reg_917");
    sc_trace(mVcdFile, collisions_2_fu_669_p2, "collisions_2_fu_669_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_3_reg_926, "tmp_3_reg_926");
    sc_trace(mVcdFile, i_fu_737_p2, "i_fu_737_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, returnCollisions_fu_761_p2, "returnCollisions_fu_761_p2");
    sc_trace(mVcdFile, icmp_ln132_fu_731_p2, "icmp_ln132_fu_731_p2");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_start, "grp_lineIntersectsPlane_fu_209_ap_start");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_idle, "grp_lineIntersectsPlane_fu_209_ap_idle");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_plane, "grp_lineIntersectsPlane_fu_209_plane");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_return_0, "grp_lineIntersectsPlane_fu_209_ap_return_0");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_return_1, "grp_lineIntersectsPlane_fu_209_ap_return_1");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_return_2, "grp_lineIntersectsPlane_fu_209_ap_return_2");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_224_ap_start, "grp_pointOnSegment_fu_224_ap_start");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_224_ap_idle, "grp_pointOnSegment_fu_224_ap_idle");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_237_ap_ready, "grp_p_hls_fptosi_float_i_fu_237_ap_ready");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_242_ap_ready, "grp_p_hls_fptosi_float_i_fu_242_ap_ready");
    sc_trace(mVcdFile, phi_ln84_reg_136, "phi_ln84_reg_136");
    sc_trace(mVcdFile, icmp_ln84_fu_476_p2, "icmp_ln84_fu_476_p2");
    sc_trace(mVcdFile, collisions_0_2_reg_147, "collisions_0_2_reg_147");
    sc_trace(mVcdFile, collisions_1_2_reg_157, "collisions_1_2_reg_157");
    sc_trace(mVcdFile, collisions_2_2_reg_167, "collisions_2_2_reg_167");
    sc_trace(mVcdFile, collisions_3_fu_724_p2, "collisions_3_fu_724_p2");
    sc_trace(mVcdFile, collisions_3_2_reg_177, "collisions_3_2_reg_177");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, returnCollisions_0_reg_187, "returnCollisions_0_reg_187");
    sc_trace(mVcdFile, i_1_reg_198, "i_1_reg_198");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_209_ap_start_reg, "grp_lineIntersectsPlane_fu_209_ap_start_reg");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_224_ap_start_reg, "grp_pointOnSegment_fu_224_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, collisions_load_1_075_fu_68, "collisions_load_1_075_fu_68");
    sc_trace(mVcdFile, collisions_load_1_177_fu_72, "collisions_load_1_177_fu_72");
    sc_trace(mVcdFile, collisions_load_1_279_fu_76, "collisions_load_1_279_fu_76");
    sc_trace(mVcdFile, collisions_load_1_381_fu_80, "collisions_load_1_381_fu_80");
    sc_trace(mVcdFile, collisions_0_0_fu_84, "collisions_0_0_fu_84");
    sc_trace(mVcdFile, collisions_1_0_fu_88, "collisions_1_0_fu_88");
    sc_trace(mVcdFile, collisions_2_0_fu_92, "collisions_2_0_fu_92");
    sc_trace(mVcdFile, collisions_3_0_fu_96, "collisions_3_0_fu_96");
    sc_trace(mVcdFile, icmp_ln84_1_fu_314_p2, "icmp_ln84_1_fu_314_p2");
    sc_trace(mVcdFile, icmp_ln84_2_fu_328_p2, "icmp_ln84_2_fu_328_p2");
    sc_trace(mVcdFile, select_ln84_fu_320_p3, "select_ln84_fu_320_p3");
    sc_trace(mVcdFile, icmp_ln84_3_fu_342_p2, "icmp_ln84_3_fu_342_p2");
    sc_trace(mVcdFile, select_ln84_1_fu_334_p3, "select_ln84_1_fu_334_p3");
    sc_trace(mVcdFile, select_ln84_3_fu_356_p3, "select_ln84_3_fu_356_p3");
    sc_trace(mVcdFile, select_ln84_4_fu_364_p3, "select_ln84_4_fu_364_p3");
    sc_trace(mVcdFile, select_ln84_6_fu_380_p3, "select_ln84_6_fu_380_p3");
    sc_trace(mVcdFile, select_ln84_9_fu_404_p3, "select_ln84_9_fu_404_p3");
    sc_trace(mVcdFile, select_ln84_10_fu_412_p3, "select_ln84_10_fu_412_p3");
    sc_trace(mVcdFile, select_ln84_12_fu_428_p3, "select_ln84_12_fu_428_p3");
    sc_trace(mVcdFile, select_ln84_13_fu_436_p3, "select_ln84_13_fu_436_p3");
    sc_trace(mVcdFile, select_ln84_15_fu_452_p3, "select_ln84_15_fu_452_p3");
    sc_trace(mVcdFile, shl_ln80_fu_522_p2, "shl_ln80_fu_522_p2");
    sc_trace(mVcdFile, add_ln80_fu_528_p2, "add_ln80_fu_528_p2");
    sc_trace(mVcdFile, zext_ln109_fu_534_p1, "zext_ln109_fu_534_p1");
    sc_trace(mVcdFile, add_ln80_1_fu_544_p2, "add_ln80_1_fu_544_p2");
    sc_trace(mVcdFile, zext_ln110_fu_550_p1, "zext_ln110_fu_550_p1");
    sc_trace(mVcdFile, shl_ln110_fu_554_p2, "shl_ln110_fu_554_p2");
    sc_trace(mVcdFile, or_ln110_fu_560_p2, "or_ln110_fu_560_p2");
    sc_trace(mVcdFile, shl_ln109_fu_538_p2, "shl_ln109_fu_538_p2");
    sc_trace(mVcdFile, shl_ln80_1_fu_571_p2, "shl_ln80_1_fu_571_p2");
    sc_trace(mVcdFile, add_ln80_2_fu_577_p2, "add_ln80_2_fu_577_p2");
    sc_trace(mVcdFile, add_ln80_3_fu_583_p2, "add_ln80_3_fu_583_p2");
    sc_trace(mVcdFile, zext_ln109_1_fu_589_p1, "zext_ln109_1_fu_589_p1");
    sc_trace(mVcdFile, zext_ln110_1_fu_599_p1, "zext_ln110_1_fu_599_p1");
    sc_trace(mVcdFile, shl_ln110_1_fu_603_p2, "shl_ln110_1_fu_603_p2");
    sc_trace(mVcdFile, or_ln110_2_fu_609_p2, "or_ln110_2_fu_609_p2");
    sc_trace(mVcdFile, shl_ln109_1_fu_593_p2, "shl_ln109_1_fu_593_p2");
    sc_trace(mVcdFile, shl_ln80_2_fu_620_p2, "shl_ln80_2_fu_620_p2");
    sc_trace(mVcdFile, add_ln80_4_fu_626_p2, "add_ln80_4_fu_626_p2");
    sc_trace(mVcdFile, add_ln80_5_fu_632_p2, "add_ln80_5_fu_632_p2");
    sc_trace(mVcdFile, zext_ln109_2_fu_638_p1, "zext_ln109_2_fu_638_p1");
    sc_trace(mVcdFile, add_ln80_6_fu_648_p2, "add_ln80_6_fu_648_p2");
    sc_trace(mVcdFile, zext_ln110_2_fu_654_p1, "zext_ln110_2_fu_654_p1");
    sc_trace(mVcdFile, shl_ln110_2_fu_658_p2, "shl_ln110_2_fu_658_p2");
    sc_trace(mVcdFile, or_ln110_4_fu_664_p2, "or_ln110_4_fu_664_p2");
    sc_trace(mVcdFile, shl_ln109_2_fu_642_p2, "shl_ln109_2_fu_642_p2");
    sc_trace(mVcdFile, shl_ln80_3_fu_675_p2, "shl_ln80_3_fu_675_p2");
    sc_trace(mVcdFile, add_ln80_7_fu_681_p2, "add_ln80_7_fu_681_p2");
    sc_trace(mVcdFile, add_ln80_8_fu_687_p2, "add_ln80_8_fu_687_p2");
    sc_trace(mVcdFile, zext_ln109_3_fu_693_p1, "zext_ln109_3_fu_693_p1");
    sc_trace(mVcdFile, add_ln80_9_fu_703_p2, "add_ln80_9_fu_703_p2");
    sc_trace(mVcdFile, zext_ln110_3_fu_709_p1, "zext_ln110_3_fu_709_p1");
    sc_trace(mVcdFile, shl_ln110_3_fu_713_p2, "shl_ln110_3_fu_713_p2");
    sc_trace(mVcdFile, or_ln110_6_fu_719_p2, "or_ln110_6_fu_719_p2");
    sc_trace(mVcdFile, shl_ln109_3_fu_697_p2, "shl_ln109_3_fu_697_p2");
    sc_trace(mVcdFile, tmp_fu_747_p5, "tmp_fu_747_p5");
    sc_trace(mVcdFile, tmp_fu_747_p6, "tmp_fu_747_p6");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

checkAxis_2::~checkAxis_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_lineIntersectsPlane_fu_209;
    delete grp_pointOnSegment_fu_224;
    delete grp_p_hls_fptosi_float_i_fu_237;
    delete grp_p_hls_fptosi_float_i_fu_242;
    delete honeybee_mux_42_6hbi_U38;
}

void checkAxis_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv64_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln132_fu_731_p2.read()))) {
            ap_return_preg = returnCollisions_0_reg_187.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_0))) {
        collisions_0_2_reg_147 = select_ln84_8_reg_871.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_899.read()))) {
        collisions_0_2_reg_147 = collisions_0_fu_565_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_0))) {
        collisions_1_2_reg_157 = select_ln84_7_reg_866.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_908.read()))) {
        collisions_1_2_reg_157 = collisions_1_fu_614_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_0))) {
        collisions_2_2_reg_167 = select_ln84_5_reg_861.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_917.read()))) {
        collisions_2_2_reg_167 = collisions_2_fu_669_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_0))) {
        collisions_3_2_reg_177 = select_ln84_2_reg_856.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_926.read()))) {
        collisions_3_2_reg_177 = collisions_3_fu_724_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lineIntersectsPlane_fu_209_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln84_fu_476_p2.read())))) {
            grp_lineIntersectsPlane_fu_209_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lineIntersectsPlane_fu_209_ap_ready.read())) {
            grp_lineIntersectsPlane_fu_209_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_pointOnSegment_fu_224_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
            grp_pointOnSegment_fu_224_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointOnSegment_fu_224_ap_ready.read())) {
            grp_pointOnSegment_fu_224_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_1_reg_198 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(icmp_ln132_fu_731_p2.read(), ap_const_lv1_0))) {
        i_1_reg_198 = i_fu_737_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln84_fu_476_p2.read()))) {
        phi_ln84_reg_136 = add_ln84_fu_308_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln84_reg_136 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        returnCollisions_0_reg_187 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(icmp_ln132_fu_731_p2.read(), ap_const_lv1_0))) {
        returnCollisions_0_reg_187 = returnCollisions_fu_761_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        collisions_0_0_fu_84 = select_ln84_8_fu_396_p3.read();
        collisions_1_0_fu_88 = select_ln84_7_fu_388_p3.read();
        collisions_2_0_fu_92 = select_ln84_5_fu_372_p3.read();
        collisions_3_0_fu_96 = select_ln84_2_fu_348_p3.read();
        collisions_load_1_075_fu_68 = select_ln84_17_fu_468_p3.read();
        collisions_load_1_177_fu_72 = select_ln84_16_fu_460_p3.read();
        collisions_load_1_279_fu_76 = select_ln84_14_fu_444_p3.read();
        collisions_load_1_381_fu_80 = select_ln84_11_fu_420_p3.read();
        select_ln84_11_reg_876 = select_ln84_11_fu_420_p3.read();
        select_ln84_14_reg_881 = select_ln84_14_fu_444_p3.read();
        select_ln84_16_reg_886 = select_ln84_16_fu_460_p3.read();
        select_ln84_17_reg_891 = select_ln84_17_fu_468_p3.read();
        select_ln84_2_reg_856 = select_ln84_2_fu_348_p3.read();
        select_ln84_5_reg_861 = select_ln84_5_fu_372_p3.read();
        select_ln84_7_reg_866 = select_ln84_7_fu_388_p3.read();
        select_ln84_8_reg_871 = select_ln84_8_fu_396_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())))) {
        reg_259 = grp_lineIntersectsPlane_fu_209_ap_return_0.read();
        reg_265 = grp_lineIntersectsPlane_fu_209_ap_return_1.read();
        reg_271 = grp_lineIntersectsPlane_fu_209_ap_return_2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())))) {
        reg_276 = grp_p_hls_fptosi_float_i_fu_237_ap_return.read();
        reg_280 = grp_p_hls_fptosi_float_i_fu_242_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        tmp_1_reg_908 = grp_pointOnSegment_fu_224_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        tmp_2_reg_917 = grp_pointOnSegment_fu_224_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        tmp_3_reg_926 = grp_pointOnSegment_fu_224_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1))) {
        tmp_s_reg_899 = grp_pointOnSegment_fu_224_ap_return.read();
    }
}

void checkAxis_2::thread_add_ln80_1_fu_544_p2() {
    add_ln80_1_fu_544_p2 = (!ap_const_lv32_FFFFFFF0.is_01() || !add_ln80_fu_528_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFF0) + sc_biguint<32>(add_ln80_fu_528_p2.read()));
}

void checkAxis_2::thread_add_ln80_2_fu_577_p2() {
    add_ln80_2_fu_577_p2 = (!shl_ln80_1_fu_571_p2.read().is_01() || !reg_276.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln80_1_fu_571_p2.read()) + sc_biguint<32>(reg_276.read()));
}

void checkAxis_2::thread_add_ln80_3_fu_583_p2() {
    add_ln80_3_fu_583_p2 = (!ap_const_lv32_10.is_01() || !add_ln80_2_fu_577_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) + sc_biguint<32>(add_ln80_2_fu_577_p2.read()));
}

void checkAxis_2::thread_add_ln80_4_fu_626_p2() {
    add_ln80_4_fu_626_p2 = (!shl_ln80_2_fu_620_p2.read().is_01() || !reg_276.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln80_2_fu_620_p2.read()) + sc_biguint<32>(reg_276.read()));
}

void checkAxis_2::thread_add_ln80_5_fu_632_p2() {
    add_ln80_5_fu_632_p2 = (!ap_const_lv32_20.is_01() || !add_ln80_4_fu_626_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_20) + sc_biguint<32>(add_ln80_4_fu_626_p2.read()));
}

void checkAxis_2::thread_add_ln80_6_fu_648_p2() {
    add_ln80_6_fu_648_p2 = (!ap_const_lv32_10.is_01() || !add_ln80_4_fu_626_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) + sc_biguint<32>(add_ln80_4_fu_626_p2.read()));
}

void checkAxis_2::thread_add_ln80_7_fu_681_p2() {
    add_ln80_7_fu_681_p2 = (!shl_ln80_3_fu_675_p2.read().is_01() || !reg_276.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln80_3_fu_675_p2.read()) + sc_biguint<32>(reg_276.read()));
}

void checkAxis_2::thread_add_ln80_8_fu_687_p2() {
    add_ln80_8_fu_687_p2 = (!ap_const_lv32_30.is_01() || !add_ln80_7_fu_681_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_30) + sc_biguint<32>(add_ln80_7_fu_681_p2.read()));
}

void checkAxis_2::thread_add_ln80_9_fu_703_p2() {
    add_ln80_9_fu_703_p2 = (!ap_const_lv32_20.is_01() || !add_ln80_7_fu_681_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_20) + sc_biguint<32>(add_ln80_7_fu_681_p2.read()));
}

void checkAxis_2::thread_add_ln80_fu_528_p2() {
    add_ln80_fu_528_p2 = (!shl_ln80_fu_522_p2.read().is_01() || !reg_276.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln80_fu_522_p2.read()) + sc_biguint<32>(reg_276.read()));
}

void checkAxis_2::thread_add_ln84_fu_308_p2() {
    add_ln84_fu_308_p2 = (!phi_ln84_reg_136.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(phi_ln84_reg_136.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void checkAxis_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void checkAxis_2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void checkAxis_2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void checkAxis_2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void checkAxis_2::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void checkAxis_2::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void checkAxis_2::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void checkAxis_2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void checkAxis_2::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void checkAxis_2::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void checkAxis_2::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void checkAxis_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void checkAxis_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void checkAxis_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void checkAxis_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void checkAxis_2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void checkAxis_2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void checkAxis_2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void checkAxis_2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void checkAxis_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln132_fu_731_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void checkAxis_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void checkAxis_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln132_fu_731_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void checkAxis_2::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln132_fu_731_p2.read()))) {
        ap_return = returnCollisions_0_reg_187.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void checkAxis_2::thread_collisions_0_fu_565_p2() {
    collisions_0_fu_565_p2 = (or_ln110_fu_560_p2.read() | shl_ln109_fu_538_p2.read());
}

void checkAxis_2::thread_collisions_1_fu_614_p2() {
    collisions_1_fu_614_p2 = (or_ln110_2_fu_609_p2.read() | shl_ln109_1_fu_593_p2.read());
}

void checkAxis_2::thread_collisions_2_fu_669_p2() {
    collisions_2_fu_669_p2 = (or_ln110_4_fu_664_p2.read() | shl_ln109_2_fu_642_p2.read());
}

void checkAxis_2::thread_collisions_3_fu_724_p2() {
    collisions_3_fu_724_p2 = (or_ln110_6_fu_719_p2.read() | shl_ln109_3_fu_697_p2.read());
}

void checkAxis_2::thread_grp_lineIntersectsPlane_fu_209_ap_start() {
    grp_lineIntersectsPlane_fu_209_ap_start = grp_lineIntersectsPlane_fu_209_ap_start_reg.read();
}

void checkAxis_2::thread_grp_lineIntersectsPlane_fu_209_plane() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_lineIntersectsPlane_fu_209_plane = ap_const_lv32_40400000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_lineIntersectsPlane_fu_209_plane = ap_const_lv32_40000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_lineIntersectsPlane_fu_209_plane = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_lineIntersectsPlane_fu_209_plane = ap_const_lv32_0;
    } else {
        grp_lineIntersectsPlane_fu_209_plane = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void checkAxis_2::thread_grp_pointOnSegment_fu_224_ap_start() {
    grp_pointOnSegment_fu_224_ap_start = grp_pointOnSegment_fu_224_ap_start_reg.read();
}

void checkAxis_2::thread_i_fu_737_p2() {
    i_fu_737_p2 = (!i_1_reg_198.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_198.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void checkAxis_2::thread_icmp_ln132_fu_731_p2() {
    icmp_ln132_fu_731_p2 = (!i_1_reg_198.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_198.read() == ap_const_lv3_4);
}

void checkAxis_2::thread_icmp_ln84_1_fu_314_p2() {
    icmp_ln84_1_fu_314_p2 = (!phi_ln84_reg_136.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln84_reg_136.read() == ap_const_lv2_2);
}

void checkAxis_2::thread_icmp_ln84_2_fu_328_p2() {
    icmp_ln84_2_fu_328_p2 = (!phi_ln84_reg_136.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln84_reg_136.read() == ap_const_lv2_1);
}

void checkAxis_2::thread_icmp_ln84_3_fu_342_p2() {
    icmp_ln84_3_fu_342_p2 = (!phi_ln84_reg_136.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln84_reg_136.read() == ap_const_lv2_0);
}

void checkAxis_2::thread_icmp_ln84_fu_476_p2() {
    icmp_ln84_fu_476_p2 = (!phi_ln84_reg_136.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln84_reg_136.read() == ap_const_lv2_3);
}

void checkAxis_2::thread_or_ln110_2_fu_609_p2() {
    or_ln110_2_fu_609_p2 = (select_ln84_16_reg_886.read() | shl_ln110_1_fu_603_p2.read());
}

void checkAxis_2::thread_or_ln110_4_fu_664_p2() {
    or_ln110_4_fu_664_p2 = (select_ln84_14_reg_881.read() | shl_ln110_2_fu_658_p2.read());
}

void checkAxis_2::thread_or_ln110_6_fu_719_p2() {
    or_ln110_6_fu_719_p2 = (select_ln84_11_reg_876.read() | shl_ln110_3_fu_713_p2.read());
}

void checkAxis_2::thread_or_ln110_fu_560_p2() {
    or_ln110_fu_560_p2 = (select_ln84_17_reg_891.read() | shl_ln110_fu_554_p2.read());
}

void checkAxis_2::thread_returnCollisions_fu_761_p2() {
    returnCollisions_fu_761_p2 = (tmp_fu_747_p6.read() | returnCollisions_0_reg_187.read());
}

void checkAxis_2::thread_select_ln84_10_fu_412_p3() {
    select_ln84_10_fu_412_p3 = (!icmp_ln84_2_fu_328_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_2_fu_328_p2.read()[0].to_bool())? collisions_load_1_381_fu_80.read(): select_ln84_9_fu_404_p3.read());
}

void checkAxis_2::thread_select_ln84_11_fu_420_p3() {
    select_ln84_11_fu_420_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? collisions_load_1_381_fu_80.read(): select_ln84_10_fu_412_p3.read());
}

void checkAxis_2::thread_select_ln84_12_fu_428_p3() {
    select_ln84_12_fu_428_p3 = (!icmp_ln84_1_fu_314_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_1_fu_314_p2.read()[0].to_bool())? ap_const_lv64_0: collisions_load_1_279_fu_76.read());
}

void checkAxis_2::thread_select_ln84_13_fu_436_p3() {
    select_ln84_13_fu_436_p3 = (!icmp_ln84_2_fu_328_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_2_fu_328_p2.read()[0].to_bool())? collisions_load_1_279_fu_76.read(): select_ln84_12_fu_428_p3.read());
}

void checkAxis_2::thread_select_ln84_14_fu_444_p3() {
    select_ln84_14_fu_444_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? collisions_load_1_279_fu_76.read(): select_ln84_13_fu_436_p3.read());
}

void checkAxis_2::thread_select_ln84_15_fu_452_p3() {
    select_ln84_15_fu_452_p3 = (!icmp_ln84_2_fu_328_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_2_fu_328_p2.read()[0].to_bool())? ap_const_lv64_0: collisions_load_1_177_fu_72.read());
}

void checkAxis_2::thread_select_ln84_16_fu_460_p3() {
    select_ln84_16_fu_460_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? collisions_load_1_177_fu_72.read(): select_ln84_15_fu_452_p3.read());
}

void checkAxis_2::thread_select_ln84_17_fu_468_p3() {
    select_ln84_17_fu_468_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? ap_const_lv64_0: collisions_load_1_075_fu_68.read());
}

void checkAxis_2::thread_select_ln84_1_fu_334_p3() {
    select_ln84_1_fu_334_p3 = (!icmp_ln84_2_fu_328_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_2_fu_328_p2.read()[0].to_bool())? collisions_3_0_fu_96.read(): select_ln84_fu_320_p3.read());
}

void checkAxis_2::thread_select_ln84_2_fu_348_p3() {
    select_ln84_2_fu_348_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? collisions_3_0_fu_96.read(): select_ln84_1_fu_334_p3.read());
}

void checkAxis_2::thread_select_ln84_3_fu_356_p3() {
    select_ln84_3_fu_356_p3 = (!icmp_ln84_1_fu_314_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_1_fu_314_p2.read()[0].to_bool())? ap_const_lv64_0: collisions_2_0_fu_92.read());
}

void checkAxis_2::thread_select_ln84_4_fu_364_p3() {
    select_ln84_4_fu_364_p3 = (!icmp_ln84_2_fu_328_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_2_fu_328_p2.read()[0].to_bool())? collisions_2_0_fu_92.read(): select_ln84_3_fu_356_p3.read());
}

void checkAxis_2::thread_select_ln84_5_fu_372_p3() {
    select_ln84_5_fu_372_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? collisions_2_0_fu_92.read(): select_ln84_4_fu_364_p3.read());
}

void checkAxis_2::thread_select_ln84_6_fu_380_p3() {
    select_ln84_6_fu_380_p3 = (!icmp_ln84_2_fu_328_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_2_fu_328_p2.read()[0].to_bool())? ap_const_lv64_0: collisions_1_0_fu_88.read());
}

void checkAxis_2::thread_select_ln84_7_fu_388_p3() {
    select_ln84_7_fu_388_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? collisions_1_0_fu_88.read(): select_ln84_6_fu_380_p3.read());
}

void checkAxis_2::thread_select_ln84_8_fu_396_p3() {
    select_ln84_8_fu_396_p3 = (!icmp_ln84_3_fu_342_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_3_fu_342_p2.read()[0].to_bool())? ap_const_lv64_0: collisions_0_0_fu_84.read());
}

void checkAxis_2::thread_select_ln84_9_fu_404_p3() {
    select_ln84_9_fu_404_p3 = (!icmp_ln84_1_fu_314_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_1_fu_314_p2.read()[0].to_bool())? collisions_load_1_381_fu_80.read(): ap_const_lv64_0);
}

void checkAxis_2::thread_select_ln84_fu_320_p3() {
    select_ln84_fu_320_p3 = (!icmp_ln84_1_fu_314_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln84_1_fu_314_p2.read()[0].to_bool())? collisions_3_0_fu_96.read(): ap_const_lv64_0);
}

void checkAxis_2::thread_shl_ln109_1_fu_593_p2() {
    shl_ln109_1_fu_593_p2 = (!zext_ln109_1_fu_589_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln109_1_fu_589_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln109_2_fu_642_p2() {
    shl_ln109_2_fu_642_p2 = (!zext_ln109_2_fu_638_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln109_2_fu_638_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln109_3_fu_697_p2() {
    shl_ln109_3_fu_697_p2 = (!zext_ln109_3_fu_693_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln109_3_fu_693_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln109_fu_538_p2() {
    shl_ln109_fu_538_p2 = (!zext_ln109_fu_534_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln109_fu_534_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln110_1_fu_603_p2() {
    shl_ln110_1_fu_603_p2 = (!zext_ln110_1_fu_599_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln110_1_fu_599_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln110_2_fu_658_p2() {
    shl_ln110_2_fu_658_p2 = (!zext_ln110_2_fu_654_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln110_2_fu_654_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln110_3_fu_713_p2() {
    shl_ln110_3_fu_713_p2 = (!zext_ln110_3_fu_709_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln110_3_fu_709_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln110_fu_554_p2() {
    shl_ln110_fu_554_p2 = (!zext_ln110_fu_550_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln110_fu_550_p1.read().to_uint();
}

void checkAxis_2::thread_shl_ln80_1_fu_571_p2() {
    shl_ln80_1_fu_571_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_280.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_2::thread_shl_ln80_2_fu_620_p2() {
    shl_ln80_2_fu_620_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_280.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_2::thread_shl_ln80_3_fu_675_p2() {
    shl_ln80_3_fu_675_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_280.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_2::thread_shl_ln80_fu_522_p2() {
    shl_ln80_fu_522_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_280.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_2::thread_tmp_fu_747_p5() {
    tmp_fu_747_p5 = i_1_reg_198.read().range(2-1, 0);
}

void checkAxis_2::thread_zext_ln109_1_fu_589_p1() {
    zext_ln109_1_fu_589_p1 = esl_zext<64,32>(add_ln80_3_fu_583_p2.read());
}

void checkAxis_2::thread_zext_ln109_2_fu_638_p1() {
    zext_ln109_2_fu_638_p1 = esl_zext<64,32>(add_ln80_5_fu_632_p2.read());
}

void checkAxis_2::thread_zext_ln109_3_fu_693_p1() {
    zext_ln109_3_fu_693_p1 = esl_zext<64,32>(add_ln80_8_fu_687_p2.read());
}

void checkAxis_2::thread_zext_ln109_fu_534_p1() {
    zext_ln109_fu_534_p1 = esl_zext<64,32>(add_ln80_fu_528_p2.read());
}

void checkAxis_2::thread_zext_ln110_1_fu_599_p1() {
    zext_ln110_1_fu_599_p1 = esl_zext<64,32>(add_ln80_2_fu_577_p2.read());
}

void checkAxis_2::thread_zext_ln110_2_fu_654_p1() {
    zext_ln110_2_fu_654_p1 = esl_zext<64,32>(add_ln80_6_fu_648_p2.read());
}

void checkAxis_2::thread_zext_ln110_3_fu_709_p1() {
    zext_ln110_3_fu_709_p1 = esl_zext<64,32>(add_ln80_9_fu_703_p2.read());
}

void checkAxis_2::thread_zext_ln110_fu_550_p1() {
    zext_ln110_fu_550_p1 = esl_zext<64,32>(add_ln80_1_fu_544_p2.read());
}

void checkAxis_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln84_fu_476_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_209_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_224_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln132_fu_731_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

