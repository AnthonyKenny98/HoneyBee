// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module checkAxis_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        edge_p1_x,
        edge_p1_y,
        edge_p1_z,
        edge_p2_x,
        edge_p2_y,
        edge_p2_z,
        ap_return
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] edge_p1_x;
input  [31:0] edge_p1_y;
input  [31:0] edge_p1_z;
input  [31:0] edge_p2_x;
input  [31:0] edge_p2_y;
input  [31:0] edge_p2_z;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_178;
wire    ap_CS_fsm_state2;
wire    grp_lineIntersectsPlane_fu_122_ap_ready;
wire    grp_lineIntersectsPlane_fu_122_ap_done;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
reg   [31:0] reg_184;
reg   [31:0] reg_190;
wire   [31:0] grp_p_hls_fptosi_float_i_fu_156_ap_return;
reg   [31:0] reg_195;
wire    ap_CS_fsm_state4;
wire    grp_pointOnSegment_fu_143_ap_ready;
wire    grp_pointOnSegment_fu_143_ap_done;
wire   [0:0] grp_pointOnSegment_fu_143_ap_return;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state16;
wire   [31:0] grp_p_hls_fptosi_float_i_fu_161_ap_return;
reg   [31:0] reg_199;
reg   [0:0] tmp_s_reg_446;
wire   [63:0] or_ln108_fu_241_p2;
wire    ap_CS_fsm_state5;
reg   [0:0] tmp_1_reg_455;
wire   [63:0] or_ln108_1_fu_291_p2;
wire    ap_CS_fsm_state9;
reg   [0:0] tmp_2_reg_464;
wire   [63:0] or_ln108_2_fu_347_p2;
wire    ap_CS_fsm_state13;
reg   [0:0] tmp_3_reg_473;
wire    grp_lineIntersectsPlane_fu_122_ap_start;
wire    grp_lineIntersectsPlane_fu_122_ap_idle;
reg   [31:0] grp_lineIntersectsPlane_fu_122_plane;
wire   [31:0] grp_lineIntersectsPlane_fu_122_ap_return_0;
wire   [31:0] grp_lineIntersectsPlane_fu_122_ap_return_1;
wire   [31:0] grp_lineIntersectsPlane_fu_122_ap_return_2;
wire    grp_pointOnSegment_fu_143_ap_start;
wire    grp_pointOnSegment_fu_143_ap_idle;
wire    grp_p_hls_fptosi_float_i_fu_156_ap_ready;
wire    grp_p_hls_fptosi_float_i_fu_161_ap_ready;
reg   [63:0] collisions_5_0_reg_78;
reg   [63:0] collisions_5_1_reg_90;
reg   [63:0] collisions_5_2_reg_101;
wire   [63:0] or_ln108_3_fu_403_p2;
reg   [63:0] ap_phi_mux_collisions_5_3_phi_fu_115_p4;
reg   [63:0] collisions_5_3_reg_112;
wire    ap_CS_fsm_state17;
reg    grp_lineIntersectsPlane_fu_122_ap_start_reg;
reg    grp_pointOnSegment_fu_143_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
wire   [31:0] shl_ln80_fu_203_p2;
wire   [31:0] add_ln80_fu_209_p2;
wire   [63:0] zext_ln107_fu_215_p1;
wire   [31:0] add_ln80_1_fu_225_p2;
wire   [63:0] zext_ln108_fu_231_p1;
wire   [63:0] shl_ln107_fu_219_p2;
wire   [63:0] shl_ln108_fu_235_p2;
wire   [31:0] shl_ln80_1_fu_247_p2;
wire   [31:0] add_ln80_2_fu_253_p2;
wire   [31:0] add_ln80_3_fu_259_p2;
wire   [63:0] zext_ln107_1_fu_265_p1;
wire   [63:0] zext_ln108_1_fu_275_p1;
wire   [63:0] shl_ln108_1_fu_279_p2;
wire   [63:0] or_ln108_4_fu_285_p2;
wire   [63:0] shl_ln107_1_fu_269_p2;
wire   [31:0] shl_ln80_2_fu_297_p2;
wire   [31:0] add_ln80_4_fu_303_p2;
wire   [31:0] add_ln80_5_fu_309_p2;
wire   [63:0] zext_ln107_2_fu_315_p1;
wire   [31:0] add_ln80_6_fu_325_p2;
wire   [63:0] zext_ln108_2_fu_331_p1;
wire   [63:0] shl_ln108_2_fu_335_p2;
wire   [63:0] or_ln108_5_fu_341_p2;
wire   [63:0] shl_ln107_2_fu_319_p2;
wire   [31:0] shl_ln80_3_fu_353_p2;
wire   [31:0] add_ln80_7_fu_359_p2;
wire   [31:0] add_ln80_8_fu_365_p2;
wire   [63:0] zext_ln107_3_fu_371_p1;
wire   [31:0] add_ln80_9_fu_381_p2;
wire   [63:0] zext_ln108_3_fu_387_p1;
wire   [63:0] shl_ln108_3_fu_391_p2;
wire   [63:0] or_ln108_6_fu_397_p2;
wire   [63:0] shl_ln107_3_fu_375_p2;
reg   [63:0] ap_return_preg;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 grp_lineIntersectsPlane_fu_122_ap_start_reg = 1'b0;
#0 grp_pointOnSegment_fu_143_ap_start_reg = 1'b0;
#0 ap_return_preg = 64'd0;
end

lineIntersectsPlane grp_lineIntersectsPlane_fu_122(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lineIntersectsPlane_fu_122_ap_start),
    .ap_done(grp_lineIntersectsPlane_fu_122_ap_done),
    .ap_idle(grp_lineIntersectsPlane_fu_122_ap_idle),
    .ap_ready(grp_lineIntersectsPlane_fu_122_ap_ready),
    .edge_p1_x(edge_p1_x),
    .edge_p1_y(edge_p1_y),
    .edge_p1_z(edge_p1_z),
    .edge_p2_x(edge_p2_x),
    .edge_p2_y(edge_p2_y),
    .edge_p2_z(edge_p2_z),
    .plane(grp_lineIntersectsPlane_fu_122_plane),
    .ap_return_0(grp_lineIntersectsPlane_fu_122_ap_return_0),
    .ap_return_1(grp_lineIntersectsPlane_fu_122_ap_return_1),
    .ap_return_2(grp_lineIntersectsPlane_fu_122_ap_return_2)
);

pointOnSegment grp_pointOnSegment_fu_143(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pointOnSegment_fu_143_ap_start),
    .ap_done(grp_pointOnSegment_fu_143_ap_done),
    .ap_idle(grp_pointOnSegment_fu_143_ap_idle),
    .ap_ready(grp_pointOnSegment_fu_143_ap_ready),
    .p_x(reg_178),
    .p_y(reg_184),
    .p_z(reg_190),
    .e_p1_x(edge_p1_x),
    .e_p1_y(edge_p1_y),
    .e_p1_z(edge_p1_z),
    .e_p2_x(edge_p2_x),
    .e_p2_y(edge_p2_y),
    .e_p2_z(edge_p2_z),
    .ap_return(grp_pointOnSegment_fu_143_ap_return)
);

p_hls_fptosi_float_i grp_p_hls_fptosi_float_i_fu_156(
    .ap_ready(grp_p_hls_fptosi_float_i_fu_156_ap_ready),
    .x(reg_178),
    .ap_return(grp_p_hls_fptosi_float_i_fu_156_ap_return)
);

p_hls_fptosi_float_i grp_p_hls_fptosi_float_i_fu_161(
    .ap_ready(grp_p_hls_fptosi_float_i_fu_161_ap_ready),
    .x(reg_184),
    .ap_return(grp_p_hls_fptosi_float_i_fu_161_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_return_preg <= ap_phi_mux_collisions_5_3_phi_fu_115_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lineIntersectsPlane_fu_122_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_lineIntersectsPlane_fu_122_ap_start_reg <= 1'b1;
        end else if ((grp_lineIntersectsPlane_fu_122_ap_ready == 1'b1)) begin
            grp_lineIntersectsPlane_fu_122_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pointOnSegment_fu_143_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_pointOnSegment_fu_143_ap_start_reg <= 1'b1;
        end else if ((grp_pointOnSegment_fu_143_ap_ready == 1'b1)) begin
            grp_pointOnSegment_fu_143_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_return == 1'd0) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        collisions_5_0_reg_78 <= 64'd0;
    end else if (((tmp_s_reg_446 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        collisions_5_0_reg_78 <= or_ln108_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_return == 1'd0) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        collisions_5_1_reg_90 <= collisions_5_0_reg_78;
    end else if (((tmp_1_reg_455 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        collisions_5_1_reg_90 <= or_ln108_1_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_return == 1'd0) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        collisions_5_2_reg_101 <= collisions_5_1_reg_90;
    end else if (((tmp_2_reg_464 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        collisions_5_2_reg_101 <= or_ln108_2_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_return == 1'd0) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        collisions_5_3_reg_112 <= collisions_5_2_reg_101;
    end else if (((tmp_3_reg_473 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        collisions_5_3_reg_112 <= or_ln108_3_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_178 <= grp_lineIntersectsPlane_fu_122_ap_return_0;
        reg_184 <= grp_lineIntersectsPlane_fu_122_ap_return_1;
        reg_190 <= grp_lineIntersectsPlane_fu_122_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_pointOnSegment_fu_143_ap_return == 1'd1) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_pointOnSegment_fu_143_ap_return == 1'd1) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((grp_pointOnSegment_fu_143_ap_return == 1'd1) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_pointOnSegment_fu_143_ap_return == 1'd1) & (grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_195 <= grp_p_hls_fptosi_float_i_fu_156_ap_return;
        reg_199 <= grp_p_hls_fptosi_float_i_fu_161_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_1_reg_455 <= grp_pointOnSegment_fu_143_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_2_reg_464 <= grp_pointOnSegment_fu_143_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_3_reg_473 <= grp_pointOnSegment_fu_143_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_s_reg_446 <= grp_pointOnSegment_fu_143_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_reg_473 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_phi_mux_collisions_5_3_phi_fu_115_p4 = or_ln108_3_fu_403_p2;
    end else begin
        ap_phi_mux_collisions_5_3_phi_fu_115_p4 = collisions_5_3_reg_112;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_return = ap_phi_mux_collisions_5_3_phi_fu_115_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_lineIntersectsPlane_fu_122_plane = 32'd1077936128;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_lineIntersectsPlane_fu_122_plane = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_lineIntersectsPlane_fu_122_plane = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_lineIntersectsPlane_fu_122_plane = 32'd0;
    end else begin
        grp_lineIntersectsPlane_fu_122_plane = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_lineIntersectsPlane_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_pointOnSegment_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln80_1_fu_225_p2 = ($signed(32'd4294967280) + $signed(add_ln80_fu_209_p2));

assign add_ln80_2_fu_253_p2 = (shl_ln80_1_fu_247_p2 + reg_195);

assign add_ln80_3_fu_259_p2 = (32'd16 + add_ln80_2_fu_253_p2);

assign add_ln80_4_fu_303_p2 = (shl_ln80_2_fu_297_p2 + reg_195);

assign add_ln80_5_fu_309_p2 = (32'd32 + add_ln80_4_fu_303_p2);

assign add_ln80_6_fu_325_p2 = (32'd16 + add_ln80_4_fu_303_p2);

assign add_ln80_7_fu_359_p2 = (shl_ln80_3_fu_353_p2 + reg_195);

assign add_ln80_8_fu_365_p2 = (32'd48 + add_ln80_7_fu_359_p2);

assign add_ln80_9_fu_381_p2 = (32'd32 + add_ln80_7_fu_359_p2);

assign add_ln80_fu_209_p2 = (shl_ln80_fu_203_p2 + reg_195);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_lineIntersectsPlane_fu_122_ap_start = grp_lineIntersectsPlane_fu_122_ap_start_reg;

assign grp_pointOnSegment_fu_143_ap_start = grp_pointOnSegment_fu_143_ap_start_reg;

assign or_ln108_1_fu_291_p2 = (shl_ln107_1_fu_269_p2 | or_ln108_4_fu_285_p2);

assign or_ln108_2_fu_347_p2 = (shl_ln107_2_fu_319_p2 | or_ln108_5_fu_341_p2);

assign or_ln108_3_fu_403_p2 = (shl_ln107_3_fu_375_p2 | or_ln108_6_fu_397_p2);

assign or_ln108_4_fu_285_p2 = (shl_ln108_1_fu_279_p2 | collisions_5_0_reg_78);

assign or_ln108_5_fu_341_p2 = (shl_ln108_2_fu_335_p2 | collisions_5_1_reg_90);

assign or_ln108_6_fu_397_p2 = (shl_ln108_3_fu_391_p2 | collisions_5_2_reg_101);

assign or_ln108_fu_241_p2 = (shl_ln108_fu_235_p2 | shl_ln107_fu_219_p2);

assign shl_ln107_1_fu_269_p2 = 64'd1 << zext_ln107_1_fu_265_p1;

assign shl_ln107_2_fu_319_p2 = 64'd1 << zext_ln107_2_fu_315_p1;

assign shl_ln107_3_fu_375_p2 = 64'd1 << zext_ln107_3_fu_371_p1;

assign shl_ln107_fu_219_p2 = 64'd1 << zext_ln107_fu_215_p1;

assign shl_ln108_1_fu_279_p2 = 64'd1 << zext_ln108_1_fu_275_p1;

assign shl_ln108_2_fu_335_p2 = 64'd1 << zext_ln108_2_fu_331_p1;

assign shl_ln108_3_fu_391_p2 = 64'd1 << zext_ln108_3_fu_387_p1;

assign shl_ln108_fu_235_p2 = 64'd1 << zext_ln108_fu_231_p1;

assign shl_ln80_1_fu_247_p2 = reg_199 << 32'd2;

assign shl_ln80_2_fu_297_p2 = reg_199 << 32'd2;

assign shl_ln80_3_fu_353_p2 = reg_199 << 32'd2;

assign shl_ln80_fu_203_p2 = reg_199 << 32'd2;

assign zext_ln107_1_fu_265_p1 = add_ln80_3_fu_259_p2;

assign zext_ln107_2_fu_315_p1 = add_ln80_5_fu_309_p2;

assign zext_ln107_3_fu_371_p1 = add_ln80_8_fu_365_p2;

assign zext_ln107_fu_215_p1 = add_ln80_fu_209_p2;

assign zext_ln108_1_fu_275_p1 = add_ln80_2_fu_253_p2;

assign zext_ln108_2_fu_331_p1 = add_ln80_6_fu_325_p2;

assign zext_ln108_3_fu_387_p1 = add_ln80_9_fu_381_p2;

assign zext_ln108_fu_231_p1 = add_ln80_1_fu_225_p2;

endmodule //checkAxis_2
