

================================================================
== Vivado HLS Report for 'checkAxis_0'
================================================================
* Date:           Sun Mar 29 20:57:51 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        honeybee_proj
* Solution:       HBE
* Product family: zynq
* Target device:  xc7z030i-fbg484-2L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.478 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      204|      204| 2.040 us | 2.040 us |  204|  204|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%edge_p2_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_z)" [src/honeybee.c:103]   --->   Operation 18 'read' 'edge_p2_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%edge_p2_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_y)" [src/honeybee.c:103]   --->   Operation 19 'read' 'edge_p2_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%edge_p2_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_x)" [src/honeybee.c:103]   --->   Operation 20 'read' 'edge_p2_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%edge_p1_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_z)" [src/honeybee.c:103]   --->   Operation 21 'read' 'edge_p1_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%edge_p1_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_y)" [src/honeybee.c:103]   --->   Operation 22 'read' 'edge_p1_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%edge_p1_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_x)" [src/honeybee.c:103]   --->   Operation 23 'read' 'edge_p1_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [2/2] (8.75ns)   --->   "%call_ret = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 0.000000e+00)" [src/honeybee.c:103]   --->   Operation 24 'call' 'call_ret' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 8.58>
ST_2 : Operation 25 [1/2] (8.58ns)   --->   "%call_ret = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 0.000000e+00)" [src/honeybee.c:103]   --->   Operation 25 'call' 'call_ret' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%p_0 = extractvalue { float, float, float } %call_ret, 0" [src/honeybee.c:103]   --->   Operation 26 'extractvalue' 'p_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%p_1 = extractvalue { float, float, float } %call_ret, 1" [src/honeybee.c:103]   --->   Operation 27 'extractvalue' 'p_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%p_2 = extractvalue { float, float, float } %call_ret, 2" [src/honeybee.c:103]   --->   Operation 28 'extractvalue' 'p_2' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.28>
ST_3 : Operation 29 [2/2] (5.28ns)   --->   "%tmp_s = call fastcc i1 @pointOnSegment(float %p_0, float %p_2, float %p_1, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 29 'call' 'tmp_s' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 8.58>
ST_4 : Operation 30 [1/2] (7.39ns)   --->   "%tmp_s = call fastcc i1 @pointOnSegment(float %p_0, float %p_2, float %p_1, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 30 'call' 'tmp_s' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 31 [1/1] (0.46ns)   --->   "br i1 %tmp_s, label %0, label %._crit_edge20.0" [src/honeybee.c:114]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.46>
ST_4 : Operation 32 [1/1] (8.58ns)   --->   "%i_assign = call fastcc i32 @__hls_fptosi_float_i(float %p_0)" [src/honeybee.c:115]   --->   Operation 32 'call' 'i_assign' <Predicate = (tmp_s)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 33 [1/1] (8.58ns)   --->   "%k_assign = call fastcc i32 @__hls_fptosi_float_i(float %p_1)" [src/honeybee.c:115]   --->   Operation 33 'call' 'k_assign' <Predicate = (tmp_s)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%shl_ln80 = shl i32 %k_assign, 4" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 34 'shl' 'shl_ln80' <Predicate = (tmp_s)> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (1.89ns)   --->   "%add_ln80 = add i32 %i_assign, %shl_ln80" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 35 'add' 'add_ln80' <Predicate = (tmp_s)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node or_ln116)   --->   "%zext_ln115 = zext i32 %add_ln80 to i64" [src/honeybee.c:115]   --->   Operation 36 'zext' 'zext_ln115' <Predicate = (tmp_s)> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node or_ln116)   --->   "%shl_ln115 = shl i64 1, %zext_ln115" [src/honeybee.c:115]   --->   Operation 37 'shl' 'shl_ln115' <Predicate = (tmp_s)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 38 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_18 = add i32 -4, %shl_ln80" [src/honeybee.c:80->src/honeybee.c:116]   --->   Operation 38 'add' 'add_ln80_18' <Predicate = (tmp_s)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 39 [1/1] (3.58ns) (root node of TernaryAdder)   --->   "%add_ln80_19 = add i32 %add_ln80_18, %i_assign" [src/honeybee.c:80->src/honeybee.c:116]   --->   Operation 39 'add' 'add_ln80_19' <Predicate = (tmp_s)> <Delay = 3.58> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node or_ln116)   --->   "%zext_ln116 = zext i32 %add_ln80_19 to i64" [src/honeybee.c:116]   --->   Operation 40 'zext' 'zext_ln116' <Predicate = (tmp_s)> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node or_ln116)   --->   "%shl_ln116 = shl i64 1, %zext_ln116" [src/honeybee.c:116]   --->   Operation 41 'shl' 'shl_ln116' <Predicate = (tmp_s)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (2.93ns) (out node of the LUT)   --->   "%or_ln116 = or i64 %shl_ln115, %shl_ln116" [src/honeybee.c:116]   --->   Operation 42 'or' 'or_ln116' <Predicate = (tmp_s)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (0.46ns)   --->   "br label %._crit_edge20.0" [src/honeybee.c:117]   --->   Operation 43 'br' <Predicate = (tmp_s)> <Delay = 0.46>
ST_5 : Operation 44 [2/2] (8.75ns)   --->   "%call_ret_1 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 1.000000e+00)" [src/honeybee.c:103]   --->   Operation 44 'call' 'call_ret_1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 8.58>
ST_6 : Operation 45 [1/2] (8.58ns)   --->   "%call_ret_1 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 1.000000e+00)" [src/honeybee.c:103]   --->   Operation 45 'call' 'call_ret_1' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 46 [1/1] (0.00ns)   --->   "%p_0_0_1 = extractvalue { float, float, float } %call_ret_1, 0" [src/honeybee.c:103]   --->   Operation 46 'extractvalue' 'p_0_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 47 [1/1] (0.00ns)   --->   "%p_1_0_1 = extractvalue { float, float, float } %call_ret_1, 1" [src/honeybee.c:103]   --->   Operation 47 'extractvalue' 'p_1_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 48 [1/1] (0.00ns)   --->   "%p_2_0_1 = extractvalue { float, float, float } %call_ret_1, 2" [src/honeybee.c:103]   --->   Operation 48 'extractvalue' 'p_2_0_1' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 5.28>
ST_7 : Operation 49 [2/2] (5.28ns)   --->   "%tmp_42_1 = call fastcc i1 @pointOnSegment(float %p_0_0_1, float %p_2_0_1, float %p_1_0_1, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 49 'call' 'tmp_42_1' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 8.58>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "%collisions_5_0 = phi i64 [ %or_ln116, %0 ], [ 0, %._crit_edge ]" [src/honeybee.c:116]   --->   Operation 50 'phi' 'collisions_5_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 51 [1/2] (7.39ns)   --->   "%tmp_42_1 = call fastcc i1 @pointOnSegment(float %p_0_0_1, float %p_2_0_1, float %p_1_0_1, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 51 'call' 'tmp_42_1' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 52 [1/1] (0.46ns)   --->   "br i1 %tmp_42_1, label %1, label %._crit_edge20.1" [src/honeybee.c:114]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.46>
ST_8 : Operation 53 [1/1] (8.58ns)   --->   "%i_assign_4 = call fastcc i32 @__hls_fptosi_float_i(float %p_0_0_1)" [src/honeybee.c:115]   --->   Operation 53 'call' 'i_assign_4' <Predicate = (tmp_42_1)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 54 [1/1] (8.58ns)   --->   "%k_assign_4 = call fastcc i32 @__hls_fptosi_float_i(float %p_1_0_1)" [src/honeybee.c:115]   --->   Operation 54 'call' 'k_assign_4' <Predicate = (tmp_42_1)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 55 [1/1] (0.00ns)   --->   "%shl_ln80_11 = shl i32 %k_assign_4, 4" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 55 'shl' 'shl_ln80_11' <Predicate = (tmp_42_1)> <Delay = 0.00>
ST_9 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_20)   --->   "%or_ln80 = or i32 %shl_ln80_11, 4" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 56 'or' 'or_ln80' <Predicate = (tmp_42_1)> <Delay = 0.00>
ST_9 : Operation 57 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_20 = add i32 %or_ln80, %i_assign_4" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 57 'add' 'add_ln80_20' <Predicate = (tmp_42_1)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_1)   --->   "%zext_ln115_1 = zext i32 %add_ln80_20 to i64" [src/honeybee.c:115]   --->   Operation 58 'zext' 'zext_ln115_1' <Predicate = (tmp_42_1)> <Delay = 0.00>
ST_9 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_1)   --->   "%shl_ln115_1 = shl i64 1, %zext_ln115_1" [src/honeybee.c:115]   --->   Operation 59 'shl' 'shl_ln115_1' <Predicate = (tmp_42_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 60 [1/1] (1.89ns)   --->   "%add_ln80_21 = add i32 %i_assign_4, %shl_ln80_11" [src/honeybee.c:80->src/honeybee.c:116]   --->   Operation 60 'add' 'add_ln80_21' <Predicate = (tmp_42_1)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_1)   --->   "%zext_ln116_1 = zext i32 %add_ln80_21 to i64" [src/honeybee.c:116]   --->   Operation 61 'zext' 'zext_ln116_1' <Predicate = (tmp_42_1)> <Delay = 0.00>
ST_9 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_1)   --->   "%shl_ln116_1 = shl i64 1, %zext_ln116_1" [src/honeybee.c:116]   --->   Operation 62 'shl' 'shl_ln116_1' <Predicate = (tmp_42_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_1)   --->   "%or_ln116_4 = or i64 %collisions_5_0, %shl_ln116_1" [src/honeybee.c:116]   --->   Operation 63 'or' 'or_ln116_4' <Predicate = (tmp_42_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 64 [1/1] (2.93ns) (out node of the LUT)   --->   "%or_ln116_1 = or i64 %or_ln116_4, %shl_ln115_1" [src/honeybee.c:116]   --->   Operation 64 'or' 'or_ln116_1' <Predicate = (tmp_42_1)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 65 [1/1] (0.46ns)   --->   "br label %._crit_edge20.1" [src/honeybee.c:117]   --->   Operation 65 'br' <Predicate = (tmp_42_1)> <Delay = 0.46>
ST_9 : Operation 66 [2/2] (8.75ns)   --->   "%call_ret_2 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 2.000000e+00)" [src/honeybee.c:103]   --->   Operation 66 'call' 'call_ret_2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 8.58>
ST_10 : Operation 67 [1/1] (0.00ns)   --->   "%collisions_5_1 = phi i64 [ %or_ln116_1, %1 ], [ %collisions_5_0, %._crit_edge20.0 ]" [src/honeybee.c:116]   --->   Operation 67 'phi' 'collisions_5_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 68 [1/2] (8.58ns)   --->   "%call_ret_2 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 2.000000e+00)" [src/honeybee.c:103]   --->   Operation 68 'call' 'call_ret_2' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 69 [1/1] (0.00ns)   --->   "%p_0_0_2 = extractvalue { float, float, float } %call_ret_2, 0" [src/honeybee.c:103]   --->   Operation 69 'extractvalue' 'p_0_0_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 70 [1/1] (0.00ns)   --->   "%p_1_0_2 = extractvalue { float, float, float } %call_ret_2, 1" [src/honeybee.c:103]   --->   Operation 70 'extractvalue' 'p_1_0_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%p_2_0_2 = extractvalue { float, float, float } %call_ret_2, 2" [src/honeybee.c:103]   --->   Operation 71 'extractvalue' 'p_2_0_2' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 5.28>
ST_11 : Operation 72 [2/2] (5.28ns)   --->   "%tmp_42_2 = call fastcc i1 @pointOnSegment(float %p_0_0_2, float %p_2_0_2, float %p_1_0_2, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 72 'call' 'tmp_42_2' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 8.58>
ST_12 : Operation 73 [1/2] (7.39ns)   --->   "%tmp_42_2 = call fastcc i1 @pointOnSegment(float %p_0_0_2, float %p_2_0_2, float %p_1_0_2, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 73 'call' 'tmp_42_2' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 74 [1/1] (0.46ns)   --->   "br i1 %tmp_42_2, label %2, label %._crit_edge20.2" [src/honeybee.c:114]   --->   Operation 74 'br' <Predicate = true> <Delay = 0.46>
ST_12 : Operation 75 [1/1] (8.58ns)   --->   "%i_assign_5 = call fastcc i32 @__hls_fptosi_float_i(float %p_0_0_2)" [src/honeybee.c:115]   --->   Operation 75 'call' 'i_assign_5' <Predicate = (tmp_42_2)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 76 [1/1] (8.58ns)   --->   "%k_assign_5 = call fastcc i32 @__hls_fptosi_float_i(float %p_1_0_2)" [src/honeybee.c:115]   --->   Operation 76 'call' 'k_assign_5' <Predicate = (tmp_42_2)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 77 [1/1] (0.00ns)   --->   "%shl_ln80_12 = shl i32 %k_assign_5, 4" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 77 'shl' 'shl_ln80_12' <Predicate = (tmp_42_2)> <Delay = 0.00>
ST_13 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_22)   --->   "%or_ln80_5 = or i32 %shl_ln80_12, 8" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 78 'or' 'or_ln80_5' <Predicate = (tmp_42_2)> <Delay = 0.00>
ST_13 : Operation 79 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_22 = add i32 %or_ln80_5, %i_assign_5" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 79 'add' 'add_ln80_22' <Predicate = (tmp_42_2)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_2)   --->   "%zext_ln115_2 = zext i32 %add_ln80_22 to i64" [src/honeybee.c:115]   --->   Operation 80 'zext' 'zext_ln115_2' <Predicate = (tmp_42_2)> <Delay = 0.00>
ST_13 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_2)   --->   "%shl_ln115_2 = shl i64 1, %zext_ln115_2" [src/honeybee.c:115]   --->   Operation 81 'shl' 'shl_ln115_2' <Predicate = (tmp_42_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_23)   --->   "%or_ln80_6 = or i32 %shl_ln80_12, 4" [src/honeybee.c:80->src/honeybee.c:116]   --->   Operation 82 'or' 'or_ln80_6' <Predicate = (tmp_42_2)> <Delay = 0.00>
ST_13 : Operation 83 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_23 = add i32 %or_ln80_6, %i_assign_5" [src/honeybee.c:80->src/honeybee.c:116]   --->   Operation 83 'add' 'add_ln80_23' <Predicate = (tmp_42_2)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_2)   --->   "%zext_ln116_2 = zext i32 %add_ln80_23 to i64" [src/honeybee.c:116]   --->   Operation 84 'zext' 'zext_ln116_2' <Predicate = (tmp_42_2)> <Delay = 0.00>
ST_13 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_2)   --->   "%shl_ln116_2 = shl i64 1, %zext_ln116_2" [src/honeybee.c:116]   --->   Operation 85 'shl' 'shl_ln116_2' <Predicate = (tmp_42_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_2)   --->   "%or_ln116_5 = or i64 %collisions_5_1, %shl_ln116_2" [src/honeybee.c:116]   --->   Operation 86 'or' 'or_ln116_5' <Predicate = (tmp_42_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 87 [1/1] (2.93ns) (out node of the LUT)   --->   "%or_ln116_2 = or i64 %or_ln116_5, %shl_ln115_2" [src/honeybee.c:116]   --->   Operation 87 'or' 'or_ln116_2' <Predicate = (tmp_42_2)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 88 [1/1] (0.46ns)   --->   "br label %._crit_edge20.2" [src/honeybee.c:117]   --->   Operation 88 'br' <Predicate = (tmp_42_2)> <Delay = 0.46>
ST_13 : Operation 89 [2/2] (8.75ns)   --->   "%call_ret_3 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 3.000000e+00)" [src/honeybee.c:103]   --->   Operation 89 'call' 'call_ret_3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 8.58>
ST_14 : Operation 90 [1/1] (0.00ns)   --->   "%collisions_5_2 = phi i64 [ %or_ln116_2, %2 ], [ %collisions_5_1, %._crit_edge20.1 ]" [src/honeybee.c:116]   --->   Operation 90 'phi' 'collisions_5_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 91 [1/2] (8.58ns)   --->   "%call_ret_3 = call fastcc { float, float, float } @lineIntersectsPlane(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float 3.000000e+00)" [src/honeybee.c:103]   --->   Operation 91 'call' 'call_ret_3' <Predicate = true> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 92 [1/1] (0.00ns)   --->   "%p_0_0_3 = extractvalue { float, float, float } %call_ret_3, 0" [src/honeybee.c:103]   --->   Operation 92 'extractvalue' 'p_0_0_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 93 [1/1] (0.00ns)   --->   "%p_1_0_3 = extractvalue { float, float, float } %call_ret_3, 1" [src/honeybee.c:103]   --->   Operation 93 'extractvalue' 'p_1_0_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 94 [1/1] (0.00ns)   --->   "%p_2_0_3 = extractvalue { float, float, float } %call_ret_3, 2" [src/honeybee.c:103]   --->   Operation 94 'extractvalue' 'p_2_0_3' <Predicate = true> <Delay = 0.00>

State 15 <SV = 14> <Delay = 5.28>
ST_15 : Operation 95 [2/2] (5.28ns)   --->   "%tmp_42_3 = call fastcc i1 @pointOnSegment(float %p_0_0_3, float %p_2_0_3, float %p_1_0_3, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 95 'call' 'tmp_42_3' <Predicate = true> <Delay = 5.28> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 8.58>
ST_16 : Operation 96 [1/2] (7.39ns)   --->   "%tmp_42_3 = call fastcc i1 @pointOnSegment(float %p_0_0_3, float %p_2_0_3, float %p_1_0_3, float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read)" [src/honeybee.c:114]   --->   Operation 96 'call' 'tmp_42_3' <Predicate = true> <Delay = 7.39> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 97 [1/1] (0.46ns)   --->   "br i1 %tmp_42_3, label %3, label %._crit_edge20.3" [src/honeybee.c:114]   --->   Operation 97 'br' <Predicate = true> <Delay = 0.46>
ST_16 : Operation 98 [1/1] (8.58ns)   --->   "%i_assign_6 = call fastcc i32 @__hls_fptosi_float_i(float %p_0_0_3)" [src/honeybee.c:115]   --->   Operation 98 'call' 'i_assign_6' <Predicate = (tmp_42_3)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 99 [1/1] (8.58ns)   --->   "%k_assign_6 = call fastcc i32 @__hls_fptosi_float_i(float %p_1_0_3)" [src/honeybee.c:115]   --->   Operation 99 'call' 'k_assign_6' <Predicate = (tmp_42_3)> <Delay = 8.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 5.29>
ST_17 : Operation 100 [1/1] (0.00ns)   --->   "%shl_ln80_13 = shl i32 %k_assign_6, 4" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 100 'shl' 'shl_ln80_13' <Predicate = (tmp_42_3)> <Delay = 0.00>
ST_17 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_24)   --->   "%or_ln80_7 = or i32 %shl_ln80_13, 12" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 101 'or' 'or_ln80_7' <Predicate = (tmp_42_3)> <Delay = 0.00>
ST_17 : Operation 102 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_24 = add i32 %or_ln80_7, %i_assign_6" [src/honeybee.c:80->src/honeybee.c:115]   --->   Operation 102 'add' 'add_ln80_24' <Predicate = (tmp_42_3)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_3)   --->   "%zext_ln115_3 = zext i32 %add_ln80_24 to i64" [src/honeybee.c:115]   --->   Operation 103 'zext' 'zext_ln115_3' <Predicate = (tmp_42_3)> <Delay = 0.00>
ST_17 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_3)   --->   "%shl_ln115_3 = shl i64 1, %zext_ln115_3" [src/honeybee.c:115]   --->   Operation 104 'shl' 'shl_ln115_3' <Predicate = (tmp_42_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_25)   --->   "%or_ln80_8 = or i32 %shl_ln80_13, 8" [src/honeybee.c:80->src/honeybee.c:116]   --->   Operation 105 'or' 'or_ln80_8' <Predicate = (tmp_42_3)> <Delay = 0.00>
ST_17 : Operation 106 [1/1] (1.89ns) (out node of the LUT)   --->   "%add_ln80_25 = add i32 %or_ln80_8, %i_assign_6" [src/honeybee.c:80->src/honeybee.c:116]   --->   Operation 106 'add' 'add_ln80_25' <Predicate = (tmp_42_3)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_3)   --->   "%zext_ln116_3 = zext i32 %add_ln80_25 to i64" [src/honeybee.c:116]   --->   Operation 107 'zext' 'zext_ln116_3' <Predicate = (tmp_42_3)> <Delay = 0.00>
ST_17 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_3)   --->   "%shl_ln116_3 = shl i64 1, %zext_ln116_3" [src/honeybee.c:116]   --->   Operation 108 'shl' 'shl_ln116_3' <Predicate = (tmp_42_3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node or_ln116_3)   --->   "%or_ln116_6 = or i64 %collisions_5_2, %shl_ln116_3" [src/honeybee.c:116]   --->   Operation 109 'or' 'or_ln116_6' <Predicate = (tmp_42_3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 110 [1/1] (2.93ns) (out node of the LUT)   --->   "%or_ln116_3 = or i64 %or_ln116_6, %shl_ln115_3" [src/honeybee.c:116]   --->   Operation 110 'or' 'or_ln116_3' <Predicate = (tmp_42_3)> <Delay = 2.93> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 111 [1/1] (0.46ns)   --->   "br label %._crit_edge20.3" [src/honeybee.c:117]   --->   Operation 111 'br' <Predicate = (tmp_42_3)> <Delay = 0.46>
ST_17 : Operation 112 [1/1] (0.00ns)   --->   "%collisions_5_3 = phi i64 [ %or_ln116_3, %3 ], [ %collisions_5_2, %._crit_edge20.2 ]" [src/honeybee.c:116]   --->   Operation 112 'phi' 'collisions_5_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 113 [1/1] (0.00ns)   --->   "ret i64 %collisions_5_3" [src/honeybee.c:130]   --->   Operation 113 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.75ns
The critical path consists of the following:
	wire read on port 'edge_p2_z' (src/honeybee.c:103) [7]  (0 ns)
	'call' operation ('call_ret', src/honeybee.c:103) to 'lineIntersectsPlane' [13]  (8.75 ns)

 <State 2>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret', src/honeybee.c:103) to 'lineIntersectsPlane' [13]  (8.59 ns)

 <State 3>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_s', src/honeybee.c:114) to 'pointOnSegment' [17]  (5.28 ns)

 <State 4>: 8.58ns
The critical path consists of the following:
	'call' operation ('i', src/honeybee.c:115) to '__hls_fptosi_float_i' [20]  (8.58 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ret_1', src/honeybee.c:103) to 'lineIntersectsPlane' [34]  (8.75 ns)

 <State 6>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret_1', src/honeybee.c:103) to 'lineIntersectsPlane' [34]  (8.59 ns)

 <State 7>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_42_1', src/honeybee.c:114) to 'pointOnSegment' [38]  (5.28 ns)

 <State 8>: 8.58ns
The critical path consists of the following:
	'call' operation ('i', src/honeybee.c:115) to '__hls_fptosi_float_i' [41]  (8.58 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ret_2', src/honeybee.c:103) to 'lineIntersectsPlane' [56]  (8.75 ns)

 <State 10>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret_2', src/honeybee.c:103) to 'lineIntersectsPlane' [56]  (8.59 ns)

 <State 11>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_42_2', src/honeybee.c:114) to 'pointOnSegment' [60]  (5.28 ns)

 <State 12>: 8.58ns
The critical path consists of the following:
	'call' operation ('i', src/honeybee.c:115) to '__hls_fptosi_float_i' [63]  (8.58 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ret_3', src/honeybee.c:103) to 'lineIntersectsPlane' [79]  (8.75 ns)

 <State 14>: 8.59ns
The critical path consists of the following:
	'call' operation ('call_ret_3', src/honeybee.c:103) to 'lineIntersectsPlane' [79]  (8.59 ns)

 <State 15>: 5.28ns
The critical path consists of the following:
	'call' operation ('tmp_42_3', src/honeybee.c:114) to 'pointOnSegment' [83]  (5.28 ns)

 <State 16>: 8.58ns
The critical path consists of the following:
	'call' operation ('i', src/honeybee.c:115) to '__hls_fptosi_float_i' [86]  (8.58 ns)

 <State 17>: 5.3ns
The critical path consists of the following:
	'shl' operation ('shl_ln80_13', src/honeybee.c:80->src/honeybee.c:115) [88]  (0 ns)
	'or' operation ('or_ln80_7', src/honeybee.c:80->src/honeybee.c:115) [89]  (0 ns)
	'add' operation ('add_ln80_24', src/honeybee.c:80->src/honeybee.c:115) [90]  (1.9 ns)
	'shl' operation ('shl_ln115_3', src/honeybee.c:115) [92]  (0 ns)
	'or' operation ('or_ln116_3', src/honeybee.c:116) [98]  (2.94 ns)
	multiplexor before 'phi' operation ('collisions_5_3', src/honeybee.c:116) with incoming values : ('or_ln116', src/honeybee.c:116) ('or_ln116_1', src/honeybee.c:116) ('or_ln116_2', src/honeybee.c:116) ('or_ln116_3', src/honeybee.c:116) [101]  (0.466 ns)
	'phi' operation ('collisions_5_3', src/honeybee.c:116) with incoming values : ('or_ln116', src/honeybee.c:116) ('or_ln116_1', src/honeybee.c:116) ('or_ln116_2', src/honeybee.c:116) ('or_ln116_3', src/honeybee.c:116) [101]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
