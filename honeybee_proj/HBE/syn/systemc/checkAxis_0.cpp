// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "checkAxis_0.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic checkAxis_0::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic checkAxis_0::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> checkAxis_0::ap_ST_fsm_state1 = "1";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state2 = "10";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state3 = "100";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state4 = "1000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state5 = "10000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state6 = "100000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> checkAxis_0::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> checkAxis_0::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> checkAxis_0::ap_const_lv32_1 = "1";
const sc_lv<32> checkAxis_0::ap_const_lv32_5 = "101";
const sc_lv<32> checkAxis_0::ap_const_lv32_9 = "1001";
const sc_lv<32> checkAxis_0::ap_const_lv32_D = "1101";
const sc_lv<32> checkAxis_0::ap_const_lv32_3 = "11";
const sc_lv<1> checkAxis_0::ap_const_lv1_1 = "1";
const sc_lv<32> checkAxis_0::ap_const_lv32_7 = "111";
const sc_lv<32> checkAxis_0::ap_const_lv32_B = "1011";
const sc_lv<32> checkAxis_0::ap_const_lv32_F = "1111";
const sc_lv<32> checkAxis_0::ap_const_lv32_4 = "100";
const sc_lv<32> checkAxis_0::ap_const_lv32_8 = "1000";
const sc_lv<32> checkAxis_0::ap_const_lv32_C = "1100";
const sc_lv<64> checkAxis_0::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> checkAxis_0::ap_const_lv1_0 = "0";
const sc_lv<32> checkAxis_0::ap_const_lv32_10 = "10000";
const sc_lv<32> checkAxis_0::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> checkAxis_0::ap_const_lv32_40000000 = "1000000000000000000000000000000";
const sc_lv<32> checkAxis_0::ap_const_lv32_40400000 = "1000000010000000000000000000000";
const sc_lv<32> checkAxis_0::ap_const_lv32_2 = "10";
const sc_lv<32> checkAxis_0::ap_const_lv32_6 = "110";
const sc_lv<32> checkAxis_0::ap_const_lv32_A = "1010";
const sc_lv<32> checkAxis_0::ap_const_lv32_E = "1110";
const sc_lv<64> checkAxis_0::ap_const_lv64_1 = "1";
const sc_lv<32> checkAxis_0::ap_const_lv32_FFFFFFFC = "11111111111111111111111111111100";
const bool checkAxis_0::ap_const_boolean_1 = true;

checkAxis_0::checkAxis_0(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_lineIntersectsPlane_fu_120 = new lineIntersectsPlane("grp_lineIntersectsPlane_fu_120");
    grp_lineIntersectsPlane_fu_120->ap_clk(ap_clk);
    grp_lineIntersectsPlane_fu_120->ap_rst(ap_rst);
    grp_lineIntersectsPlane_fu_120->ap_start(grp_lineIntersectsPlane_fu_120_ap_start);
    grp_lineIntersectsPlane_fu_120->ap_done(grp_lineIntersectsPlane_fu_120_ap_done);
    grp_lineIntersectsPlane_fu_120->ap_idle(grp_lineIntersectsPlane_fu_120_ap_idle);
    grp_lineIntersectsPlane_fu_120->ap_ready(grp_lineIntersectsPlane_fu_120_ap_ready);
    grp_lineIntersectsPlane_fu_120->edge_p1_x(edge_p1_x);
    grp_lineIntersectsPlane_fu_120->edge_p1_y(edge_p1_y);
    grp_lineIntersectsPlane_fu_120->edge_p1_z(edge_p1_z);
    grp_lineIntersectsPlane_fu_120->edge_p2_x(edge_p2_x);
    grp_lineIntersectsPlane_fu_120->edge_p2_y(edge_p2_y);
    grp_lineIntersectsPlane_fu_120->edge_p2_z(edge_p2_z);
    grp_lineIntersectsPlane_fu_120->plane(grp_lineIntersectsPlane_fu_120_plane);
    grp_lineIntersectsPlane_fu_120->ap_return_0(grp_lineIntersectsPlane_fu_120_ap_return_0);
    grp_lineIntersectsPlane_fu_120->ap_return_1(grp_lineIntersectsPlane_fu_120_ap_return_1);
    grp_lineIntersectsPlane_fu_120->ap_return_2(grp_lineIntersectsPlane_fu_120_ap_return_2);
    grp_pointOnSegment_fu_141 = new pointOnSegment("grp_pointOnSegment_fu_141");
    grp_pointOnSegment_fu_141->ap_clk(ap_clk);
    grp_pointOnSegment_fu_141->ap_rst(ap_rst);
    grp_pointOnSegment_fu_141->ap_start(grp_pointOnSegment_fu_141_ap_start);
    grp_pointOnSegment_fu_141->ap_done(grp_pointOnSegment_fu_141_ap_done);
    grp_pointOnSegment_fu_141->ap_idle(grp_pointOnSegment_fu_141_ap_idle);
    grp_pointOnSegment_fu_141->ap_ready(grp_pointOnSegment_fu_141_ap_ready);
    grp_pointOnSegment_fu_141->p_x(reg_176);
    grp_pointOnSegment_fu_141->p_y(reg_188);
    grp_pointOnSegment_fu_141->p_z(reg_182);
    grp_pointOnSegment_fu_141->e_p1_x(edge_p1_x);
    grp_pointOnSegment_fu_141->e_p1_y(edge_p1_z);
    grp_pointOnSegment_fu_141->e_p1_z(edge_p1_y);
    grp_pointOnSegment_fu_141->e_p2_x(edge_p2_x);
    grp_pointOnSegment_fu_141->e_p2_y(edge_p2_z);
    grp_pointOnSegment_fu_141->e_p2_z(edge_p2_y);
    grp_pointOnSegment_fu_141->ap_return(grp_pointOnSegment_fu_141_ap_return);
    grp_p_hls_fptosi_float_i_fu_154 = new p_hls_fptosi_float_i("grp_p_hls_fptosi_float_i_fu_154");
    grp_p_hls_fptosi_float_i_fu_154->ap_ready(grp_p_hls_fptosi_float_i_fu_154_ap_ready);
    grp_p_hls_fptosi_float_i_fu_154->x(reg_176);
    grp_p_hls_fptosi_float_i_fu_154->ap_return(grp_p_hls_fptosi_float_i_fu_154_ap_return);
    grp_p_hls_fptosi_float_i_fu_159 = new p_hls_fptosi_float_i("grp_p_hls_fptosi_float_i_fu_159");
    grp_p_hls_fptosi_float_i_fu_159->ap_ready(grp_p_hls_fptosi_float_i_fu_159_ap_ready);
    grp_p_hls_fptosi_float_i_fu_159->x(reg_182);
    grp_p_hls_fptosi_float_i_fu_159->ap_return(grp_p_hls_fptosi_float_i_fu_159_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln80_18_fu_223_p2);
    sensitive << ( shl_ln80_fu_201_p2 );

    SC_METHOD(thread_add_ln80_19_fu_229_p2);
    sensitive << ( reg_193 );
    sensitive << ( add_ln80_18_fu_223_p2 );

    SC_METHOD(thread_add_ln80_20_fu_263_p2);
    sensitive << ( reg_193 );
    sensitive << ( or_ln80_fu_257_p2 );

    SC_METHOD(thread_add_ln80_21_fu_279_p2);
    sensitive << ( reg_193 );
    sensitive << ( shl_ln80_11_fu_251_p2 );

    SC_METHOD(thread_add_ln80_22_fu_319_p2);
    sensitive << ( reg_193 );
    sensitive << ( or_ln80_5_fu_313_p2 );

    SC_METHOD(thread_add_ln80_23_fu_341_p2);
    sensitive << ( reg_193 );
    sensitive << ( or_ln80_6_fu_335_p2 );

    SC_METHOD(thread_add_ln80_24_fu_381_p2);
    sensitive << ( reg_193 );
    sensitive << ( or_ln80_7_fu_375_p2 );

    SC_METHOD(thread_add_ln80_25_fu_403_p2);
    sensitive << ( reg_193 );
    sensitive << ( or_ln80_8_fu_397_p2 );

    SC_METHOD(thread_add_ln80_fu_207_p2);
    sensitive << ( reg_193 );
    sensitive << ( shl_ln80_fu_201_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_collisions_5_3_phi_fu_113_p4);
    sensitive << ( tmp_42_3_reg_495 );
    sensitive << ( or_ln116_3_fu_425_p2 );
    sensitive << ( collisions_5_3_reg_110 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_collisions_5_3_phi_fu_113_p4 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_grp_lineIntersectsPlane_fu_120_ap_start);
    sensitive << ( grp_lineIntersectsPlane_fu_120_ap_start_reg );

    SC_METHOD(thread_grp_lineIntersectsPlane_fu_120_plane);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_pointOnSegment_fu_141_ap_start);
    sensitive << ( grp_pointOnSegment_fu_141_ap_start_reg );

    SC_METHOD(thread_or_ln116_1_fu_301_p2);
    sensitive << ( or_ln116_4_fu_295_p2 );
    sensitive << ( shl_ln115_1_fu_273_p2 );

    SC_METHOD(thread_or_ln116_2_fu_363_p2);
    sensitive << ( or_ln116_5_fu_357_p2 );
    sensitive << ( shl_ln115_2_fu_329_p2 );

    SC_METHOD(thread_or_ln116_3_fu_425_p2);
    sensitive << ( or_ln116_6_fu_419_p2 );
    sensitive << ( shl_ln115_3_fu_391_p2 );

    SC_METHOD(thread_or_ln116_4_fu_295_p2);
    sensitive << ( collisions_5_0_reg_76 );
    sensitive << ( shl_ln116_1_fu_289_p2 );

    SC_METHOD(thread_or_ln116_5_fu_357_p2);
    sensitive << ( collisions_5_1_reg_88 );
    sensitive << ( shl_ln116_2_fu_351_p2 );

    SC_METHOD(thread_or_ln116_6_fu_419_p2);
    sensitive << ( collisions_5_2_reg_99 );
    sensitive << ( shl_ln116_3_fu_413_p2 );

    SC_METHOD(thread_or_ln116_fu_245_p2);
    sensitive << ( shl_ln115_fu_217_p2 );
    sensitive << ( shl_ln116_fu_239_p2 );

    SC_METHOD(thread_or_ln80_5_fu_313_p2);
    sensitive << ( shl_ln80_12_fu_307_p2 );

    SC_METHOD(thread_or_ln80_6_fu_335_p2);
    sensitive << ( shl_ln80_12_fu_307_p2 );

    SC_METHOD(thread_or_ln80_7_fu_375_p2);
    sensitive << ( shl_ln80_13_fu_369_p2 );

    SC_METHOD(thread_or_ln80_8_fu_397_p2);
    sensitive << ( shl_ln80_13_fu_369_p2 );

    SC_METHOD(thread_or_ln80_fu_257_p2);
    sensitive << ( shl_ln80_11_fu_251_p2 );

    SC_METHOD(thread_shl_ln115_1_fu_273_p2);
    sensitive << ( zext_ln115_1_fu_269_p1 );

    SC_METHOD(thread_shl_ln115_2_fu_329_p2);
    sensitive << ( zext_ln115_2_fu_325_p1 );

    SC_METHOD(thread_shl_ln115_3_fu_391_p2);
    sensitive << ( zext_ln115_3_fu_387_p1 );

    SC_METHOD(thread_shl_ln115_fu_217_p2);
    sensitive << ( zext_ln115_fu_213_p1 );

    SC_METHOD(thread_shl_ln116_1_fu_289_p2);
    sensitive << ( zext_ln116_1_fu_285_p1 );

    SC_METHOD(thread_shl_ln116_2_fu_351_p2);
    sensitive << ( zext_ln116_2_fu_347_p1 );

    SC_METHOD(thread_shl_ln116_3_fu_413_p2);
    sensitive << ( zext_ln116_3_fu_409_p1 );

    SC_METHOD(thread_shl_ln116_fu_239_p2);
    sensitive << ( zext_ln116_fu_235_p1 );

    SC_METHOD(thread_shl_ln80_11_fu_251_p2);
    sensitive << ( reg_197 );

    SC_METHOD(thread_shl_ln80_12_fu_307_p2);
    sensitive << ( reg_197 );

    SC_METHOD(thread_shl_ln80_13_fu_369_p2);
    sensitive << ( reg_197 );

    SC_METHOD(thread_shl_ln80_fu_201_p2);
    sensitive << ( reg_197 );

    SC_METHOD(thread_zext_ln115_1_fu_269_p1);
    sensitive << ( add_ln80_20_fu_263_p2 );

    SC_METHOD(thread_zext_ln115_2_fu_325_p1);
    sensitive << ( add_ln80_22_fu_319_p2 );

    SC_METHOD(thread_zext_ln115_3_fu_387_p1);
    sensitive << ( add_ln80_24_fu_381_p2 );

    SC_METHOD(thread_zext_ln115_fu_213_p1);
    sensitive << ( add_ln80_fu_207_p2 );

    SC_METHOD(thread_zext_ln116_1_fu_285_p1);
    sensitive << ( add_ln80_21_fu_279_p2 );

    SC_METHOD(thread_zext_ln116_2_fu_347_p1);
    sensitive << ( add_ln80_23_fu_341_p2 );

    SC_METHOD(thread_zext_ln116_3_fu_409_p1);
    sensitive << ( add_ln80_25_fu_403_p2 );

    SC_METHOD(thread_zext_ln116_fu_235_p1);
    sensitive << ( add_ln80_19_fu_229_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_lineIntersectsPlane_fu_120_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_pointOnSegment_fu_141_ap_done );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );

    ap_CS_fsm = "00000000000000001";
    grp_lineIntersectsPlane_fu_120_ap_start_reg = SC_LOGIC_0;
    grp_pointOnSegment_fu_141_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "checkAxis_0_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, edge_p1_x, "(port)edge_p1_x");
    sc_trace(mVcdFile, edge_p1_y, "(port)edge_p1_y");
    sc_trace(mVcdFile, edge_p1_z, "(port)edge_p1_z");
    sc_trace(mVcdFile, edge_p2_x, "(port)edge_p2_x");
    sc_trace(mVcdFile, edge_p2_y, "(port)edge_p2_y");
    sc_trace(mVcdFile, edge_p2_z, "(port)edge_p2_z");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_176, "reg_176");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_ready, "grp_lineIntersectsPlane_fu_120_ap_ready");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_done, "grp_lineIntersectsPlane_fu_120_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, reg_182, "reg_182");
    sc_trace(mVcdFile, reg_188, "reg_188");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_154_ap_return, "grp_p_hls_fptosi_float_i_fu_154_ap_return");
    sc_trace(mVcdFile, reg_193, "reg_193");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_141_ap_ready, "grp_pointOnSegment_fu_141_ap_ready");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_141_ap_done, "grp_pointOnSegment_fu_141_ap_done");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_141_ap_return, "grp_pointOnSegment_fu_141_ap_return");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_159_ap_return, "grp_p_hls_fptosi_float_i_fu_159_ap_return");
    sc_trace(mVcdFile, reg_197, "reg_197");
    sc_trace(mVcdFile, tmp_s_reg_468, "tmp_s_reg_468");
    sc_trace(mVcdFile, or_ln116_fu_245_p2, "or_ln116_fu_245_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_42_1_reg_477, "tmp_42_1_reg_477");
    sc_trace(mVcdFile, or_ln116_1_fu_301_p2, "or_ln116_1_fu_301_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_42_2_reg_486, "tmp_42_2_reg_486");
    sc_trace(mVcdFile, or_ln116_2_fu_363_p2, "or_ln116_2_fu_363_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_42_3_reg_495, "tmp_42_3_reg_495");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_start, "grp_lineIntersectsPlane_fu_120_ap_start");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_idle, "grp_lineIntersectsPlane_fu_120_ap_idle");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_plane, "grp_lineIntersectsPlane_fu_120_plane");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_return_0, "grp_lineIntersectsPlane_fu_120_ap_return_0");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_return_1, "grp_lineIntersectsPlane_fu_120_ap_return_1");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_return_2, "grp_lineIntersectsPlane_fu_120_ap_return_2");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_141_ap_start, "grp_pointOnSegment_fu_141_ap_start");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_141_ap_idle, "grp_pointOnSegment_fu_141_ap_idle");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_154_ap_ready, "grp_p_hls_fptosi_float_i_fu_154_ap_ready");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_159_ap_ready, "grp_p_hls_fptosi_float_i_fu_159_ap_ready");
    sc_trace(mVcdFile, collisions_5_0_reg_76, "collisions_5_0_reg_76");
    sc_trace(mVcdFile, collisions_5_1_reg_88, "collisions_5_1_reg_88");
    sc_trace(mVcdFile, collisions_5_2_reg_99, "collisions_5_2_reg_99");
    sc_trace(mVcdFile, or_ln116_3_fu_425_p2, "or_ln116_3_fu_425_p2");
    sc_trace(mVcdFile, ap_phi_mux_collisions_5_3_phi_fu_113_p4, "ap_phi_mux_collisions_5_3_phi_fu_113_p4");
    sc_trace(mVcdFile, collisions_5_3_reg_110, "collisions_5_3_reg_110");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_120_ap_start_reg, "grp_lineIntersectsPlane_fu_120_ap_start_reg");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_141_ap_start_reg, "grp_pointOnSegment_fu_141_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, shl_ln80_fu_201_p2, "shl_ln80_fu_201_p2");
    sc_trace(mVcdFile, add_ln80_fu_207_p2, "add_ln80_fu_207_p2");
    sc_trace(mVcdFile, zext_ln115_fu_213_p1, "zext_ln115_fu_213_p1");
    sc_trace(mVcdFile, add_ln80_18_fu_223_p2, "add_ln80_18_fu_223_p2");
    sc_trace(mVcdFile, add_ln80_19_fu_229_p2, "add_ln80_19_fu_229_p2");
    sc_trace(mVcdFile, zext_ln116_fu_235_p1, "zext_ln116_fu_235_p1");
    sc_trace(mVcdFile, shl_ln115_fu_217_p2, "shl_ln115_fu_217_p2");
    sc_trace(mVcdFile, shl_ln116_fu_239_p2, "shl_ln116_fu_239_p2");
    sc_trace(mVcdFile, shl_ln80_11_fu_251_p2, "shl_ln80_11_fu_251_p2");
    sc_trace(mVcdFile, or_ln80_fu_257_p2, "or_ln80_fu_257_p2");
    sc_trace(mVcdFile, add_ln80_20_fu_263_p2, "add_ln80_20_fu_263_p2");
    sc_trace(mVcdFile, zext_ln115_1_fu_269_p1, "zext_ln115_1_fu_269_p1");
    sc_trace(mVcdFile, add_ln80_21_fu_279_p2, "add_ln80_21_fu_279_p2");
    sc_trace(mVcdFile, zext_ln116_1_fu_285_p1, "zext_ln116_1_fu_285_p1");
    sc_trace(mVcdFile, shl_ln116_1_fu_289_p2, "shl_ln116_1_fu_289_p2");
    sc_trace(mVcdFile, or_ln116_4_fu_295_p2, "or_ln116_4_fu_295_p2");
    sc_trace(mVcdFile, shl_ln115_1_fu_273_p2, "shl_ln115_1_fu_273_p2");
    sc_trace(mVcdFile, shl_ln80_12_fu_307_p2, "shl_ln80_12_fu_307_p2");
    sc_trace(mVcdFile, or_ln80_5_fu_313_p2, "or_ln80_5_fu_313_p2");
    sc_trace(mVcdFile, add_ln80_22_fu_319_p2, "add_ln80_22_fu_319_p2");
    sc_trace(mVcdFile, zext_ln115_2_fu_325_p1, "zext_ln115_2_fu_325_p1");
    sc_trace(mVcdFile, or_ln80_6_fu_335_p2, "or_ln80_6_fu_335_p2");
    sc_trace(mVcdFile, add_ln80_23_fu_341_p2, "add_ln80_23_fu_341_p2");
    sc_trace(mVcdFile, zext_ln116_2_fu_347_p1, "zext_ln116_2_fu_347_p1");
    sc_trace(mVcdFile, shl_ln116_2_fu_351_p2, "shl_ln116_2_fu_351_p2");
    sc_trace(mVcdFile, or_ln116_5_fu_357_p2, "or_ln116_5_fu_357_p2");
    sc_trace(mVcdFile, shl_ln115_2_fu_329_p2, "shl_ln115_2_fu_329_p2");
    sc_trace(mVcdFile, shl_ln80_13_fu_369_p2, "shl_ln80_13_fu_369_p2");
    sc_trace(mVcdFile, or_ln80_7_fu_375_p2, "or_ln80_7_fu_375_p2");
    sc_trace(mVcdFile, add_ln80_24_fu_381_p2, "add_ln80_24_fu_381_p2");
    sc_trace(mVcdFile, zext_ln115_3_fu_387_p1, "zext_ln115_3_fu_387_p1");
    sc_trace(mVcdFile, or_ln80_8_fu_397_p2, "or_ln80_8_fu_397_p2");
    sc_trace(mVcdFile, add_ln80_25_fu_403_p2, "add_ln80_25_fu_403_p2");
    sc_trace(mVcdFile, zext_ln116_3_fu_409_p1, "zext_ln116_3_fu_409_p1");
    sc_trace(mVcdFile, shl_ln116_3_fu_413_p2, "shl_ln116_3_fu_413_p2");
    sc_trace(mVcdFile, or_ln116_6_fu_419_p2, "or_ln116_6_fu_419_p2");
    sc_trace(mVcdFile, shl_ln115_3_fu_391_p2, "shl_ln115_3_fu_391_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

checkAxis_0::~checkAxis_0() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_lineIntersectsPlane_fu_120;
    delete grp_pointOnSegment_fu_141;
    delete grp_p_hls_fptosi_float_i_fu_154;
    delete grp_p_hls_fptosi_float_i_fu_159;
}

void checkAxis_0::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv64_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            ap_return_preg = ap_phi_mux_collisions_5_3_phi_fu_113_p4.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_0))) {
        collisions_5_0_reg_76 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_468.read()))) {
        collisions_5_0_reg_76 = or_ln116_fu_245_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_0))) {
        collisions_5_1_reg_88 = collisions_5_0_reg_76.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_1_reg_477.read()))) {
        collisions_5_1_reg_88 = or_ln116_1_fu_301_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_0))) {
        collisions_5_2_reg_99 = collisions_5_1_reg_88.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_2_reg_486.read()))) {
        collisions_5_2_reg_99 = or_ln116_2_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_0))) {
        collisions_5_3_reg_110 = collisions_5_2_reg_99.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_3_reg_495.read()))) {
        collisions_5_3_reg_110 = or_ln116_3_fu_425_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lineIntersectsPlane_fu_120_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
            grp_lineIntersectsPlane_fu_120_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lineIntersectsPlane_fu_120_ap_ready.read())) {
            grp_lineIntersectsPlane_fu_120_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_pointOnSegment_fu_141_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
            grp_pointOnSegment_fu_141_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointOnSegment_fu_141_ap_ready.read())) {
            grp_pointOnSegment_fu_141_ap_start_reg = ap_const_logic_0;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())))) {
        reg_176 = grp_lineIntersectsPlane_fu_120_ap_return_0.read();
        reg_182 = grp_lineIntersectsPlane_fu_120_ap_return_1.read();
        reg_188 = grp_lineIntersectsPlane_fu_120_ap_return_2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())))) {
        reg_193 = grp_p_hls_fptosi_float_i_fu_154_ap_return.read();
        reg_197 = grp_p_hls_fptosi_float_i_fu_159_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        tmp_42_1_reg_477 = grp_pointOnSegment_fu_141_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        tmp_42_2_reg_486 = grp_pointOnSegment_fu_141_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        tmp_42_3_reg_495 = grp_pointOnSegment_fu_141_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1))) {
        tmp_s_reg_468 = grp_pointOnSegment_fu_141_ap_return.read();
    }
}

void checkAxis_0::thread_add_ln80_18_fu_223_p2() {
    add_ln80_18_fu_223_p2 = (!ap_const_lv32_FFFFFFFC.is_01() || !shl_ln80_fu_201_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFC) + sc_biguint<32>(shl_ln80_fu_201_p2.read()));
}

void checkAxis_0::thread_add_ln80_19_fu_229_p2() {
    add_ln80_19_fu_229_p2 = (!add_ln80_18_fu_223_p2.read().is_01() || !reg_193.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln80_18_fu_223_p2.read()) + sc_biguint<32>(reg_193.read()));
}

void checkAxis_0::thread_add_ln80_20_fu_263_p2() {
    add_ln80_20_fu_263_p2 = (!or_ln80_fu_257_p2.read().is_01() || !reg_193.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_fu_257_p2.read()) + sc_biguint<32>(reg_193.read()));
}

void checkAxis_0::thread_add_ln80_21_fu_279_p2() {
    add_ln80_21_fu_279_p2 = (!reg_193.read().is_01() || !shl_ln80_11_fu_251_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_193.read()) + sc_biguint<32>(shl_ln80_11_fu_251_p2.read()));
}

void checkAxis_0::thread_add_ln80_22_fu_319_p2() {
    add_ln80_22_fu_319_p2 = (!or_ln80_5_fu_313_p2.read().is_01() || !reg_193.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_5_fu_313_p2.read()) + sc_biguint<32>(reg_193.read()));
}

void checkAxis_0::thread_add_ln80_23_fu_341_p2() {
    add_ln80_23_fu_341_p2 = (!or_ln80_6_fu_335_p2.read().is_01() || !reg_193.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_6_fu_335_p2.read()) + sc_biguint<32>(reg_193.read()));
}

void checkAxis_0::thread_add_ln80_24_fu_381_p2() {
    add_ln80_24_fu_381_p2 = (!or_ln80_7_fu_375_p2.read().is_01() || !reg_193.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_7_fu_375_p2.read()) + sc_biguint<32>(reg_193.read()));
}

void checkAxis_0::thread_add_ln80_25_fu_403_p2() {
    add_ln80_25_fu_403_p2 = (!or_ln80_8_fu_397_p2.read().is_01() || !reg_193.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_8_fu_397_p2.read()) + sc_biguint<32>(reg_193.read()));
}

void checkAxis_0::thread_add_ln80_fu_207_p2() {
    add_ln80_fu_207_p2 = (!reg_193.read().is_01() || !shl_ln80_fu_201_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_193.read()) + sc_biguint<32>(shl_ln80_fu_201_p2.read()));
}

void checkAxis_0::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void checkAxis_0::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void checkAxis_0::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void checkAxis_0::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void checkAxis_0::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void checkAxis_0::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void checkAxis_0::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void checkAxis_0::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void checkAxis_0::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void checkAxis_0::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void checkAxis_0::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void checkAxis_0::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void checkAxis_0::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void checkAxis_0::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void checkAxis_0::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void checkAxis_0::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void checkAxis_0::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void checkAxis_0::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void checkAxis_0::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void checkAxis_0::thread_ap_phi_mux_collisions_5_3_phi_fu_113_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_3_reg_495.read()))) {
        ap_phi_mux_collisions_5_3_phi_fu_113_p4 = or_ln116_3_fu_425_p2.read();
    } else {
        ap_phi_mux_collisions_5_3_phi_fu_113_p4 = collisions_5_3_reg_110.read();
    }
}

void checkAxis_0::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void checkAxis_0::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        ap_return = ap_phi_mux_collisions_5_3_phi_fu_113_p4.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void checkAxis_0::thread_grp_lineIntersectsPlane_fu_120_ap_start() {
    grp_lineIntersectsPlane_fu_120_ap_start = grp_lineIntersectsPlane_fu_120_ap_start_reg.read();
}

void checkAxis_0::thread_grp_lineIntersectsPlane_fu_120_plane() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_lineIntersectsPlane_fu_120_plane = ap_const_lv32_40400000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_lineIntersectsPlane_fu_120_plane = ap_const_lv32_40000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_lineIntersectsPlane_fu_120_plane = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lineIntersectsPlane_fu_120_plane = ap_const_lv32_0;
    } else {
        grp_lineIntersectsPlane_fu_120_plane = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void checkAxis_0::thread_grp_pointOnSegment_fu_141_ap_start() {
    grp_pointOnSegment_fu_141_ap_start = grp_pointOnSegment_fu_141_ap_start_reg.read();
}

void checkAxis_0::thread_or_ln116_1_fu_301_p2() {
    or_ln116_1_fu_301_p2 = (or_ln116_4_fu_295_p2.read() | shl_ln115_1_fu_273_p2.read());
}

void checkAxis_0::thread_or_ln116_2_fu_363_p2() {
    or_ln116_2_fu_363_p2 = (or_ln116_5_fu_357_p2.read() | shl_ln115_2_fu_329_p2.read());
}

void checkAxis_0::thread_or_ln116_3_fu_425_p2() {
    or_ln116_3_fu_425_p2 = (or_ln116_6_fu_419_p2.read() | shl_ln115_3_fu_391_p2.read());
}

void checkAxis_0::thread_or_ln116_4_fu_295_p2() {
    or_ln116_4_fu_295_p2 = (collisions_5_0_reg_76.read() | shl_ln116_1_fu_289_p2.read());
}

void checkAxis_0::thread_or_ln116_5_fu_357_p2() {
    or_ln116_5_fu_357_p2 = (collisions_5_1_reg_88.read() | shl_ln116_2_fu_351_p2.read());
}

void checkAxis_0::thread_or_ln116_6_fu_419_p2() {
    or_ln116_6_fu_419_p2 = (collisions_5_2_reg_99.read() | shl_ln116_3_fu_413_p2.read());
}

void checkAxis_0::thread_or_ln116_fu_245_p2() {
    or_ln116_fu_245_p2 = (shl_ln115_fu_217_p2.read() | shl_ln116_fu_239_p2.read());
}

void checkAxis_0::thread_or_ln80_5_fu_313_p2() {
    or_ln80_5_fu_313_p2 = (shl_ln80_12_fu_307_p2.read() | ap_const_lv32_8);
}

void checkAxis_0::thread_or_ln80_6_fu_335_p2() {
    or_ln80_6_fu_335_p2 = (shl_ln80_12_fu_307_p2.read() | ap_const_lv32_4);
}

void checkAxis_0::thread_or_ln80_7_fu_375_p2() {
    or_ln80_7_fu_375_p2 = (shl_ln80_13_fu_369_p2.read() | ap_const_lv32_C);
}

void checkAxis_0::thread_or_ln80_8_fu_397_p2() {
    or_ln80_8_fu_397_p2 = (shl_ln80_13_fu_369_p2.read() | ap_const_lv32_8);
}

void checkAxis_0::thread_or_ln80_fu_257_p2() {
    or_ln80_fu_257_p2 = (shl_ln80_11_fu_251_p2.read() | ap_const_lv32_4);
}

void checkAxis_0::thread_shl_ln115_1_fu_273_p2() {
    shl_ln115_1_fu_273_p2 = (!zext_ln115_1_fu_269_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln115_1_fu_269_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln115_2_fu_329_p2() {
    shl_ln115_2_fu_329_p2 = (!zext_ln115_2_fu_325_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln115_2_fu_325_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln115_3_fu_391_p2() {
    shl_ln115_3_fu_391_p2 = (!zext_ln115_3_fu_387_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln115_3_fu_387_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln115_fu_217_p2() {
    shl_ln115_fu_217_p2 = (!zext_ln115_fu_213_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln115_fu_213_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln116_1_fu_289_p2() {
    shl_ln116_1_fu_289_p2 = (!zext_ln116_1_fu_285_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln116_1_fu_285_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln116_2_fu_351_p2() {
    shl_ln116_2_fu_351_p2 = (!zext_ln116_2_fu_347_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln116_2_fu_347_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln116_3_fu_413_p2() {
    shl_ln116_3_fu_413_p2 = (!zext_ln116_3_fu_409_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln116_3_fu_409_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln116_fu_239_p2() {
    shl_ln116_fu_239_p2 = (!zext_ln116_fu_235_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln116_fu_235_p1.read().to_uint();
}

void checkAxis_0::thread_shl_ln80_11_fu_251_p2() {
    shl_ln80_11_fu_251_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_197.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_0::thread_shl_ln80_12_fu_307_p2() {
    shl_ln80_12_fu_307_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_197.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_0::thread_shl_ln80_13_fu_369_p2() {
    shl_ln80_13_fu_369_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_197.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_0::thread_shl_ln80_fu_201_p2() {
    shl_ln80_fu_201_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_197.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_0::thread_zext_ln115_1_fu_269_p1() {
    zext_ln115_1_fu_269_p1 = esl_zext<64,32>(add_ln80_20_fu_263_p2.read());
}

void checkAxis_0::thread_zext_ln115_2_fu_325_p1() {
    zext_ln115_2_fu_325_p1 = esl_zext<64,32>(add_ln80_22_fu_319_p2.read());
}

void checkAxis_0::thread_zext_ln115_3_fu_387_p1() {
    zext_ln115_3_fu_387_p1 = esl_zext<64,32>(add_ln80_24_fu_381_p2.read());
}

void checkAxis_0::thread_zext_ln115_fu_213_p1() {
    zext_ln115_fu_213_p1 = esl_zext<64,32>(add_ln80_fu_207_p2.read());
}

void checkAxis_0::thread_zext_ln116_1_fu_285_p1() {
    zext_ln116_1_fu_285_p1 = esl_zext<64,32>(add_ln80_21_fu_279_p2.read());
}

void checkAxis_0::thread_zext_ln116_2_fu_347_p1() {
    zext_ln116_2_fu_347_p1 = esl_zext<64,32>(add_ln80_23_fu_341_p2.read());
}

void checkAxis_0::thread_zext_ln116_3_fu_409_p1() {
    zext_ln116_3_fu_409_p1 = esl_zext<64,32>(add_ln80_25_fu_403_p2.read());
}

void checkAxis_0::thread_zext_ln116_fu_235_p1() {
    zext_ln116_fu_235_p1 = esl_zext<64,32>(add_ln80_19_fu_229_p2.read());
}

void checkAxis_0::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_120_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_141_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

