// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "checkAxis_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic checkAxis_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic checkAxis_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<20> checkAxis_1::ap_ST_fsm_state1 = "1";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state2 = "10";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state3 = "100";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state4 = "1000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state5 = "10000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state6 = "100000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<20> checkAxis_1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> checkAxis_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> checkAxis_1::ap_const_lv32_2 = "10";
const sc_lv<32> checkAxis_1::ap_const_lv32_6 = "110";
const sc_lv<32> checkAxis_1::ap_const_lv32_A = "1010";
const sc_lv<32> checkAxis_1::ap_const_lv32_E = "1110";
const sc_lv<32> checkAxis_1::ap_const_lv32_4 = "100";
const sc_lv<1> checkAxis_1::ap_const_lv1_1 = "1";
const sc_lv<32> checkAxis_1::ap_const_lv32_8 = "1000";
const sc_lv<32> checkAxis_1::ap_const_lv32_C = "1100";
const sc_lv<32> checkAxis_1::ap_const_lv32_10 = "10000";
const sc_lv<32> checkAxis_1::ap_const_lv32_1 = "1";
const sc_lv<32> checkAxis_1::ap_const_lv32_12 = "10010";
const sc_lv<1> checkAxis_1::ap_const_lv1_0 = "0";
const sc_lv<32> checkAxis_1::ap_const_lv32_13 = "10011";
const sc_lv<2> checkAxis_1::ap_const_lv2_0 = "00";
const sc_lv<64> checkAxis_1::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> checkAxis_1::ap_const_lv32_11 = "10001";
const sc_lv<3> checkAxis_1::ap_const_lv3_0 = "000";
const sc_lv<32> checkAxis_1::ap_const_lv32_5 = "101";
const sc_lv<32> checkAxis_1::ap_const_lv32_9 = "1001";
const sc_lv<32> checkAxis_1::ap_const_lv32_D = "1101";
const sc_lv<32> checkAxis_1::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> checkAxis_1::ap_const_lv32_40000000 = "1000000000000000000000000000000";
const sc_lv<32> checkAxis_1::ap_const_lv32_40400000 = "1000000010000000000000000000000";
const sc_lv<32> checkAxis_1::ap_const_lv32_3 = "11";
const sc_lv<32> checkAxis_1::ap_const_lv32_7 = "111";
const sc_lv<32> checkAxis_1::ap_const_lv32_B = "1011";
const sc_lv<32> checkAxis_1::ap_const_lv32_F = "1111";
const sc_lv<64> checkAxis_1::ap_const_lv64_1 = "1";
const sc_lv<64> checkAxis_1::ap_const_lv64_2 = "10";
const sc_lv<64> checkAxis_1::ap_const_lv64_3 = "11";
const sc_lv<2> checkAxis_1::ap_const_lv2_1 = "1";
const sc_lv<2> checkAxis_1::ap_const_lv2_3 = "11";
const sc_lv<32> checkAxis_1::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<3> checkAxis_1::ap_const_lv3_4 = "100";
const sc_lv<3> checkAxis_1::ap_const_lv3_1 = "1";
const bool checkAxis_1::ap_const_boolean_1 = true;

checkAxis_1::checkAxis_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    collisions_U = new checkAxis_2_collihbi("collisions_U");
    collisions_U->clk(ap_clk);
    collisions_U->reset(ap_rst);
    collisions_U->address0(collisions_address0);
    collisions_U->ce0(collisions_ce0);
    collisions_U->we0(collisions_we0);
    collisions_U->d0(collisions_d0);
    collisions_U->q0(collisions_q0);
    grp_lineIntersectsPlane_fu_192 = new lineIntersectsPlane("grp_lineIntersectsPlane_fu_192");
    grp_lineIntersectsPlane_fu_192->ap_clk(ap_clk);
    grp_lineIntersectsPlane_fu_192->ap_rst(ap_rst);
    grp_lineIntersectsPlane_fu_192->ap_start(grp_lineIntersectsPlane_fu_192_ap_start);
    grp_lineIntersectsPlane_fu_192->ap_done(grp_lineIntersectsPlane_fu_192_ap_done);
    grp_lineIntersectsPlane_fu_192->ap_idle(grp_lineIntersectsPlane_fu_192_ap_idle);
    grp_lineIntersectsPlane_fu_192->ap_ready(grp_lineIntersectsPlane_fu_192_ap_ready);
    grp_lineIntersectsPlane_fu_192->edge_p1_x(edge_p1_x);
    grp_lineIntersectsPlane_fu_192->edge_p1_y(edge_p1_y);
    grp_lineIntersectsPlane_fu_192->edge_p1_z(edge_p1_z);
    grp_lineIntersectsPlane_fu_192->edge_p2_x(edge_p2_x);
    grp_lineIntersectsPlane_fu_192->edge_p2_y(edge_p2_y);
    grp_lineIntersectsPlane_fu_192->edge_p2_z(edge_p2_z);
    grp_lineIntersectsPlane_fu_192->plane(grp_lineIntersectsPlane_fu_192_plane);
    grp_lineIntersectsPlane_fu_192->ap_return_0(grp_lineIntersectsPlane_fu_192_ap_return_0);
    grp_lineIntersectsPlane_fu_192->ap_return_1(grp_lineIntersectsPlane_fu_192_ap_return_1);
    grp_lineIntersectsPlane_fu_192->ap_return_2(grp_lineIntersectsPlane_fu_192_ap_return_2);
    grp_pointOnSegment_fu_207 = new pointOnSegment("grp_pointOnSegment_fu_207");
    grp_pointOnSegment_fu_207->ap_clk(ap_clk);
    grp_pointOnSegment_fu_207->ap_rst(ap_rst);
    grp_pointOnSegment_fu_207->ap_start(grp_pointOnSegment_fu_207_ap_start);
    grp_pointOnSegment_fu_207->ap_done(grp_pointOnSegment_fu_207_ap_done);
    grp_pointOnSegment_fu_207->ap_idle(grp_pointOnSegment_fu_207_ap_idle);
    grp_pointOnSegment_fu_207->ap_ready(grp_pointOnSegment_fu_207_ap_ready);
    grp_pointOnSegment_fu_207->p_x(reg_254);
    grp_pointOnSegment_fu_207->p_y(reg_248);
    grp_pointOnSegment_fu_207->p_z(reg_242);
    grp_pointOnSegment_fu_207->e_p1_x(edge_p1_z);
    grp_pointOnSegment_fu_207->e_p1_y(edge_p1_y);
    grp_pointOnSegment_fu_207->e_p1_z(edge_p1_x);
    grp_pointOnSegment_fu_207->e_p2_x(edge_p2_z);
    grp_pointOnSegment_fu_207->e_p2_y(edge_p2_y);
    grp_pointOnSegment_fu_207->e_p2_z(edge_p2_x);
    grp_pointOnSegment_fu_207->ap_return(grp_pointOnSegment_fu_207_ap_return);
    grp_p_hls_fptosi_float_i_fu_220 = new p_hls_fptosi_float_i("grp_p_hls_fptosi_float_i_fu_220");
    grp_p_hls_fptosi_float_i_fu_220->ap_ready(grp_p_hls_fptosi_float_i_fu_220_ap_ready);
    grp_p_hls_fptosi_float_i_fu_220->x(reg_248);
    grp_p_hls_fptosi_float_i_fu_220->ap_return(grp_p_hls_fptosi_float_i_fu_220_ap_return);
    grp_p_hls_fptosi_float_i_fu_225 = new p_hls_fptosi_float_i("grp_p_hls_fptosi_float_i_fu_225");
    grp_p_hls_fptosi_float_i_fu_225->ap_ready(grp_p_hls_fptosi_float_i_fu_225_ap_ready);
    grp_p_hls_fptosi_float_i_fu_225->x(reg_242);
    grp_p_hls_fptosi_float_i_fu_225->ap_return(grp_p_hls_fptosi_float_i_fu_225_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln80_10_fu_312_p2);
    sensitive << ( shl_ln80_4_fu_290_p2 );

    SC_METHOD(thread_add_ln80_11_fu_318_p2);
    sensitive << ( shl_ln80_fu_284_p2 );
    sensitive << ( add_ln80_10_fu_312_p2 );

    SC_METHOD(thread_add_ln80_12_fu_359_p2);
    sensitive << ( or_ln80_fu_353_p2 );
    sensitive << ( shl_ln80_6_fu_347_p2 );

    SC_METHOD(thread_add_ln80_13_fu_375_p2);
    sensitive << ( shl_ln80_5_fu_341_p2 );
    sensitive << ( shl_ln80_6_fu_347_p2 );

    SC_METHOD(thread_add_ln80_14_fu_416_p2);
    sensitive << ( or_ln80_1_fu_410_p2 );
    sensitive << ( shl_ln80_8_fu_404_p2 );

    SC_METHOD(thread_add_ln80_15_fu_438_p2);
    sensitive << ( shl_ln80_8_fu_404_p2 );
    sensitive << ( or_ln80_2_fu_432_p2 );

    SC_METHOD(thread_add_ln80_16_fu_479_p2);
    sensitive << ( or_ln80_3_fu_473_p2 );
    sensitive << ( shl_ln80_10_fu_467_p2 );

    SC_METHOD(thread_add_ln80_17_fu_501_p2);
    sensitive << ( shl_ln80_10_fu_467_p2 );
    sensitive << ( or_ln80_4_fu_495_p2 );

    SC_METHOD(thread_add_ln80_fu_296_p2);
    sensitive << ( shl_ln80_fu_284_p2 );
    sensitive << ( shl_ln80_4_fu_290_p2 );

    SC_METHOD(thread_add_ln84_fu_267_p2);
    sensitive << ( phi_ln84_reg_158 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln138_fu_524_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln138_fu_524_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln138_fu_524_p2 );
    sensitive << ( returnCollisions_0_reg_169 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_collisions_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln84_fu_273_p1 );
    sensitive << ( zext_ln139_fu_536_p1 );

    SC_METHOD(thread_collisions_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_collisions_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( or_ln133_fu_334_p2 );
    sensitive << ( or_ln133_1_fu_391_p2 );
    sensitive << ( or_ln133_2_fu_454_p2 );
    sensitive << ( or_ln133_3_fu_517_p2 );

    SC_METHOD(thread_collisions_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_reg_591 );
    sensitive << ( tmp_45_1_reg_595 );
    sensitive << ( tmp_45_2_reg_599 );
    sensitive << ( tmp_45_3_reg_603 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_lineIntersectsPlane_fu_192_ap_start);
    sensitive << ( grp_lineIntersectsPlane_fu_192_ap_start_reg );

    SC_METHOD(thread_grp_lineIntersectsPlane_fu_192_plane);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_pointOnSegment_fu_207_ap_start);
    sensitive << ( grp_pointOnSegment_fu_207_ap_start_reg );

    SC_METHOD(thread_i_fu_530_p2);
    sensitive << ( i_1_reg_181 );

    SC_METHOD(thread_icmp_ln138_fu_524_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i_1_reg_181 );

    SC_METHOD(thread_icmp_ln84_fu_278_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln84_reg_158 );

    SC_METHOD(thread_or_ln133_1_fu_391_p2);
    sensitive << ( shl_ln133_1_fu_385_p2 );
    sensitive << ( shl_ln132_1_fu_369_p2 );

    SC_METHOD(thread_or_ln133_2_fu_454_p2);
    sensitive << ( shl_ln133_2_fu_448_p2 );
    sensitive << ( shl_ln132_2_fu_426_p2 );

    SC_METHOD(thread_or_ln133_3_fu_517_p2);
    sensitive << ( shl_ln133_3_fu_511_p2 );
    sensitive << ( shl_ln132_3_fu_489_p2 );

    SC_METHOD(thread_or_ln133_fu_334_p2);
    sensitive << ( shl_ln133_fu_328_p2 );
    sensitive << ( shl_ln132_fu_306_p2 );

    SC_METHOD(thread_or_ln80_1_fu_410_p2);
    sensitive << ( shl_ln80_7_fu_398_p2 );

    SC_METHOD(thread_or_ln80_2_fu_432_p2);
    sensitive << ( shl_ln80_7_fu_398_p2 );

    SC_METHOD(thread_or_ln80_3_fu_473_p2);
    sensitive << ( shl_ln80_9_fu_461_p2 );

    SC_METHOD(thread_or_ln80_4_fu_495_p2);
    sensitive << ( shl_ln80_9_fu_461_p2 );

    SC_METHOD(thread_or_ln80_fu_353_p2);
    sensitive << ( shl_ln80_5_fu_341_p2 );

    SC_METHOD(thread_returnCollisions_fu_541_p2);
    sensitive << ( collisions_q0 );
    sensitive << ( returnCollisions_0_reg_169 );

    SC_METHOD(thread_shl_ln132_1_fu_369_p2);
    sensitive << ( zext_ln132_1_fu_365_p1 );

    SC_METHOD(thread_shl_ln132_2_fu_426_p2);
    sensitive << ( zext_ln132_2_fu_422_p1 );

    SC_METHOD(thread_shl_ln132_3_fu_489_p2);
    sensitive << ( zext_ln132_3_fu_485_p1 );

    SC_METHOD(thread_shl_ln132_fu_306_p2);
    sensitive << ( zext_ln132_fu_302_p1 );

    SC_METHOD(thread_shl_ln133_1_fu_385_p2);
    sensitive << ( zext_ln133_1_fu_381_p1 );

    SC_METHOD(thread_shl_ln133_2_fu_448_p2);
    sensitive << ( zext_ln133_2_fu_444_p1 );

    SC_METHOD(thread_shl_ln133_3_fu_511_p2);
    sensitive << ( zext_ln133_3_fu_507_p1 );

    SC_METHOD(thread_shl_ln133_fu_328_p2);
    sensitive << ( zext_ln133_fu_324_p1 );

    SC_METHOD(thread_shl_ln80_10_fu_467_p2);
    sensitive << ( reg_263 );

    SC_METHOD(thread_shl_ln80_4_fu_290_p2);
    sensitive << ( reg_263 );

    SC_METHOD(thread_shl_ln80_5_fu_341_p2);
    sensitive << ( reg_259 );

    SC_METHOD(thread_shl_ln80_6_fu_347_p2);
    sensitive << ( reg_263 );

    SC_METHOD(thread_shl_ln80_7_fu_398_p2);
    sensitive << ( reg_259 );

    SC_METHOD(thread_shl_ln80_8_fu_404_p2);
    sensitive << ( reg_263 );

    SC_METHOD(thread_shl_ln80_9_fu_461_p2);
    sensitive << ( reg_259 );

    SC_METHOD(thread_shl_ln80_fu_284_p2);
    sensitive << ( reg_259 );

    SC_METHOD(thread_zext_ln132_1_fu_365_p1);
    sensitive << ( add_ln80_12_fu_359_p2 );

    SC_METHOD(thread_zext_ln132_2_fu_422_p1);
    sensitive << ( add_ln80_14_fu_416_p2 );

    SC_METHOD(thread_zext_ln132_3_fu_485_p1);
    sensitive << ( add_ln80_16_fu_479_p2 );

    SC_METHOD(thread_zext_ln132_fu_302_p1);
    sensitive << ( add_ln80_fu_296_p2 );

    SC_METHOD(thread_zext_ln133_1_fu_381_p1);
    sensitive << ( add_ln80_13_fu_375_p2 );

    SC_METHOD(thread_zext_ln133_2_fu_444_p1);
    sensitive << ( add_ln80_15_fu_438_p2 );

    SC_METHOD(thread_zext_ln133_3_fu_507_p1);
    sensitive << ( add_ln80_17_fu_501_p2 );

    SC_METHOD(thread_zext_ln133_fu_324_p1);
    sensitive << ( add_ln80_11_fu_318_p2 );

    SC_METHOD(thread_zext_ln139_fu_536_p1);
    sensitive << ( i_1_reg_181 );

    SC_METHOD(thread_zext_ln84_fu_273_p1);
    sensitive << ( phi_ln84_reg_158 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_lineIntersectsPlane_fu_192_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_pointOnSegment_fu_207_ap_done );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln138_fu_524_p2 );
    sensitive << ( icmp_ln84_fu_278_p2 );

    ap_CS_fsm = "00000000000000000001";
    grp_lineIntersectsPlane_fu_192_ap_start_reg = SC_LOGIC_0;
    grp_pointOnSegment_fu_207_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "checkAxis_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, edge_p1_x, "(port)edge_p1_x");
    sc_trace(mVcdFile, edge_p1_y, "(port)edge_p1_y");
    sc_trace(mVcdFile, edge_p1_z, "(port)edge_p1_z");
    sc_trace(mVcdFile, edge_p2_x, "(port)edge_p2_x");
    sc_trace(mVcdFile, edge_p2_y, "(port)edge_p2_y");
    sc_trace(mVcdFile, edge_p2_z, "(port)edge_p2_z");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_242, "reg_242");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_ready, "grp_lineIntersectsPlane_fu_192_ap_ready");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_done, "grp_lineIntersectsPlane_fu_192_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, reg_248, "reg_248");
    sc_trace(mVcdFile, reg_254, "reg_254");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_220_ap_return, "grp_p_hls_fptosi_float_i_fu_220_ap_return");
    sc_trace(mVcdFile, reg_259, "reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_207_ap_ready, "grp_pointOnSegment_fu_207_ap_ready");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_207_ap_done, "grp_pointOnSegment_fu_207_ap_done");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_207_ap_return, "grp_pointOnSegment_fu_207_ap_return");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_225_ap_return, "grp_p_hls_fptosi_float_i_fu_225_ap_return");
    sc_trace(mVcdFile, reg_263, "reg_263");
    sc_trace(mVcdFile, add_ln84_fu_267_p2, "add_ln84_fu_267_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_s_reg_591, "tmp_s_reg_591");
    sc_trace(mVcdFile, tmp_45_1_reg_595, "tmp_45_1_reg_595");
    sc_trace(mVcdFile, tmp_45_2_reg_599, "tmp_45_2_reg_599");
    sc_trace(mVcdFile, tmp_45_3_reg_603, "tmp_45_3_reg_603");
    sc_trace(mVcdFile, i_fu_530_p2, "i_fu_530_p2");
    sc_trace(mVcdFile, i_reg_610, "i_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, icmp_ln138_fu_524_p2, "icmp_ln138_fu_524_p2");
    sc_trace(mVcdFile, returnCollisions_fu_541_p2, "returnCollisions_fu_541_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, collisions_address0, "collisions_address0");
    sc_trace(mVcdFile, collisions_ce0, "collisions_ce0");
    sc_trace(mVcdFile, collisions_we0, "collisions_we0");
    sc_trace(mVcdFile, collisions_d0, "collisions_d0");
    sc_trace(mVcdFile, collisions_q0, "collisions_q0");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_start, "grp_lineIntersectsPlane_fu_192_ap_start");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_idle, "grp_lineIntersectsPlane_fu_192_ap_idle");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_plane, "grp_lineIntersectsPlane_fu_192_plane");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_return_0, "grp_lineIntersectsPlane_fu_192_ap_return_0");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_return_1, "grp_lineIntersectsPlane_fu_192_ap_return_1");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_return_2, "grp_lineIntersectsPlane_fu_192_ap_return_2");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_207_ap_start, "grp_pointOnSegment_fu_207_ap_start");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_207_ap_idle, "grp_pointOnSegment_fu_207_ap_idle");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_220_ap_ready, "grp_p_hls_fptosi_float_i_fu_220_ap_ready");
    sc_trace(mVcdFile, grp_p_hls_fptosi_float_i_fu_225_ap_ready, "grp_p_hls_fptosi_float_i_fu_225_ap_ready");
    sc_trace(mVcdFile, phi_ln84_reg_158, "phi_ln84_reg_158");
    sc_trace(mVcdFile, icmp_ln84_fu_278_p2, "icmp_ln84_fu_278_p2");
    sc_trace(mVcdFile, returnCollisions_0_reg_169, "returnCollisions_0_reg_169");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_1_reg_181, "i_1_reg_181");
    sc_trace(mVcdFile, grp_lineIntersectsPlane_fu_192_ap_start_reg, "grp_lineIntersectsPlane_fu_192_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_pointOnSegment_fu_207_ap_start_reg, "grp_pointOnSegment_fu_207_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, zext_ln84_fu_273_p1, "zext_ln84_fu_273_p1");
    sc_trace(mVcdFile, zext_ln139_fu_536_p1, "zext_ln139_fu_536_p1");
    sc_trace(mVcdFile, or_ln133_fu_334_p2, "or_ln133_fu_334_p2");
    sc_trace(mVcdFile, or_ln133_1_fu_391_p2, "or_ln133_1_fu_391_p2");
    sc_trace(mVcdFile, or_ln133_2_fu_454_p2, "or_ln133_2_fu_454_p2");
    sc_trace(mVcdFile, or_ln133_3_fu_517_p2, "or_ln133_3_fu_517_p2");
    sc_trace(mVcdFile, shl_ln80_fu_284_p2, "shl_ln80_fu_284_p2");
    sc_trace(mVcdFile, shl_ln80_4_fu_290_p2, "shl_ln80_4_fu_290_p2");
    sc_trace(mVcdFile, add_ln80_fu_296_p2, "add_ln80_fu_296_p2");
    sc_trace(mVcdFile, zext_ln132_fu_302_p1, "zext_ln132_fu_302_p1");
    sc_trace(mVcdFile, add_ln80_10_fu_312_p2, "add_ln80_10_fu_312_p2");
    sc_trace(mVcdFile, add_ln80_11_fu_318_p2, "add_ln80_11_fu_318_p2");
    sc_trace(mVcdFile, zext_ln133_fu_324_p1, "zext_ln133_fu_324_p1");
    sc_trace(mVcdFile, shl_ln133_fu_328_p2, "shl_ln133_fu_328_p2");
    sc_trace(mVcdFile, shl_ln132_fu_306_p2, "shl_ln132_fu_306_p2");
    sc_trace(mVcdFile, shl_ln80_5_fu_341_p2, "shl_ln80_5_fu_341_p2");
    sc_trace(mVcdFile, or_ln80_fu_353_p2, "or_ln80_fu_353_p2");
    sc_trace(mVcdFile, shl_ln80_6_fu_347_p2, "shl_ln80_6_fu_347_p2");
    sc_trace(mVcdFile, add_ln80_12_fu_359_p2, "add_ln80_12_fu_359_p2");
    sc_trace(mVcdFile, zext_ln132_1_fu_365_p1, "zext_ln132_1_fu_365_p1");
    sc_trace(mVcdFile, add_ln80_13_fu_375_p2, "add_ln80_13_fu_375_p2");
    sc_trace(mVcdFile, zext_ln133_1_fu_381_p1, "zext_ln133_1_fu_381_p1");
    sc_trace(mVcdFile, shl_ln133_1_fu_385_p2, "shl_ln133_1_fu_385_p2");
    sc_trace(mVcdFile, shl_ln132_1_fu_369_p2, "shl_ln132_1_fu_369_p2");
    sc_trace(mVcdFile, shl_ln80_7_fu_398_p2, "shl_ln80_7_fu_398_p2");
    sc_trace(mVcdFile, or_ln80_1_fu_410_p2, "or_ln80_1_fu_410_p2");
    sc_trace(mVcdFile, shl_ln80_8_fu_404_p2, "shl_ln80_8_fu_404_p2");
    sc_trace(mVcdFile, add_ln80_14_fu_416_p2, "add_ln80_14_fu_416_p2");
    sc_trace(mVcdFile, zext_ln132_2_fu_422_p1, "zext_ln132_2_fu_422_p1");
    sc_trace(mVcdFile, or_ln80_2_fu_432_p2, "or_ln80_2_fu_432_p2");
    sc_trace(mVcdFile, add_ln80_15_fu_438_p2, "add_ln80_15_fu_438_p2");
    sc_trace(mVcdFile, zext_ln133_2_fu_444_p1, "zext_ln133_2_fu_444_p1");
    sc_trace(mVcdFile, shl_ln133_2_fu_448_p2, "shl_ln133_2_fu_448_p2");
    sc_trace(mVcdFile, shl_ln132_2_fu_426_p2, "shl_ln132_2_fu_426_p2");
    sc_trace(mVcdFile, shl_ln80_9_fu_461_p2, "shl_ln80_9_fu_461_p2");
    sc_trace(mVcdFile, or_ln80_3_fu_473_p2, "or_ln80_3_fu_473_p2");
    sc_trace(mVcdFile, shl_ln80_10_fu_467_p2, "shl_ln80_10_fu_467_p2");
    sc_trace(mVcdFile, add_ln80_16_fu_479_p2, "add_ln80_16_fu_479_p2");
    sc_trace(mVcdFile, zext_ln132_3_fu_485_p1, "zext_ln132_3_fu_485_p1");
    sc_trace(mVcdFile, or_ln80_4_fu_495_p2, "or_ln80_4_fu_495_p2");
    sc_trace(mVcdFile, add_ln80_17_fu_501_p2, "add_ln80_17_fu_501_p2");
    sc_trace(mVcdFile, zext_ln133_3_fu_507_p1, "zext_ln133_3_fu_507_p1");
    sc_trace(mVcdFile, shl_ln133_3_fu_511_p2, "shl_ln133_3_fu_511_p2");
    sc_trace(mVcdFile, shl_ln132_3_fu_489_p2, "shl_ln132_3_fu_489_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

checkAxis_1::~checkAxis_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete collisions_U;
    delete grp_lineIntersectsPlane_fu_192;
    delete grp_pointOnSegment_fu_207;
    delete grp_p_hls_fptosi_float_i_fu_220;
    delete grp_p_hls_fptosi_float_i_fu_225;
}

void checkAxis_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv64_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln138_fu_524_p2.read()))) {
            ap_return_preg = returnCollisions_0_reg_169.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lineIntersectsPlane_fu_192_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln84_fu_278_p2.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
            grp_lineIntersectsPlane_fu_192_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lineIntersectsPlane_fu_192_ap_ready.read())) {
            grp_lineIntersectsPlane_fu_192_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_pointOnSegment_fu_207_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
            grp_pointOnSegment_fu_207_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointOnSegment_fu_207_ap_ready.read())) {
            grp_pointOnSegment_fu_207_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_1_reg_181 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_1_reg_181 = i_reg_610.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln84_fu_278_p2.read()))) {
        phi_ln84_reg_158 = add_ln84_fu_267_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln84_reg_158 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        returnCollisions_0_reg_169 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        returnCollisions_0_reg_169 = returnCollisions_fu_541_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i_reg_610 = i_fu_530_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) || (esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())))) {
        reg_242 = grp_lineIntersectsPlane_fu_192_ap_return_0.read();
        reg_248 = grp_lineIntersectsPlane_fu_192_ap_return_1.read();
        reg_254 = grp_lineIntersectsPlane_fu_192_ap_return_2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_return.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) || (esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_return.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())))) {
        reg_259 = grp_p_hls_fptosi_float_i_fu_220_ap_return.read();
        reg_263 = grp_p_hls_fptosi_float_i_fu_225_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        tmp_45_1_reg_595 = grp_pointOnSegment_fu_207_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        tmp_45_2_reg_599 = grp_pointOnSegment_fu_207_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        tmp_45_3_reg_603 = grp_pointOnSegment_fu_207_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1))) {
        tmp_s_reg_591 = grp_pointOnSegment_fu_207_ap_return.read();
    }
}

void checkAxis_1::thread_add_ln80_10_fu_312_p2() {
    add_ln80_10_fu_312_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !shl_ln80_4_fu_290_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(shl_ln80_4_fu_290_p2.read()));
}

void checkAxis_1::thread_add_ln80_11_fu_318_p2() {
    add_ln80_11_fu_318_p2 = (!add_ln80_10_fu_312_p2.read().is_01() || !shl_ln80_fu_284_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln80_10_fu_312_p2.read()) + sc_biguint<32>(shl_ln80_fu_284_p2.read()));
}

void checkAxis_1::thread_add_ln80_12_fu_359_p2() {
    add_ln80_12_fu_359_p2 = (!or_ln80_fu_353_p2.read().is_01() || !shl_ln80_6_fu_347_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_fu_353_p2.read()) + sc_biguint<32>(shl_ln80_6_fu_347_p2.read()));
}

void checkAxis_1::thread_add_ln80_13_fu_375_p2() {
    add_ln80_13_fu_375_p2 = (!shl_ln80_5_fu_341_p2.read().is_01() || !shl_ln80_6_fu_347_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln80_5_fu_341_p2.read()) + sc_biguint<32>(shl_ln80_6_fu_347_p2.read()));
}

void checkAxis_1::thread_add_ln80_14_fu_416_p2() {
    add_ln80_14_fu_416_p2 = (!or_ln80_1_fu_410_p2.read().is_01() || !shl_ln80_8_fu_404_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_1_fu_410_p2.read()) + sc_biguint<32>(shl_ln80_8_fu_404_p2.read()));
}

void checkAxis_1::thread_add_ln80_15_fu_438_p2() {
    add_ln80_15_fu_438_p2 = (!or_ln80_2_fu_432_p2.read().is_01() || !shl_ln80_8_fu_404_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_2_fu_432_p2.read()) + sc_biguint<32>(shl_ln80_8_fu_404_p2.read()));
}

void checkAxis_1::thread_add_ln80_16_fu_479_p2() {
    add_ln80_16_fu_479_p2 = (!or_ln80_3_fu_473_p2.read().is_01() || !shl_ln80_10_fu_467_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_3_fu_473_p2.read()) + sc_biguint<32>(shl_ln80_10_fu_467_p2.read()));
}

void checkAxis_1::thread_add_ln80_17_fu_501_p2() {
    add_ln80_17_fu_501_p2 = (!or_ln80_4_fu_495_p2.read().is_01() || !shl_ln80_10_fu_467_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(or_ln80_4_fu_495_p2.read()) + sc_biguint<32>(shl_ln80_10_fu_467_p2.read()));
}

void checkAxis_1::thread_add_ln80_fu_296_p2() {
    add_ln80_fu_296_p2 = (!shl_ln80_fu_284_p2.read().is_01() || !shl_ln80_4_fu_290_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln80_fu_284_p2.read()) + sc_biguint<32>(shl_ln80_4_fu_290_p2.read()));
}

void checkAxis_1::thread_add_ln84_fu_267_p2() {
    add_ln84_fu_267_p2 = (!phi_ln84_reg_158.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(phi_ln84_reg_158.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void checkAxis_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void checkAxis_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void checkAxis_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void checkAxis_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void checkAxis_1::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void checkAxis_1::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void checkAxis_1::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void checkAxis_1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void checkAxis_1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void checkAxis_1::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void checkAxis_1::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void checkAxis_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void checkAxis_1::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void checkAxis_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void checkAxis_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void checkAxis_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void checkAxis_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void checkAxis_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void checkAxis_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void checkAxis_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void checkAxis_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln138_fu_524_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void checkAxis_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void checkAxis_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln138_fu_524_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void checkAxis_1::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln138_fu_524_p2.read()))) {
        ap_return = returnCollisions_0_reg_169.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void checkAxis_1::thread_collisions_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        collisions_address0 =  (sc_lv<2>) (zext_ln139_fu_536_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        collisions_address0 =  (sc_lv<2>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        collisions_address0 =  (sc_lv<2>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        collisions_address0 =  (sc_lv<2>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        collisions_address0 =  (sc_lv<2>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        collisions_address0 =  (sc_lv<2>) (zext_ln84_fu_273_p1.read());
    } else {
        collisions_address0 = "XX";
    }
}

void checkAxis_1::thread_collisions_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        collisions_ce0 = ap_const_logic_1;
    } else {
        collisions_ce0 = ap_const_logic_0;
    }
}

void checkAxis_1::thread_collisions_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        collisions_d0 = or_ln133_3_fu_517_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        collisions_d0 = or_ln133_2_fu_454_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        collisions_d0 = or_ln133_1_fu_391_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        collisions_d0 = or_ln133_fu_334_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        collisions_d0 = ap_const_lv64_0;
    } else {
        collisions_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void checkAxis_1::thread_collisions_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_591.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_1_reg_595.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_2_reg_599.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_3_reg_603.read())))) {
        collisions_we0 = ap_const_logic_1;
    } else {
        collisions_we0 = ap_const_logic_0;
    }
}

void checkAxis_1::thread_grp_lineIntersectsPlane_fu_192_ap_start() {
    grp_lineIntersectsPlane_fu_192_ap_start = grp_lineIntersectsPlane_fu_192_ap_start_reg.read();
}

void checkAxis_1::thread_grp_lineIntersectsPlane_fu_192_plane() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_lineIntersectsPlane_fu_192_plane = ap_const_lv32_40400000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_lineIntersectsPlane_fu_192_plane = ap_const_lv32_40000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_lineIntersectsPlane_fu_192_plane = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_lineIntersectsPlane_fu_192_plane = ap_const_lv32_0;
    } else {
        grp_lineIntersectsPlane_fu_192_plane =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void checkAxis_1::thread_grp_pointOnSegment_fu_207_ap_start() {
    grp_pointOnSegment_fu_207_ap_start = grp_pointOnSegment_fu_207_ap_start_reg.read();
}

void checkAxis_1::thread_i_fu_530_p2() {
    i_fu_530_p2 = (!i_1_reg_181.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_181.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void checkAxis_1::thread_icmp_ln138_fu_524_p2() {
    icmp_ln138_fu_524_p2 = (!i_1_reg_181.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_181.read() == ap_const_lv3_4);
}

void checkAxis_1::thread_icmp_ln84_fu_278_p2() {
    icmp_ln84_fu_278_p2 = (!phi_ln84_reg_158.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln84_reg_158.read() == ap_const_lv2_3);
}

void checkAxis_1::thread_or_ln133_1_fu_391_p2() {
    or_ln133_1_fu_391_p2 = (shl_ln133_1_fu_385_p2.read() | shl_ln132_1_fu_369_p2.read());
}

void checkAxis_1::thread_or_ln133_2_fu_454_p2() {
    or_ln133_2_fu_454_p2 = (shl_ln133_2_fu_448_p2.read() | shl_ln132_2_fu_426_p2.read());
}

void checkAxis_1::thread_or_ln133_3_fu_517_p2() {
    or_ln133_3_fu_517_p2 = (shl_ln133_3_fu_511_p2.read() | shl_ln132_3_fu_489_p2.read());
}

void checkAxis_1::thread_or_ln133_fu_334_p2() {
    or_ln133_fu_334_p2 = (shl_ln133_fu_328_p2.read() | shl_ln132_fu_306_p2.read());
}

void checkAxis_1::thread_or_ln80_1_fu_410_p2() {
    or_ln80_1_fu_410_p2 = (shl_ln80_7_fu_398_p2.read() | ap_const_lv32_2);
}

void checkAxis_1::thread_or_ln80_2_fu_432_p2() {
    or_ln80_2_fu_432_p2 = (shl_ln80_7_fu_398_p2.read() | ap_const_lv32_1);
}

void checkAxis_1::thread_or_ln80_3_fu_473_p2() {
    or_ln80_3_fu_473_p2 = (shl_ln80_9_fu_461_p2.read() | ap_const_lv32_3);
}

void checkAxis_1::thread_or_ln80_4_fu_495_p2() {
    or_ln80_4_fu_495_p2 = (shl_ln80_9_fu_461_p2.read() | ap_const_lv32_2);
}

void checkAxis_1::thread_or_ln80_fu_353_p2() {
    or_ln80_fu_353_p2 = (shl_ln80_5_fu_341_p2.read() | ap_const_lv32_1);
}

void checkAxis_1::thread_returnCollisions_fu_541_p2() {
    returnCollisions_fu_541_p2 = (collisions_q0.read() | returnCollisions_0_reg_169.read());
}

void checkAxis_1::thread_shl_ln132_1_fu_369_p2() {
    shl_ln132_1_fu_369_p2 = (!zext_ln132_1_fu_365_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln132_1_fu_365_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln132_2_fu_426_p2() {
    shl_ln132_2_fu_426_p2 = (!zext_ln132_2_fu_422_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln132_2_fu_422_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln132_3_fu_489_p2() {
    shl_ln132_3_fu_489_p2 = (!zext_ln132_3_fu_485_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln132_3_fu_485_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln132_fu_306_p2() {
    shl_ln132_fu_306_p2 = (!zext_ln132_fu_302_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln132_fu_302_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln133_1_fu_385_p2() {
    shl_ln133_1_fu_385_p2 = (!zext_ln133_1_fu_381_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln133_1_fu_381_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln133_2_fu_448_p2() {
    shl_ln133_2_fu_448_p2 = (!zext_ln133_2_fu_444_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln133_2_fu_444_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln133_3_fu_511_p2() {
    shl_ln133_3_fu_511_p2 = (!zext_ln133_3_fu_507_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln133_3_fu_507_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln133_fu_328_p2() {
    shl_ln133_fu_328_p2 = (!zext_ln133_fu_324_p1.read().is_01())? sc_lv<64>(): ap_const_lv64_1 << (unsigned short)zext_ln133_fu_324_p1.read().to_uint();
}

void checkAxis_1::thread_shl_ln80_10_fu_467_p2() {
    shl_ln80_10_fu_467_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_263.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_1::thread_shl_ln80_4_fu_290_p2() {
    shl_ln80_4_fu_290_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_263.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_1::thread_shl_ln80_5_fu_341_p2() {
    shl_ln80_5_fu_341_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_259.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_1::thread_shl_ln80_6_fu_347_p2() {
    shl_ln80_6_fu_347_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_263.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_1::thread_shl_ln80_7_fu_398_p2() {
    shl_ln80_7_fu_398_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_259.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_1::thread_shl_ln80_8_fu_404_p2() {
    shl_ln80_8_fu_404_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): reg_263.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void checkAxis_1::thread_shl_ln80_9_fu_461_p2() {
    shl_ln80_9_fu_461_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_259.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_1::thread_shl_ln80_fu_284_p2() {
    shl_ln80_fu_284_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_259.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void checkAxis_1::thread_zext_ln132_1_fu_365_p1() {
    zext_ln132_1_fu_365_p1 = esl_zext<64,32>(add_ln80_12_fu_359_p2.read());
}

void checkAxis_1::thread_zext_ln132_2_fu_422_p1() {
    zext_ln132_2_fu_422_p1 = esl_zext<64,32>(add_ln80_14_fu_416_p2.read());
}

void checkAxis_1::thread_zext_ln132_3_fu_485_p1() {
    zext_ln132_3_fu_485_p1 = esl_zext<64,32>(add_ln80_16_fu_479_p2.read());
}

void checkAxis_1::thread_zext_ln132_fu_302_p1() {
    zext_ln132_fu_302_p1 = esl_zext<64,32>(add_ln80_fu_296_p2.read());
}

void checkAxis_1::thread_zext_ln133_1_fu_381_p1() {
    zext_ln133_1_fu_381_p1 = esl_zext<64,32>(add_ln80_13_fu_375_p2.read());
}

void checkAxis_1::thread_zext_ln133_2_fu_444_p1() {
    zext_ln133_2_fu_444_p1 = esl_zext<64,32>(add_ln80_15_fu_438_p2.read());
}

void checkAxis_1::thread_zext_ln133_3_fu_507_p1() {
    zext_ln133_3_fu_507_p1 = esl_zext<64,32>(add_ln80_17_fu_501_p2.read());
}

void checkAxis_1::thread_zext_ln133_fu_324_p1() {
    zext_ln133_fu_324_p1 = esl_zext<64,32>(add_ln80_11_fu_318_p2.read());
}

void checkAxis_1::thread_zext_ln139_fu_536_p1() {
    zext_ln139_fu_536_p1 = esl_zext<64,3>(i_1_reg_181.read());
}

void checkAxis_1::thread_zext_ln84_fu_273_p1() {
    zext_ln84_fu_273_p1 = esl_zext<64,2>(phi_ln84_reg_158.read());
}

void checkAxis_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln84_fu_278_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(grp_lineIntersectsPlane_fu_192_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(grp_pointOnSegment_fu_207_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln138_fu_524_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

