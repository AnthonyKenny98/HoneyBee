

================================================================
== Vivado HLS Report for 'segmentIntersectsGri'
================================================================
* Date:           Thu Mar 26 19:25:28 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        honeybee_proj
* Solution:       HBA
* Product family: zynq
* Target device:  xc7z030i-fbg484-2L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.321 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       56|       56| 0.560 us | 0.560 us |   56|   56|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.58>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%grid_z_read = call float @_ssdm_op_Read.ap_auto.float(float %grid_z)" [src/honeybee.c:106]   --->   Operation 8 'read' 'grid_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%grid_y_read = call float @_ssdm_op_Read.ap_auto.float(float %grid_y)" [src/honeybee.c:106]   --->   Operation 9 'read' 'grid_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%grid_x_read = call float @_ssdm_op_Read.ap_auto.float(float %grid_x)" [src/honeybee.c:106]   --->   Operation 10 'read' 'grid_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [4/4] (8.58ns)   --->   "%p_2 = fadd float %grid_z_read, 1.000000e+00" [src/honeybee.c:107]   --->   Operation 11 'fadd' 'p_2' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [4/4] (8.58ns)   --->   "%p_s = fadd float %grid_y_read, 1.000000e+00" [src/honeybee.c:117]   --->   Operation 12 'fadd' 'p_s' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [4/4] (8.58ns)   --->   "%p_1 = fadd float %grid_x_read, 1.000000e+00" [src/honeybee.c:131]   --->   Operation 13 'fadd' 'p_1' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 8.58>
ST_2 : Operation 14 [3/4] (8.58ns)   --->   "%p_2 = fadd float %grid_z_read, 1.000000e+00" [src/honeybee.c:107]   --->   Operation 14 'fadd' 'p_2' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [3/4] (8.58ns)   --->   "%p_s = fadd float %grid_y_read, 1.000000e+00" [src/honeybee.c:117]   --->   Operation 15 'fadd' 'p_s' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [3/4] (8.58ns)   --->   "%p_1 = fadd float %grid_x_read, 1.000000e+00" [src/honeybee.c:131]   --->   Operation 16 'fadd' 'p_1' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.58>
ST_3 : Operation 17 [2/4] (8.58ns)   --->   "%p_2 = fadd float %grid_z_read, 1.000000e+00" [src/honeybee.c:107]   --->   Operation 17 'fadd' 'p_2' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 18 [2/4] (8.58ns)   --->   "%p_s = fadd float %grid_y_read, 1.000000e+00" [src/honeybee.c:117]   --->   Operation 18 'fadd' 'p_s' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 19 [2/4] (8.58ns)   --->   "%p_1 = fadd float %grid_x_read, 1.000000e+00" [src/honeybee.c:131]   --->   Operation 19 'fadd' 'p_1' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.58>
ST_4 : Operation 20 [1/4] (8.58ns)   --->   "%p_2 = fadd float %grid_z_read, 1.000000e+00" [src/honeybee.c:107]   --->   Operation 20 'fadd' 'p_2' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 21 [1/4] (8.58ns)   --->   "%p_s = fadd float %grid_y_read, 1.000000e+00" [src/honeybee.c:117]   --->   Operation 21 'fadd' 'p_s' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 22 [1/4] (8.58ns)   --->   "%p_1 = fadd float %grid_x_read, 1.000000e+00" [src/honeybee.c:131]   --->   Operation 22 'fadd' 'p_1' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 23 [1/1] (0.00ns)   --->   "%edge_p2_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_z)" [src/honeybee.c:106]   --->   Operation 23 'read' 'edge_p2_z_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 24 [1/1] (0.00ns)   --->   "%edge_p2_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_y)" [src/honeybee.c:106]   --->   Operation 24 'read' 'edge_p2_y_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 25 [1/1] (0.00ns)   --->   "%edge_p2_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p2_x)" [src/honeybee.c:106]   --->   Operation 25 'read' 'edge_p2_x_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 26 [1/1] (0.00ns)   --->   "%edge_p1_z_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_z)" [src/honeybee.c:106]   --->   Operation 26 'read' 'edge_p1_z_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 27 [1/1] (0.00ns)   --->   "%edge_p1_y_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_y)" [src/honeybee.c:106]   --->   Operation 27 'read' 'edge_p1_y_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 28 [1/1] (0.00ns)   --->   "%edge_p1_x_read = call float @_ssdm_op_Read.ap_auto.float(float %edge_p1_x)" [src/honeybee.c:106]   --->   Operation 28 'read' 'edge_p1_x_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 29 [2/2] (8.75ns)   --->   "%f1 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float %grid_x_read, float %grid_y_read, float %grid_z_read)" [src/honeybee.c:106]   --->   Operation 29 'call' 'f1' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 30 [2/2] (8.75ns)   --->   "%f2 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float %grid_x_read, float %grid_y_read, float %p_2)" [src/honeybee.c:107]   --->   Operation 30 'call' 'f2' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 31 [2/2] (8.75ns)   --->   "%f3 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %grid_x_read, float %grid_z_read, float %grid_y_read)" [src/honeybee.c:111]   --->   Operation 31 'call' 'f3' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 32 [2/2] (8.75ns)   --->   "%f4 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %grid_x_read, float %grid_z_read, float %p_s)" [src/honeybee.c:117]   --->   Operation 32 'call' 'f4' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 33 [2/2] (8.75ns)   --->   "%f5 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read, float %grid_z_read, float %grid_y_read, float %grid_x_read)" [src/honeybee.c:125]   --->   Operation 33 'call' 'f5' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 34 [2/2] (8.75ns)   --->   "%f6 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read, float %grid_z_read, float %grid_y_read, float %p_1)" [src/honeybee.c:131]   --->   Operation 34 'call' 'f6' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%bitcast_ln11 = bitcast float %grid_x_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 35 'bitcast' 'bitcast_ln11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 36 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln11 = trunc i32 %bitcast_ln11 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 37 'trunc' 'trunc_ln11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%bitcast_ln11_1 = bitcast float %edge_p1_x_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 38 'bitcast' 'bitcast_ln11_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_1, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 39 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln11_1 = trunc i32 %bitcast_ln11_1 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 40 'trunc' 'trunc_ln11_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (1.31ns)   --->   "%icmp_ln11 = icmp ne i8 %tmp, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 41 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (2.02ns)   --->   "%icmp_ln11_1 = icmp eq i23 %trunc_ln11, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 42 'icmp' 'icmp_ln11_1' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (0.80ns)   --->   "%or_ln11 = or i1 %icmp_ln11_1, %icmp_ln11" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 43 'or' 'or_ln11' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (1.31ns)   --->   "%icmp_ln11_2 = icmp ne i8 %tmp_1, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 44 'icmp' 'icmp_ln11_2' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 45 [1/1] (2.02ns)   --->   "%icmp_ln11_3 = icmp eq i23 %trunc_ln11_1, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 45 'icmp' 'icmp_ln11_3' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 46 [1/1] (0.80ns)   --->   "%or_ln11_1 = or i1 %icmp_ln11_3, %icmp_ln11_2" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 46 'or' 'or_ln11_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [2/2] (4.19ns)   --->   "%tmp_2 = fcmp ole float %grid_x_read, %edge_p1_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 47 'fcmp' 'tmp_2' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%bitcast_ln11_2 = bitcast float %p_1 to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 48 'bitcast' 'bitcast_ln11_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_2, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 49 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln11_2 = trunc i32 %bitcast_ln11_2 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 50 'trunc' 'trunc_ln11_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (1.31ns)   --->   "%icmp_ln11_4 = icmp ne i8 %tmp_3, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 51 'icmp' 'icmp_ln11_4' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (2.02ns)   --->   "%icmp_ln11_5 = icmp eq i23 %trunc_ln11_2, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 52 'icmp' 'icmp_ln11_5' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.80ns)   --->   "%or_ln11_2 = or i1 %icmp_ln11_5, %icmp_ln11_4" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 53 'or' 'or_ln11_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [2/2] (4.19ns)   --->   "%tmp_5 = fcmp oge float %p_1, %edge_p1_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 54 'fcmp' 'tmp_5' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%bitcast_ln11_3 = bitcast float %grid_y_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 55 'bitcast' 'bitcast_ln11_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_3, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 56 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln11_3 = trunc i32 %bitcast_ln11_3 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 57 'trunc' 'trunc_ln11_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%bitcast_ln11_4 = bitcast float %edge_p1_y_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 58 'bitcast' 'bitcast_ln11_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_4, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 59 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln11_4 = trunc i32 %bitcast_ln11_4 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 60 'trunc' 'trunc_ln11_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (1.31ns)   --->   "%icmp_ln11_6 = icmp ne i8 %tmp_6, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 61 'icmp' 'icmp_ln11_6' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (2.02ns)   --->   "%icmp_ln11_7 = icmp eq i23 %trunc_ln11_3, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 62 'icmp' 'icmp_ln11_7' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.80ns)   --->   "%or_ln11_3 = or i1 %icmp_ln11_7, %icmp_ln11_6" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 63 'or' 'or_ln11_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (1.31ns)   --->   "%icmp_ln11_8 = icmp ne i8 %tmp_7, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 64 'icmp' 'icmp_ln11_8' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (2.02ns)   --->   "%icmp_ln11_9 = icmp eq i23 %trunc_ln11_4, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 65 'icmp' 'icmp_ln11_9' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.80ns)   --->   "%or_ln11_4 = or i1 %icmp_ln11_9, %icmp_ln11_8" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 66 'or' 'or_ln11_4' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [2/2] (4.19ns)   --->   "%tmp_8 = fcmp ole float %grid_y_read, %edge_p1_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 67 'fcmp' 'tmp_8' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%bitcast_ln11_5 = bitcast float %p_s to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 68 'bitcast' 'bitcast_ln11_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_5, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 69 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln11_5 = trunc i32 %bitcast_ln11_5 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 70 'trunc' 'trunc_ln11_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (1.31ns)   --->   "%icmp_ln11_10 = icmp ne i8 %tmp_9, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 71 'icmp' 'icmp_ln11_10' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (2.02ns)   --->   "%icmp_ln11_11 = icmp eq i23 %trunc_ln11_5, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 72 'icmp' 'icmp_ln11_11' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.80ns)   --->   "%or_ln11_5 = or i1 %icmp_ln11_11, %icmp_ln11_10" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 73 'or' 'or_ln11_5' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [2/2] (4.19ns)   --->   "%tmp_s = fcmp oge float %p_s, %edge_p1_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 74 'fcmp' 'tmp_s' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%bitcast_ln11_6 = bitcast float %grid_z_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 75 'bitcast' 'bitcast_ln11_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_6, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 76 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln11_6 = trunc i32 %bitcast_ln11_6 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 77 'trunc' 'trunc_ln11_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%bitcast_ln11_7 = bitcast float %edge_p1_z_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 78 'bitcast' 'bitcast_ln11_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_7, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 79 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln11_7 = trunc i32 %bitcast_ln11_7 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 80 'trunc' 'trunc_ln11_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (1.31ns)   --->   "%icmp_ln11_12 = icmp ne i8 %tmp_4, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 81 'icmp' 'icmp_ln11_12' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (2.02ns)   --->   "%icmp_ln11_13 = icmp eq i23 %trunc_ln11_6, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 82 'icmp' 'icmp_ln11_13' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.80ns)   --->   "%or_ln11_6 = or i1 %icmp_ln11_13, %icmp_ln11_12" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 83 'or' 'or_ln11_6' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (1.31ns)   --->   "%icmp_ln11_14 = icmp ne i8 %tmp_10, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 84 'icmp' 'icmp_ln11_14' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (2.02ns)   --->   "%icmp_ln11_15 = icmp eq i23 %trunc_ln11_7, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 85 'icmp' 'icmp_ln11_15' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (0.80ns)   --->   "%or_ln11_7 = or i1 %icmp_ln11_15, %icmp_ln11_14" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 86 'or' 'or_ln11_7' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [2/2] (4.19ns)   --->   "%tmp_11 = fcmp ole float %grid_z_read, %edge_p1_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 87 'fcmp' 'tmp_11' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%bitcast_ln11_8 = bitcast float %p_2 to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 88 'bitcast' 'bitcast_ln11_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_8, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 89 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%trunc_ln11_8 = trunc i32 %bitcast_ln11_8 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 90 'trunc' 'trunc_ln11_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (1.31ns)   --->   "%icmp_ln11_16 = icmp ne i8 %tmp_12, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 91 'icmp' 'icmp_ln11_16' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (2.02ns)   --->   "%icmp_ln11_17 = icmp eq i23 %trunc_ln11_8, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 92 'icmp' 'icmp_ln11_17' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.80ns)   --->   "%or_ln11_8 = or i1 %icmp_ln11_17, %icmp_ln11_16" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 93 'or' 'or_ln11_8' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 94 [2/2] (4.19ns)   --->   "%tmp_13 = fcmp oge float %p_2, %edge_p1_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 94 'fcmp' 'tmp_13' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%bitcast_ln11_9 = bitcast float %edge_p2_x_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 95 'bitcast' 'bitcast_ln11_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_9, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 96 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln11_9 = trunc i32 %bitcast_ln11_9 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 97 'trunc' 'trunc_ln11_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (1.31ns)   --->   "%icmp_ln11_18 = icmp ne i8 %tmp_14, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 98 'icmp' 'icmp_ln11_18' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (2.02ns)   --->   "%icmp_ln11_19 = icmp eq i23 %trunc_ln11_9, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 99 'icmp' 'icmp_ln11_19' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 100 [1/1] (0.80ns)   --->   "%or_ln11_9 = or i1 %icmp_ln11_19, %icmp_ln11_18" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 100 'or' 'or_ln11_9' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [2/2] (4.19ns)   --->   "%tmp_15 = fcmp ole float %grid_x_read, %edge_p2_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 101 'fcmp' 'tmp_15' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 102 [2/2] (4.19ns)   --->   "%tmp_16 = fcmp oge float %p_1, %edge_p2_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 102 'fcmp' 'tmp_16' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%bitcast_ln11_10 = bitcast float %edge_p2_y_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 103 'bitcast' 'bitcast_ln11_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_17 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_10, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 104 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln11_10 = trunc i32 %bitcast_ln11_10 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 105 'trunc' 'trunc_ln11_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (1.31ns)   --->   "%icmp_ln11_20 = icmp ne i8 %tmp_17, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 106 'icmp' 'icmp_ln11_20' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 107 [1/1] (2.02ns)   --->   "%icmp_ln11_21 = icmp eq i23 %trunc_ln11_10, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 107 'icmp' 'icmp_ln11_21' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.80ns)   --->   "%or_ln11_10 = or i1 %icmp_ln11_21, %icmp_ln11_20" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 108 'or' 'or_ln11_10' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 109 [2/2] (4.19ns)   --->   "%tmp_18 = fcmp ole float %grid_y_read, %edge_p2_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 109 'fcmp' 'tmp_18' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 110 [2/2] (4.19ns)   --->   "%tmp_19 = fcmp oge float %p_s, %edge_p2_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 110 'fcmp' 'tmp_19' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%bitcast_ln11_11 = bitcast float %edge_p2_z_read to i32" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 111 'bitcast' 'bitcast_ln11_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln11_11, i32 23, i32 30)" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 112 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln11_11 = trunc i32 %bitcast_ln11_11 to i23" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 113 'trunc' 'trunc_ln11_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (1.31ns)   --->   "%icmp_ln11_22 = icmp ne i8 %tmp_20, -1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 114 'icmp' 'icmp_ln11_22' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 115 [1/1] (2.02ns)   --->   "%icmp_ln11_23 = icmp eq i23 %trunc_ln11_11, 0" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 115 'icmp' 'icmp_ln11_23' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 116 [1/1] (0.80ns)   --->   "%or_ln11_11 = or i1 %icmp_ln11_23, %icmp_ln11_22" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 116 'or' 'or_ln11_11' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 117 [2/2] (4.19ns)   --->   "%tmp_21 = fcmp ole float %grid_z_read, %edge_p2_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 117 'fcmp' 'tmp_21' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 118 [2/2] (4.19ns)   --->   "%tmp_22 = fcmp oge float %p_2, %edge_p2_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 118 'fcmp' 'tmp_22' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.19>
ST_6 : Operation 119 [1/2] (8.19ns)   --->   "%f1 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float %grid_x_read, float %grid_y_read, float %grid_z_read)" [src/honeybee.c:106]   --->   Operation 119 'call' 'f1' <Predicate = true> <Delay = 8.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 120 [1/2] (8.19ns)   --->   "%f2 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_y_read, float %edge_p1_z_read, float %edge_p2_x_read, float %edge_p2_y_read, float %edge_p2_z_read, float %grid_x_read, float %grid_y_read, float %p_2)" [src/honeybee.c:107]   --->   Operation 120 'call' 'f2' <Predicate = true> <Delay = 8.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 121 [1/2] (8.19ns)   --->   "%f3 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %grid_x_read, float %grid_z_read, float %grid_y_read)" [src/honeybee.c:111]   --->   Operation 121 'call' 'f3' <Predicate = true> <Delay = 8.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 122 [1/2] (8.19ns)   --->   "%f4 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_x_read, float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p2_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %grid_x_read, float %grid_z_read, float %p_s)" [src/honeybee.c:117]   --->   Operation 122 'call' 'f4' <Predicate = true> <Delay = 8.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 123 [1/2] (8.19ns)   --->   "%f5 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read, float %grid_z_read, float %grid_y_read, float %grid_x_read)" [src/honeybee.c:125]   --->   Operation 123 'call' 'f5' <Predicate = true> <Delay = 8.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 124 [1/2] (8.19ns)   --->   "%f6 = call fastcc i1 @segmentIntersectsFac(float %edge_p1_z_read, float %edge_p1_y_read, float %edge_p1_x_read, float %edge_p2_z_read, float %edge_p2_y_read, float %edge_p2_x_read, float %grid_z_read, float %grid_y_read, float %p_1)" [src/honeybee.c:131]   --->   Operation 124 'call' 'f6' <Predicate = true> <Delay = 8.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_1)   --->   "%and_ln11 = and i1 %or_ln11, %or_ln11_1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 125 'and' 'and_ln11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 126 [1/2] (4.19ns)   --->   "%tmp_2 = fcmp ole float %grid_x_read, %edge_p1_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 126 'fcmp' 'tmp_2' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_1)   --->   "%and_ln11_1 = and i1 %and_ln11, %tmp_2" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 127 'and' 'and_ln11_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_1)   --->   "%and_ln11_2 = and i1 %or_ln11_2, %or_ln11_1" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 128 'and' 'and_ln11_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 129 [1/2] (4.19ns)   --->   "%tmp_5 = fcmp oge float %p_1, %edge_p1_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 129 'fcmp' 'tmp_5' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_1)   --->   "%and_ln11_3 = and i1 %and_ln11_2, %tmp_5" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 130 'and' 'and_ln11_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_4)   --->   "%and_ln11_4 = and i1 %or_ln11_3, %or_ln11_4" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 131 'and' 'and_ln11_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 132 [1/2] (4.19ns)   --->   "%tmp_8 = fcmp ole float %grid_y_read, %edge_p1_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 132 'fcmp' 'tmp_8' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_4)   --->   "%and_ln11_5 = and i1 %and_ln11_4, %tmp_8" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 133 'and' 'and_ln11_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_2)   --->   "%and_ln11_6 = and i1 %or_ln11_5, %or_ln11_4" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 134 'and' 'and_ln11_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 135 [1/2] (4.19ns)   --->   "%tmp_s = fcmp oge float %p_s, %edge_p1_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 135 'fcmp' 'tmp_s' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_2)   --->   "%and_ln11_7 = and i1 %and_ln11_6, %tmp_s" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 136 'and' 'and_ln11_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_2)   --->   "%and_ln11_8 = and i1 %or_ln11_6, %or_ln11_7" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 137 'and' 'and_ln11_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 138 [1/2] (4.19ns)   --->   "%tmp_11 = fcmp ole float %grid_z_read, %edge_p1_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 138 'fcmp' 'tmp_11' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_2)   --->   "%and_ln11_9 = and i1 %and_ln11_8, %tmp_11" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 139 'and' 'and_ln11_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 140 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln141_1 = and i1 %and_ln11_1, %and_ln11_3" [src/honeybee.c:141]   --->   Operation 140 'and' 'and_ln141_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 141 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln141_2 = and i1 %and_ln11_7, %and_ln11_9" [src/honeybee.c:141]   --->   Operation 141 'and' 'and_ln141_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_4)   --->   "%and_ln141_3 = and i1 %and_ln141_2, %and_ln11_5" [src/honeybee.c:141]   --->   Operation 142 'and' 'and_ln141_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 143 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln141_4 = and i1 %and_ln141_3, %and_ln141_1" [src/honeybee.c:141]   --->   Operation 143 'and' 'and_ln141_4' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_5)   --->   "%and_ln11_10 = and i1 %or_ln11_8, %or_ln11_7" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 144 'and' 'and_ln11_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 145 [1/2] (4.19ns)   --->   "%tmp_13 = fcmp oge float %p_2, %edge_p1_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 145 'fcmp' 'tmp_13' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_5)   --->   "%and_ln11_11 = and i1 %and_ln11_10, %tmp_13" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 146 'and' 'and_ln11_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln141_5)   --->   "%and_ln141 = and i1 %and_ln11_11, %and_ln141_4" [src/honeybee.c:141]   --->   Operation 147 'and' 'and_ln141' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_22)   --->   "%and_ln11_12 = and i1 %or_ln11, %or_ln11_9" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 148 'and' 'and_ln11_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 149 [1/2] (4.19ns)   --->   "%tmp_15 = fcmp ole float %grid_x_read, %edge_p2_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 149 'fcmp' 'tmp_15' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_22)   --->   "%and_ln11_13 = and i1 %and_ln11_12, %tmp_15" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 150 'and' 'and_ln11_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_22)   --->   "%and_ln11_14 = and i1 %or_ln11_2, %or_ln11_9" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 151 'and' 'and_ln11_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 152 [1/2] (4.19ns)   --->   "%tmp_16 = fcmp oge float %p_1, %edge_p2_x_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 152 'fcmp' 'tmp_16' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_22)   --->   "%and_ln11_15 = and i1 %and_ln11_14, %tmp_16" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 153 'and' 'and_ln11_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_25)   --->   "%and_ln11_16 = and i1 %or_ln11_3, %or_ln11_10" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 154 'and' 'and_ln11_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 155 [1/2] (4.19ns)   --->   "%tmp_18 = fcmp ole float %grid_y_read, %edge_p2_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 155 'fcmp' 'tmp_18' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_25)   --->   "%and_ln11_17 = and i1 %and_ln11_16, %tmp_18" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 156 'and' 'and_ln11_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_23)   --->   "%and_ln11_18 = and i1 %or_ln11_5, %or_ln11_10" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 157 'and' 'and_ln11_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 158 [1/2] (4.19ns)   --->   "%tmp_19 = fcmp oge float %p_s, %edge_p2_y_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 158 'fcmp' 'tmp_19' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_23)   --->   "%and_ln11_19 = and i1 %and_ln11_18, %tmp_19" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 159 'and' 'and_ln11_19' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_23)   --->   "%and_ln11_20 = and i1 %or_ln11_6, %or_ln11_11" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 160 'and' 'and_ln11_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 161 [1/2] (4.19ns)   --->   "%tmp_21 = fcmp ole float %grid_z_read, %edge_p2_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 161 'fcmp' 'tmp_21' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_23)   --->   "%and_ln11_21 = and i1 %and_ln11_20, %tmp_21" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 162 'and' 'and_ln11_21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 163 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln11_22 = and i1 %and_ln11_13, %and_ln11_15" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 163 'and' 'and_ln11_22' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 164 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln11_23 = and i1 %and_ln11_19, %and_ln11_21" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 164 'and' 'and_ln11_23' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node and_ln11_25)   --->   "%and_ln11_24 = and i1 %and_ln11_23, %and_ln11_17" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 165 'and' 'and_ln11_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 166 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln11_25 = and i1 %and_ln11_24, %and_ln11_22" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 166 'and' 'and_ln11_25' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 167 [1/2] (4.19ns)   --->   "%tmp_22 = fcmp oge float %p_2, %edge_p2_z_read" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 167 'fcmp' 'tmp_22' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 168 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln141_5 = and i1 %and_ln141, %and_ln11_25" [src/honeybee.c:141]   --->   Operation 168 'and' 'and_ln141_5' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.60>
ST_7 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node or_ln143_4)   --->   "%and_ln11_26 = and i1 %or_ln11_8, %or_ln11_11" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 169 'and' 'and_ln11_26' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node or_ln143_4)   --->   "%and_ln11_27 = and i1 %and_ln11_26, %tmp_22" [src/honeybee.c:11->src/honeybee.c:141]   --->   Operation 170 'and' 'and_ln11_27' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node or_ln143_4)   --->   "%bothEndPointsInGrid = and i1 %and_ln141_5, %and_ln11_27" [src/honeybee.c:141]   --->   Operation 171 'and' 'bothEndPointsInGrid' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node or_ln143)   --->   "%or_ln143_1 = or i1 %f2, %f3" [src/honeybee.c:143]   --->   Operation 172 'or' 'or_ln143_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node or_ln143)   --->   "%or_ln143_2 = or i1 %or_ln143_1, %f1" [src/honeybee.c:143]   --->   Operation 173 'or' 'or_ln143_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node or_ln143)   --->   "%or_ln143_3 = or i1 %f4, %f6" [src/honeybee.c:143]   --->   Operation 174 'or' 'or_ln143_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 175 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln143_4 = or i1 %f5, %bothEndPointsInGrid" [src/honeybee.c:143]   --->   Operation 175 'or' 'or_ln143_4' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node or_ln143)   --->   "%or_ln143_5 = or i1 %or_ln143_4, %or_ln143_3" [src/honeybee.c:143]   --->   Operation 176 'or' 'or_ln143_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 177 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln143 = or i1 %or_ln143_5, %or_ln143_2" [src/honeybee.c:143]   --->   Operation 177 'or' 'or_ln143' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 178 [1/1] (0.00ns)   --->   "ret i1 %or_ln143" [src/honeybee.c:143]   --->   Operation 178 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.59ns
The critical path consists of the following:
	wire read on port 'grid_z' (src/honeybee.c:106) [10]  (0 ns)
	'fadd' operation ('p_2', src/honeybee.c:107) [20]  (8.59 ns)

 <State 2>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('p_2', src/honeybee.c:107) [20]  (8.59 ns)

 <State 3>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('p_2', src/honeybee.c:107) [20]  (8.59 ns)

 <State 4>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('p_2', src/honeybee.c:107) [20]  (8.59 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	wire read on port 'edge_p2_z' (src/honeybee.c:106) [13]  (0 ns)
	'call' operation ('f1', src/honeybee.c:106) to 'segmentIntersectsFac' [19]  (8.75 ns)

 <State 6>: 8.2ns
The critical path consists of the following:
	'call' operation ('f1', src/honeybee.c:106) to 'segmentIntersectsFac' [19]  (8.2 ns)

 <State 7>: 1.6ns
The critical path consists of the following:
	'and' operation ('and_ln11_26', src/honeybee.c:11->src/honeybee.c:141) [142]  (0 ns)
	'and' operation ('and_ln11_27', src/honeybee.c:11->src/honeybee.c:141) [144]  (0 ns)
	'and' operation ('bothEndPointsInGrid', src/honeybee.c:141) [146]  (0 ns)
	'or' operation ('or_ln143_4', src/honeybee.c:143) [150]  (0.8 ns)
	'or' operation ('or_ln143_5', src/honeybee.c:143) [151]  (0 ns)
	'or' operation ('or_ln143', src/honeybee.c:143) [152]  (0.8 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
