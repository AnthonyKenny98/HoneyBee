-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity honeybee is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    edge_p1_x : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_p1_y : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_p1_z : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_p2_x : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_p2_y : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_p2_z : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of honeybee is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "honeybee,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z030i-fbg484-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.321400,HLS_SYN_LAT=253,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2784,HLS_SYN_FF=403918,HLS_SYN_LUT=835651,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal k_fu_405_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_1018 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grid_z_reg_1023 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln155_fu_411_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln155_reg_1043 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_segmentIntersectsGri_fu_151_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_151_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_166_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_166_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_181_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_181_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_196_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_196_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_211_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_211_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_226_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_226_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_241_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_241_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_256_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_256_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_271_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_271_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_286_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_286_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_301_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_301_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_316_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_316_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_331_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_331_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_346_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_346_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_361_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_361_ap_done : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_376_ap_ready : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_376_ap_done : STD_LOGIC;
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal grp_segmentIntersectsGri_fu_151_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1054 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln164_1_fu_415_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln164_1_reg_1059 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_segmentIntersectsGri_fu_166_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_0_1_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln164_fu_425_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln164_reg_1069 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_segmentIntersectsGri_fu_181_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_0_2_reg_1074 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_196_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_0_3_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_211_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_1_reg_1084 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_226_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_1_1_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_241_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_1_2_reg_1094 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_256_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_1_3_reg_1099 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_271_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_2_reg_1104 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_286_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_2_1_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_301_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_2_2_reg_1114 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_316_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_2_3_reg_1119 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_331_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_3_reg_1124 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_346_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_3_1_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_361_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_3_2_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_segmentIntersectsGri_fu_376_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_3_3_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_fu_431_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal or_ln161_15_fu_884_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_segmentIntersectsGri_fu_151_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_151_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_166_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_166_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_181_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_181_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_196_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_196_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_211_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_211_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_226_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_226_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_241_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_241_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_256_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_256_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_271_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_271_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_286_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_286_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_301_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_301_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_316_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_316_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_331_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_331_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_346_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_346_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_361_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_361_ap_idle : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_376_ap_start : STD_LOGIC;
    signal grp_segmentIntersectsGri_fu_376_ap_idle : STD_LOGIC;
    signal k_0_reg_116 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_0_reg_127 : STD_LOGIC_VECTOR (6 downto 0);
    signal collisions_0_reg_139 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_segmentIntersectsGri_fu_151_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_segmentIntersectsGri_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_181_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_196_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_211_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_226_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_241_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_256_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_271_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_286_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_301_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_316_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_331_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_346_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_361_ap_start_reg : STD_LOGIC := '0';
    signal grp_segmentIntersectsGri_fu_376_ap_start_reg : STD_LOGIC := '0';
    signal grp_fu_391_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_2_fu_421_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln164_fu_437_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln155_1_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_fu_454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_3_fu_467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_1_fu_470_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_4_fu_483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_2_fu_486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln164_2_fu_499_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln164_5_fu_504_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_3_fu_508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_fu_442_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln164_1_fu_521_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln164_1_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_4_fu_531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln164_3_fu_544_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln164_8_fu_553_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_5_fu_557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_7_fu_549_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln164_2_fu_570_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln164_9_fu_576_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_6_fu_580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln164_4_fu_593_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln164_10_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_7_fu_602_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln164_5_fu_615_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln164_6_fu_527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_8_fu_624_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln164_3_fu_637_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln164_12_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_9_fu_647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln164_4_fu_660_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln164_13_fu_666_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_10_fu_670_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln164_5_fu_683_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln164_14_fu_689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_11_fu_693_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_11_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_12_fu_706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln164_6_fu_719_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln164_16_fu_728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_13_fu_732_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_15_fu_724_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln164_6_fu_745_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln164_17_fu_751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_14_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln164_7_fu_768_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln164_18_fu_773_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln162_15_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_fu_460_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_1_fu_476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_2_fu_492_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_3_fu_514_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_1_fu_796_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_fu_790_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_4_fu_537_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_5_fu_563_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_6_fu_586_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_7_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_4_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_3_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_5_fu_820_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_2_fu_802_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_8_fu_630_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_9_fu_653_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_10_fu_676_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_11_fu_699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_8_fu_838_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_7_fu_832_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_12_fu_712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_13_fu_738_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_14_fu_761_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln161_15_fu_783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_11_fu_856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_10_fu_850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_12_fu_862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_9_fu_844_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_13_fu_868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_6_fu_826_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln161_14_fu_874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln161_fu_880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln155_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component segmentIntersectsGri IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        edge_p1_x : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_p1_y : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_p1_z : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_p2_x : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_p2_y : IN STD_LOGIC_VECTOR (31 downto 0);
        edge_p2_z : IN STD_LOGIC_VECTOR (31 downto 0);
        grid_x : IN STD_LOGIC_VECTOR (31 downto 0);
        grid_y : IN STD_LOGIC_VECTOR (31 downto 0);
        grid_z : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component honeybee_sitofp_3hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_segmentIntersectsGri_fu_151 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_151_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_151_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_151_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_151_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_0,
        grid_y => ap_const_lv32_0,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_151_ap_return);

    grp_segmentIntersectsGri_fu_166 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_166_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_166_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_166_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_166_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_3F800000,
        grid_y => ap_const_lv32_0,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_166_ap_return);

    grp_segmentIntersectsGri_fu_181 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_181_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_181_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_181_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_181_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40000000,
        grid_y => ap_const_lv32_0,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_181_ap_return);

    grp_segmentIntersectsGri_fu_196 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_196_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_196_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_196_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_196_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40400000,
        grid_y => ap_const_lv32_0,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_196_ap_return);

    grp_segmentIntersectsGri_fu_211 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_211_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_211_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_211_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_211_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_0,
        grid_y => ap_const_lv32_3F800000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_211_ap_return);

    grp_segmentIntersectsGri_fu_226 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_226_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_226_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_226_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_226_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_3F800000,
        grid_y => ap_const_lv32_3F800000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_226_ap_return);

    grp_segmentIntersectsGri_fu_241 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_241_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_241_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_241_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_241_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40000000,
        grid_y => ap_const_lv32_3F800000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_241_ap_return);

    grp_segmentIntersectsGri_fu_256 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_256_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_256_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_256_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_256_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40400000,
        grid_y => ap_const_lv32_3F800000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_256_ap_return);

    grp_segmentIntersectsGri_fu_271 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_271_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_271_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_271_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_271_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_0,
        grid_y => ap_const_lv32_40000000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_271_ap_return);

    grp_segmentIntersectsGri_fu_286 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_286_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_286_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_286_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_286_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_3F800000,
        grid_y => ap_const_lv32_40000000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_286_ap_return);

    grp_segmentIntersectsGri_fu_301 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_301_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_301_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_301_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_301_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40000000,
        grid_y => ap_const_lv32_40000000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_301_ap_return);

    grp_segmentIntersectsGri_fu_316 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_316_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_316_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_316_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_316_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40400000,
        grid_y => ap_const_lv32_40000000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_316_ap_return);

    grp_segmentIntersectsGri_fu_331 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_331_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_331_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_331_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_331_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_0,
        grid_y => ap_const_lv32_40400000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_331_ap_return);

    grp_segmentIntersectsGri_fu_346 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_346_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_346_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_346_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_346_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_3F800000,
        grid_y => ap_const_lv32_40400000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_346_ap_return);

    grp_segmentIntersectsGri_fu_361 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_361_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_361_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_361_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_361_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40000000,
        grid_y => ap_const_lv32_40400000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_361_ap_return);

    grp_segmentIntersectsGri_fu_376 : component segmentIntersectsGri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_segmentIntersectsGri_fu_376_ap_start,
        ap_done => grp_segmentIntersectsGri_fu_376_ap_done,
        ap_idle => grp_segmentIntersectsGri_fu_376_ap_idle,
        ap_ready => grp_segmentIntersectsGri_fu_376_ap_ready,
        edge_p1_x => edge_p1_x,
        edge_p1_y => edge_p1_y,
        edge_p1_z => edge_p1_z,
        edge_p2_x => edge_p2_x,
        edge_p2_y => edge_p2_y,
        edge_p2_z => edge_p2_z,
        grid_x => ap_const_lv32_40400000,
        grid_y => ap_const_lv32_40400000,
        grid_z => grid_z_reg_1023,
        ap_return => grp_segmentIntersectsGri_fu_376_ap_return);

    honeybee_sitofp_3hbi_U62 : component honeybee_sitofp_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_391_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_391_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_151_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_151_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_151_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_151_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_151_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_181_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_181_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_181_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_181_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_181_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_196_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_196_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_196_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_196_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_196_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_211_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_211_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_211_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_211_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_211_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_226_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_226_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_226_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_226_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_226_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_241_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_241_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_241_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_241_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_241_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_256_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_256_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_256_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_256_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_256_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_271_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_271_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_271_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_271_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_271_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_286_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_286_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_286_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_286_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_286_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_301_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_301_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_301_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_301_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_301_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_316_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_316_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_316_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_316_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_316_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_331_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_331_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_331_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_331_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_331_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_346_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_346_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_346_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_346_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_346_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_361_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_361_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_361_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_361_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_361_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_segmentIntersectsGri_fu_376_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_segmentIntersectsGri_fu_376_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_segmentIntersectsGri_fu_376_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_segmentIntersectsGri_fu_376_ap_ready = ap_const_logic_1)) then 
                    grp_segmentIntersectsGri_fu_376_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    b_0_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                b_0_reg_127 <= b_fu_431_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                b_0_reg_127 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    collisions_0_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                collisions_0_reg_139 <= or_ln161_15_fu_884_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                collisions_0_reg_139 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    k_0_reg_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                k_0_reg_116 <= k_reg_1018;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                k_0_reg_116 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then
                    add_ln164_reg_1069(6 downto 1) <= add_ln164_fu_425_p2(6 downto 1);
                    or_ln164_1_reg_1059(5 downto 1) <= or_ln164_1_fu_415_p2(5 downto 1);
                tmp_41_0_1_reg_1064 <= grp_segmentIntersectsGri_fu_166_ap_return;
                tmp_41_0_2_reg_1074 <= grp_segmentIntersectsGri_fu_181_ap_return;
                tmp_41_0_3_reg_1079 <= grp_segmentIntersectsGri_fu_196_ap_return;
                tmp_41_1_1_reg_1089 <= grp_segmentIntersectsGri_fu_226_ap_return;
                tmp_41_1_2_reg_1094 <= grp_segmentIntersectsGri_fu_241_ap_return;
                tmp_41_1_3_reg_1099 <= grp_segmentIntersectsGri_fu_256_ap_return;
                tmp_41_1_reg_1084 <= grp_segmentIntersectsGri_fu_211_ap_return;
                tmp_41_2_1_reg_1109 <= grp_segmentIntersectsGri_fu_286_ap_return;
                tmp_41_2_2_reg_1114 <= grp_segmentIntersectsGri_fu_301_ap_return;
                tmp_41_2_3_reg_1119 <= grp_segmentIntersectsGri_fu_316_ap_return;
                tmp_41_2_reg_1104 <= grp_segmentIntersectsGri_fu_271_ap_return;
                tmp_41_3_1_reg_1129 <= grp_segmentIntersectsGri_fu_346_ap_return;
                tmp_41_3_2_reg_1134 <= grp_segmentIntersectsGri_fu_361_ap_return;
                tmp_41_3_3_reg_1139 <= grp_segmentIntersectsGri_fu_376_ap_return;
                tmp_41_3_reg_1124 <= grp_segmentIntersectsGri_fu_331_ap_return;
                tmp_s_reg_1054 <= grp_segmentIntersectsGri_fu_151_ap_return;
                trunc_ln155_reg_1043 <= trunc_ln155_fu_411_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                grid_z_reg_1023 <= grp_fu_391_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                k_reg_1018 <= k_fu_405_p2;
            end if;
        end if;
    end process;
    or_ln164_1_reg_1059(0) <= '1';
    add_ln164_reg_1069(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_block_state7_on_subcall_done, icmp_ln155_fu_399_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln155_fu_399_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln164_1_fu_521_p2 <= std_logic_vector(unsigned(ap_const_lv7_4) + unsigned(zext_ln164_fu_442_p1));
    add_ln164_2_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(zext_ln164_7_fu_549_p1));
    add_ln164_3_fu_637_p2 <= std_logic_vector(unsigned(ap_const_lv7_5) + unsigned(zext_ln164_fu_442_p1));
    add_ln164_4_fu_660_p2 <= std_logic_vector(unsigned(ap_const_lv7_6) + unsigned(zext_ln164_fu_442_p1));
    add_ln164_5_fu_683_p2 <= std_logic_vector(unsigned(ap_const_lv7_7) + unsigned(zext_ln164_fu_442_p1));
    add_ln164_6_fu_745_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(zext_ln164_15_fu_724_p1));
    add_ln164_fu_425_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(zext_ln164_2_fu_421_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state7_on_subcall_done_assign_proc : process(grp_segmentIntersectsGri_fu_151_ap_done, grp_segmentIntersectsGri_fu_166_ap_done, grp_segmentIntersectsGri_fu_181_ap_done, grp_segmentIntersectsGri_fu_196_ap_done, grp_segmentIntersectsGri_fu_211_ap_done, grp_segmentIntersectsGri_fu_226_ap_done, grp_segmentIntersectsGri_fu_241_ap_done, grp_segmentIntersectsGri_fu_256_ap_done, grp_segmentIntersectsGri_fu_271_ap_done, grp_segmentIntersectsGri_fu_286_ap_done, grp_segmentIntersectsGri_fu_301_ap_done, grp_segmentIntersectsGri_fu_316_ap_done, grp_segmentIntersectsGri_fu_331_ap_done, grp_segmentIntersectsGri_fu_346_ap_done, grp_segmentIntersectsGri_fu_361_ap_done, grp_segmentIntersectsGri_fu_376_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((grp_segmentIntersectsGri_fu_241_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_226_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_211_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_196_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_181_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_166_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_151_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_376_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_361_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_346_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_331_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_316_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_301_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_286_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_271_ap_done = ap_const_logic_0) or (grp_segmentIntersectsGri_fu_256_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln155_fu_399_p2)
    begin
        if (((icmp_ln155_fu_399_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln155_fu_399_p2)
    begin
        if (((icmp_ln155_fu_399_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= collisions_0_reg_139;
    b_fu_431_p2 <= std_logic_vector(unsigned(ap_const_lv7_10) + unsigned(b_0_reg_127));
    grp_fu_391_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_reg_116),32));
    grp_segmentIntersectsGri_fu_151_ap_start <= grp_segmentIntersectsGri_fu_151_ap_start_reg;
    grp_segmentIntersectsGri_fu_166_ap_start <= grp_segmentIntersectsGri_fu_166_ap_start_reg;
    grp_segmentIntersectsGri_fu_181_ap_start <= grp_segmentIntersectsGri_fu_181_ap_start_reg;
    grp_segmentIntersectsGri_fu_196_ap_start <= grp_segmentIntersectsGri_fu_196_ap_start_reg;
    grp_segmentIntersectsGri_fu_211_ap_start <= grp_segmentIntersectsGri_fu_211_ap_start_reg;
    grp_segmentIntersectsGri_fu_226_ap_start <= grp_segmentIntersectsGri_fu_226_ap_start_reg;
    grp_segmentIntersectsGri_fu_241_ap_start <= grp_segmentIntersectsGri_fu_241_ap_start_reg;
    grp_segmentIntersectsGri_fu_256_ap_start <= grp_segmentIntersectsGri_fu_256_ap_start_reg;
    grp_segmentIntersectsGri_fu_271_ap_start <= grp_segmentIntersectsGri_fu_271_ap_start_reg;
    grp_segmentIntersectsGri_fu_286_ap_start <= grp_segmentIntersectsGri_fu_286_ap_start_reg;
    grp_segmentIntersectsGri_fu_301_ap_start <= grp_segmentIntersectsGri_fu_301_ap_start_reg;
    grp_segmentIntersectsGri_fu_316_ap_start <= grp_segmentIntersectsGri_fu_316_ap_start_reg;
    grp_segmentIntersectsGri_fu_331_ap_start <= grp_segmentIntersectsGri_fu_331_ap_start_reg;
    grp_segmentIntersectsGri_fu_346_ap_start <= grp_segmentIntersectsGri_fu_346_ap_start_reg;
    grp_segmentIntersectsGri_fu_361_ap_start <= grp_segmentIntersectsGri_fu_361_ap_start_reg;
    grp_segmentIntersectsGri_fu_376_ap_start <= grp_segmentIntersectsGri_fu_376_ap_start_reg;
    icmp_ln155_fu_399_p2 <= "1" when (k_0_reg_116 = ap_const_lv3_4) else "0";
    k_fu_405_p2 <= std_logic_vector(unsigned(k_0_reg_116) + unsigned(ap_const_lv3_1));
    or_ln161_10_fu_850_p2 <= (select_ln161_13_fu_738_p3 or select_ln161_12_fu_712_p3);
    or_ln161_11_fu_856_p2 <= (select_ln161_15_fu_783_p3 or select_ln161_14_fu_761_p3);
    or_ln161_12_fu_862_p2 <= (or_ln161_11_fu_856_p2 or or_ln161_10_fu_850_p2);
    or_ln161_13_fu_868_p2 <= (or_ln161_9_fu_844_p2 or or_ln161_12_fu_862_p2);
    or_ln161_14_fu_874_p2 <= (or_ln161_6_fu_826_p2 or or_ln161_13_fu_868_p2);
    or_ln161_15_fu_884_p2 <= (sext_ln161_fu_880_p1 or collisions_0_reg_139);
    or_ln161_1_fu_796_p2 <= (select_ln161_3_fu_514_p3 or select_ln161_2_fu_492_p3);
    or_ln161_2_fu_802_p2 <= (or_ln161_fu_790_p2 or or_ln161_1_fu_796_p2);
    or_ln161_3_fu_808_p2 <= (select_ln161_5_fu_563_p3 or select_ln161_4_fu_537_p3);
    or_ln161_4_fu_814_p2 <= (select_ln161_7_fu_608_p3 or select_ln161_6_fu_586_p3);
    or_ln161_5_fu_820_p2 <= (or_ln161_4_fu_814_p2 or or_ln161_3_fu_808_p2);
    or_ln161_6_fu_826_p2 <= (or_ln161_5_fu_820_p2 or or_ln161_2_fu_802_p2);
    or_ln161_7_fu_832_p2 <= (select_ln161_9_fu_653_p3 or select_ln161_8_fu_630_p3);
    or_ln161_8_fu_838_p2 <= (select_ln161_11_fu_699_p3 or select_ln161_10_fu_676_p3);
    or_ln161_9_fu_844_p2 <= (or_ln161_8_fu_838_p2 or or_ln161_7_fu_832_p2);
    or_ln161_fu_790_p2 <= (select_ln161_fu_460_p3 or select_ln161_1_fu_476_p3);
    or_ln164_1_fu_415_p2 <= (trunc_ln155_fu_411_p1 or ap_const_lv6_1);
    or_ln164_2_fu_499_p2 <= (trunc_ln155_reg_1043 or ap_const_lv6_3);
    or_ln164_3_fu_544_p2 <= (trunc_ln155_reg_1043 or ap_const_lv6_5);
    or_ln164_4_fu_593_p2 <= (trunc_ln155_reg_1043 or ap_const_lv6_7);
    or_ln164_5_fu_615_p2 <= (trunc_ln155_reg_1043 or ap_const_lv6_C);
    or_ln164_6_fu_719_p2 <= (trunc_ln155_reg_1043 or ap_const_lv6_D);
    or_ln164_7_fu_768_p2 <= (trunc_ln155_reg_1043 or ap_const_lv6_F);
    or_ln164_fu_437_p2 <= (trunc_ln155_reg_1043 or ap_const_lv6_4);
    select_ln161_10_fu_676_p3 <= 
        shl_ln162_10_fu_670_p2 when (tmp_41_2_2_reg_1114(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_11_fu_699_p3 <= 
        shl_ln162_11_fu_693_p2 when (tmp_41_2_3_reg_1119(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_12_fu_712_p3 <= 
        shl_ln162_12_fu_706_p2 when (tmp_41_3_reg_1124(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_13_fu_738_p3 <= 
        shl_ln162_13_fu_732_p2 when (tmp_41_3_1_reg_1129(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_14_fu_761_p3 <= 
        shl_ln162_14_fu_755_p2 when (tmp_41_3_2_reg_1134(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_15_fu_783_p3 <= 
        shl_ln162_15_fu_777_p2 when (tmp_41_3_3_reg_1139(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_1_fu_476_p3 <= 
        shl_ln162_1_fu_470_p2 when (tmp_41_0_1_reg_1064(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_2_fu_492_p3 <= 
        shl_ln162_2_fu_486_p2 when (tmp_41_0_2_reg_1074(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_3_fu_514_p3 <= 
        shl_ln162_3_fu_508_p2 when (tmp_41_0_3_reg_1079(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_4_fu_537_p3 <= 
        shl_ln162_4_fu_531_p2 when (tmp_41_1_reg_1084(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_5_fu_563_p3 <= 
        shl_ln162_5_fu_557_p2 when (tmp_41_1_1_reg_1089(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_6_fu_586_p3 <= 
        shl_ln162_6_fu_580_p2 when (tmp_41_1_2_reg_1094(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_7_fu_608_p3 <= 
        shl_ln162_7_fu_602_p2 when (tmp_41_1_3_reg_1099(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_8_fu_630_p3 <= 
        shl_ln162_8_fu_624_p2 when (tmp_41_2_reg_1104(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_9_fu_653_p3 <= 
        shl_ln162_9_fu_647_p2 when (tmp_41_2_1_reg_1109(0) = '1') else 
        ap_const_lv32_0;
    select_ln161_fu_460_p3 <= 
        shl_ln162_fu_454_p2 when (tmp_s_reg_1054(0) = '1') else 
        ap_const_lv32_0;
        sext_ln161_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln161_14_fu_874_p2),64));

    shl_ln162_10_fu_670_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_13_fu_666_p1(31-1 downto 0)))));
    shl_ln162_11_fu_693_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_14_fu_689_p1(31-1 downto 0)))));
    shl_ln162_12_fu_706_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_11_fu_620_p1(31-1 downto 0)))));
    shl_ln162_13_fu_732_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_16_fu_728_p1(31-1 downto 0)))));
    shl_ln162_14_fu_755_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_17_fu_751_p1(31-1 downto 0)))));
    shl_ln162_15_fu_777_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_18_fu_773_p1(31-1 downto 0)))));
    shl_ln162_1_fu_470_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_3_fu_467_p1(31-1 downto 0)))));
    shl_ln162_2_fu_486_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_4_fu_483_p1(31-1 downto 0)))));
    shl_ln162_3_fu_508_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_5_fu_504_p1(31-1 downto 0)))));
    shl_ln162_4_fu_531_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_1_fu_446_p1(31-1 downto 0)))));
    shl_ln162_5_fu_557_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_8_fu_553_p1(31-1 downto 0)))));
    shl_ln162_6_fu_580_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_9_fu_576_p1(31-1 downto 0)))));
    shl_ln162_7_fu_602_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_10_fu_598_p1(31-1 downto 0)))));
    shl_ln162_8_fu_624_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_6_fu_527_p1(31-1 downto 0)))));
    shl_ln162_9_fu_647_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln164_12_fu_643_p1(31-1 downto 0)))));
    shl_ln162_fu_454_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & zext_ln155_1_fu_450_p1(31-1 downto 0)))));
    trunc_ln155_fu_411_p1 <= b_0_reg_127(6 - 1 downto 0);
    zext_ln155_1_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_0_reg_127),32));
    zext_ln164_10_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_4_fu_593_p2),32));
    zext_ln164_11_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_5_fu_615_p2),32));
    zext_ln164_12_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_3_fu_637_p2),32));
    zext_ln164_13_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_4_fu_660_p2),32));
    zext_ln164_14_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_5_fu_683_p2),32));
    zext_ln164_15_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_6_fu_719_p2),7));
    zext_ln164_16_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_6_fu_719_p2),32));
    zext_ln164_17_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_6_fu_745_p2),32));
    zext_ln164_18_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_7_fu_768_p2),32));
    zext_ln164_1_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_fu_437_p2),32));
    zext_ln164_2_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_1_fu_415_p2),7));
    zext_ln164_3_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_1_reg_1059),32));
    zext_ln164_4_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_reg_1069),32));
    zext_ln164_5_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_2_fu_499_p2),32));
    zext_ln164_6_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_1_fu_521_p2),32));
    zext_ln164_7_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_3_fu_544_p2),7));
    zext_ln164_8_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_3_fu_544_p2),32));
    zext_ln164_9_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_2_fu_570_p2),32));
    zext_ln164_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln164_fu_437_p2),7));
end behav;
