-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pointOnSegment is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_x : IN STD_LOGIC_VECTOR (31 downto 0);
    p_y : IN STD_LOGIC_VECTOR (31 downto 0);
    p_z : IN STD_LOGIC_VECTOR (31 downto 0);
    e_p1_x : IN STD_LOGIC_VECTOR (31 downto 0);
    e_p1_y : IN STD_LOGIC_VECTOR (31 downto 0);
    e_p1_z : IN STD_LOGIC_VECTOR (31 downto 0);
    e_p2_x : IN STD_LOGIC_VECTOR (31 downto 0);
    e_p2_y : IN STD_LOGIC_VECTOR (31 downto 0);
    e_p2_z : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of pointOnSegment is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

    signal e_p2_z_read_reg_875 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal e_p2_y_read_reg_884 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p2_x_read_reg_893 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p1_z_read_reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p1_y_read_reg_911 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p1_x_read_reg_920 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_z_read_reg_929 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_z_read_reg_929_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_y_read_reg_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_y_read_reg_936_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_read_reg_943 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_read_reg_943_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_fu_228_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_reg_950 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_1_fu_240_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_1_reg_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_2_fu_328_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_2_reg_962 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_3_fu_340_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_3_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_4_fu_428_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_4_reg_974 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_5_fu_440_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_a_5_reg_980 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln47_4_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_4_reg_986 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_5_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_5_reg_991 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_3_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_3_reg_996 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_8_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_8_reg_1002 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_9_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_9_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_4_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_4_reg_1012 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_5_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_5_reg_1017 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln48_3_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln48_3_reg_1022 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_4_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_4_reg_1028 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_5_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_5_reg_1033 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_3_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_3_reg_1038 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_8_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_8_reg_1044 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_9_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_9_reg_1049 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_10_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_10_reg_1054 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_11_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_11_reg_1059 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal bitcast_ln47_fu_146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln47_1_fu_163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_149_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_fu_159_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln47_1_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_166_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_1_fu_176_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln47_3_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_2_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_1_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_1_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_4_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln48_fu_246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln48_1_fu_263_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_249_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln48_fu_259_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln48_1_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_266_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln48_1_fu_276_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln48_3_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_2_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln48_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln48_1_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln48_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln48_1_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln48_4_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln49_fu_346_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln49_1_fu_363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_349_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln49_fu_359_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln49_1_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_366_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln49_1_fu_376_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln49_3_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_2_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_1_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_1_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_2_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln47_2_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln47_3_fu_463_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_449_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_2_fu_459_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_4_fu_466_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_3_fu_476_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln47_7_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_6_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln47_4_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_513_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln47_4_fu_523_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln48_2_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln48_3_fu_556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_542_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln48_2_fu_552_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_12_fu_559_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln48_3_fu_569_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln48_7_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_6_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln49_2_fu_603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln49_3_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_606_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln49_2_fu_616_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_20_fu_623_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln49_3_fu_633_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln49_7_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_6_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln49_4_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_670_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln49_4_fu_680_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln49_5_fu_696_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_699_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln49_5_fu_709_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln47_2_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_2_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_4_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_5_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln48_2_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln48_2_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln48_3_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_2_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_3_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_3_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_6_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln47_7_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln47_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln48_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_4_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_5_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_4_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_5_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_8_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_6_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_9_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln48_5_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_10_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_6_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln48_4_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_11_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln49_7_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_86_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_92_ce : STD_LOGIC;
    signal grp_fu_98_ce : STD_LOGIC;
    signal grp_fu_104_ce : STD_LOGIC;
    signal grp_fu_110_ce : STD_LOGIC;
    signal grp_fu_116_ce : STD_LOGIC;
    signal grp_fu_122_ce : STD_LOGIC;
    signal grp_fu_126_ce : STD_LOGIC;
    signal grp_fu_130_ce : STD_LOGIC;
    signal grp_fu_134_ce : STD_LOGIC;
    signal grp_fu_138_ce : STD_LOGIC;
    signal grp_fu_142_ce : STD_LOGIC;
    signal and_ln49_12_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_x_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_y_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_z_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p1_x_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p1_y_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p1_z_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p2_x_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p2_y_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal e_p2_z_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (0 downto 0);

    component honeybee_fcmp_32nfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    honeybee_fcmp_32nfYi_U37 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => e_p1_x_int_reg,
        din1 => e_p2_x_int_reg,
        ce => grp_fu_86_ce,
        opcode => ap_const_lv5_4,
        dout => grp_fu_86_p2);

    honeybee_fcmp_32nfYi_U38 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => e_p1_x_int_reg,
        din1 => e_p2_x_int_reg,
        ce => grp_fu_92_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_92_p2);

    honeybee_fcmp_32nfYi_U39 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => e_p1_y_int_reg,
        din1 => e_p2_y_int_reg,
        ce => grp_fu_98_ce,
        opcode => ap_const_lv5_4,
        dout => grp_fu_98_p2);

    honeybee_fcmp_32nfYi_U40 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => e_p1_y_int_reg,
        din1 => e_p2_y_int_reg,
        ce => grp_fu_104_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_104_p2);

    honeybee_fcmp_32nfYi_U41 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => e_p1_z_int_reg,
        din1 => e_p2_z_int_reg,
        ce => grp_fu_110_ce,
        opcode => ap_const_lv5_4,
        dout => grp_fu_110_p2);

    honeybee_fcmp_32nfYi_U42 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => e_p1_z_int_reg,
        din1 => e_p2_z_int_reg,
        ce => grp_fu_116_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_116_p2);

    honeybee_fcmp_32nfYi_U43 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_a_reg_950,
        din1 => p_x_read_reg_943_pp0_iter1_reg,
        ce => grp_fu_122_ce,
        opcode => ap_const_lv5_5,
        dout => grp_fu_122_p2);

    honeybee_fcmp_32nfYi_U44 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_a_1_reg_956,
        din1 => p_x_read_reg_943_pp0_iter1_reg,
        ce => grp_fu_126_ce,
        opcode => ap_const_lv5_3,
        dout => grp_fu_126_p2);

    honeybee_fcmp_32nfYi_U45 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_a_2_reg_962,
        din1 => p_y_read_reg_936_pp0_iter1_reg,
        ce => grp_fu_130_ce,
        opcode => ap_const_lv5_5,
        dout => grp_fu_130_p2);

    honeybee_fcmp_32nfYi_U46 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_a_5_reg_980,
        din1 => p_z_read_reg_929_pp0_iter1_reg,
        ce => grp_fu_134_ce,
        opcode => ap_const_lv5_3,
        dout => grp_fu_134_p2);

    honeybee_fcmp_32nfYi_U47 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_a_4_reg_974,
        din1 => p_z_read_reg_929_pp0_iter1_reg,
        ce => grp_fu_138_ce,
        opcode => ap_const_lv5_5,
        dout => grp_fu_138_p2);

    honeybee_fcmp_32nfYi_U48 : component honeybee_fcmp_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_a_3_reg_968,
        din1 => p_y_read_reg_936_pp0_iter1_reg,
        ce => grp_fu_142_ce,
        opcode => ap_const_lv5_3,
        dout => grp_fu_142_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= and_ln49_12_fu_869_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                e_p1_x_int_reg <= e_p1_x;
                e_p1_y_int_reg <= e_p1_y;
                e_p1_z_int_reg <= e_p1_z;
                e_p2_x_int_reg <= e_p2_x;
                e_p2_y_int_reg <= e_p2_y;
                e_p2_z_int_reg <= e_p2_z;
                p_x_int_reg <= p_x;
                p_y_int_reg <= p_y;
                p_z_int_reg <= p_z;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                e_p1_x_read_reg_920 <= e_p1_x_int_reg;
                e_p1_y_read_reg_911 <= e_p1_y_int_reg;
                e_p1_z_read_reg_902 <= e_p1_z_int_reg;
                e_p2_x_read_reg_893 <= e_p2_x_int_reg;
                e_p2_y_read_reg_884 <= e_p2_y_int_reg;
                e_p2_z_read_reg_875 <= e_p2_z_int_reg;
                icmp_ln47_4_reg_986 <= icmp_ln47_4_fu_480_p2;
                icmp_ln47_5_reg_991 <= icmp_ln47_5_fu_486_p2;
                icmp_ln47_8_reg_1002 <= icmp_ln47_8_fu_527_p2;
                icmp_ln47_9_reg_1007 <= icmp_ln47_9_fu_533_p2;
                icmp_ln48_4_reg_1012 <= icmp_ln48_4_fu_573_p2;
                icmp_ln48_5_reg_1017 <= icmp_ln48_5_fu_579_p2;
                icmp_ln49_10_reg_1054 <= icmp_ln49_10_fu_713_p2;
                icmp_ln49_11_reg_1059 <= icmp_ln49_11_fu_719_p2;
                icmp_ln49_4_reg_1028 <= icmp_ln49_4_fu_637_p2;
                icmp_ln49_5_reg_1033 <= icmp_ln49_5_fu_643_p2;
                icmp_ln49_8_reg_1044 <= icmp_ln49_8_fu_684_p2;
                icmp_ln49_9_reg_1049 <= icmp_ln49_9_fu_690_p2;
                or_ln47_3_reg_996 <= or_ln47_3_fu_504_p2;
                or_ln48_3_reg_1022 <= or_ln48_3_fu_597_p2;
                or_ln49_3_reg_1038 <= or_ln49_3_fu_661_p2;
                p_a_1_reg_956 <= p_a_1_fu_240_p3;
                p_a_2_reg_962 <= p_a_2_fu_328_p3;
                p_a_3_reg_968 <= p_a_3_fu_340_p3;
                p_a_4_reg_974 <= p_a_4_fu_428_p3;
                p_a_5_reg_980 <= p_a_5_fu_440_p3;
                p_a_reg_950 <= p_a_fu_228_p3;
                p_x_read_reg_943 <= p_x_int_reg;
                p_x_read_reg_943_pp0_iter1_reg <= p_x_read_reg_943;
                p_y_read_reg_936 <= p_y_int_reg;
                p_y_read_reg_936_pp0_iter1_reg <= p_y_read_reg_936;
                p_z_read_reg_929 <= p_z_int_reg;
                p_z_read_reg_929_pp0_iter1_reg <= p_z_read_reg_929;
            end if;
        end if;
    end process;
    and_ln47_1_fu_222_p2 <= (grp_fu_86_p2 and and_ln47_fu_216_p2);
    and_ln47_2_fu_729_p2 <= (or_ln47_3_reg_996 and or_ln47_2_fu_725_p2);
    and_ln47_3_fu_734_p2 <= (grp_fu_122_p2 and and_ln47_2_fu_729_p2);
    and_ln47_4_fu_234_p2 <= (grp_fu_92_p2 and and_ln47_fu_216_p2);
    and_ln47_5_fu_744_p2 <= (or_ln47_4_fu_740_p2 and or_ln47_3_reg_996);
    and_ln47_6_fu_749_p2 <= (grp_fu_126_p2 and and_ln47_5_fu_744_p2);
    and_ln47_7_fu_791_p2 <= (and_ln47_6_fu_749_p2 and and_ln47_3_fu_734_p2);
    and_ln47_fu_216_p2 <= (or_ln47_fu_192_p2 and or_ln47_1_fu_210_p2);
    and_ln48_1_fu_322_p2 <= (grp_fu_98_p2 and and_ln48_fu_316_p2);
    and_ln48_2_fu_759_p2 <= (or_ln48_3_reg_1022 and or_ln48_2_fu_755_p2);
    and_ln48_3_fu_764_p2 <= (grp_fu_130_p2 and and_ln48_2_fu_759_p2);
    and_ln48_4_fu_334_p2 <= (grp_fu_104_p2 and and_ln48_fu_316_p2);
    and_ln48_fu_316_p2 <= (or_ln48_fu_292_p2 and or_ln48_1_fu_310_p2);
    and_ln49_10_fu_851_p2 <= (and_ln49_9_fu_845_p2 and and_ln49_6_fu_824_p2);
    and_ln49_11_fu_863_p2 <= (or_ln49_6_fu_857_p2 and or_ln48_4_fu_803_p2);
    and_ln49_12_fu_869_p2 <= (and_ln49_7_fu_830_p2 and and_ln49_11_fu_863_p2);
    and_ln49_1_fu_422_p2 <= (grp_fu_110_p2 and and_ln49_fu_416_p2);
    and_ln49_2_fu_434_p2 <= (grp_fu_116_p2 and and_ln49_fu_416_p2);
    and_ln49_3_fu_780_p2 <= (or_ln49_3_reg_1038 and or_ln49_2_fu_776_p2);
    and_ln49_4_fu_785_p2 <= (grp_fu_134_p2 and and_ln49_3_fu_780_p2);
    and_ln49_5_fu_819_p2 <= (or_ln49_4_fu_815_p2 and or_ln49_3_reg_1038);
    and_ln49_6_fu_824_p2 <= (grp_fu_138_p2 and and_ln49_5_fu_819_p2);
    and_ln49_7_fu_830_p2 <= (and_ln49_4_fu_785_p2 and and_ln47_7_fu_791_p2);
    and_ln49_8_fu_840_p2 <= (or_ln49_5_fu_836_p2 and or_ln48_3_reg_1022);
    and_ln49_9_fu_845_p2 <= (grp_fu_142_p2 and and_ln49_8_fu_840_p2);
    and_ln49_fu_416_p2 <= (or_ln49_fu_392_p2 and or_ln49_1_fu_410_p2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(and_ln49_12_fu_869_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= and_ln49_12_fu_869_p2;
        end if; 
    end process;

    bitcast_ln47_1_fu_163_p1 <= e_p2_x_read_reg_893;
    bitcast_ln47_2_fu_446_p1 <= p_a_reg_950;
    bitcast_ln47_3_fu_463_p1 <= p_x_read_reg_943_pp0_iter1_reg;
    bitcast_ln47_4_fu_510_p1 <= p_a_1_reg_956;
    bitcast_ln47_fu_146_p1 <= e_p1_x_read_reg_920;
    bitcast_ln48_1_fu_263_p1 <= e_p2_y_read_reg_884;
    bitcast_ln48_2_fu_539_p1 <= p_a_2_reg_962;
    bitcast_ln48_3_fu_556_p1 <= p_y_read_reg_936_pp0_iter1_reg;
    bitcast_ln48_fu_246_p1 <= e_p1_y_read_reg_911;
    bitcast_ln49_1_fu_363_p1 <= e_p2_z_read_reg_875;
    bitcast_ln49_2_fu_603_p1 <= p_a_5_reg_980;
    bitcast_ln49_3_fu_620_p1 <= p_z_read_reg_929_pp0_iter1_reg;
    bitcast_ln49_4_fu_667_p1 <= p_a_4_reg_974;
    bitcast_ln49_5_fu_696_p1 <= p_a_3_reg_968;
    bitcast_ln49_fu_346_p1 <= e_p1_z_read_reg_902;

    grp_fu_104_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_104_ce <= ap_const_logic_1;
        else 
            grp_fu_104_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_110_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_110_ce <= ap_const_logic_1;
        else 
            grp_fu_110_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_116_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_116_ce <= ap_const_logic_1;
        else 
            grp_fu_116_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_122_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_122_ce <= ap_const_logic_1;
        else 
            grp_fu_122_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_126_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_126_ce <= ap_const_logic_1;
        else 
            grp_fu_126_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_130_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_130_ce <= ap_const_logic_1;
        else 
            grp_fu_130_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_134_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_134_ce <= ap_const_logic_1;
        else 
            grp_fu_134_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_138_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_138_ce <= ap_const_logic_1;
        else 
            grp_fu_138_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_142_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_142_ce <= ap_const_logic_1;
        else 
            grp_fu_142_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_86_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_86_ce <= ap_const_logic_1;
        else 
            grp_fu_86_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_92_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_92_ce <= ap_const_logic_1;
        else 
            grp_fu_92_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_98_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_98_ce <= ap_const_logic_1;
        else 
            grp_fu_98_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln47_1_fu_186_p2 <= "1" when (trunc_ln47_fu_159_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_2_fu_198_p2 <= "0" when (tmp_1_fu_166_p4 = ap_const_lv8_FF) else "1";
    icmp_ln47_3_fu_204_p2 <= "1" when (trunc_ln47_1_fu_176_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_4_fu_480_p2 <= "0" when (tmp_3_fu_449_p4 = ap_const_lv8_FF) else "1";
    icmp_ln47_5_fu_486_p2 <= "1" when (trunc_ln47_2_fu_459_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_6_fu_492_p2 <= "0" when (tmp_4_fu_466_p4 = ap_const_lv8_FF) else "1";
    icmp_ln47_7_fu_498_p2 <= "1" when (trunc_ln47_3_fu_476_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_8_fu_527_p2 <= "0" when (tmp_9_fu_513_p4 = ap_const_lv8_FF) else "1";
    icmp_ln47_9_fu_533_p2 <= "1" when (trunc_ln47_4_fu_523_p1 = ap_const_lv23_0) else "0";
    icmp_ln47_fu_180_p2 <= "0" when (tmp_fu_149_p4 = ap_const_lv8_FF) else "1";
    icmp_ln48_1_fu_286_p2 <= "1" when (trunc_ln48_fu_259_p1 = ap_const_lv23_0) else "0";
    icmp_ln48_2_fu_298_p2 <= "0" when (tmp_7_fu_266_p4 = ap_const_lv8_FF) else "1";
    icmp_ln48_3_fu_304_p2 <= "1" when (trunc_ln48_1_fu_276_p1 = ap_const_lv23_0) else "0";
    icmp_ln48_4_fu_573_p2 <= "0" when (tmp_11_fu_542_p4 = ap_const_lv8_FF) else "1";
    icmp_ln48_5_fu_579_p2 <= "1" when (trunc_ln48_2_fu_552_p1 = ap_const_lv23_0) else "0";
    icmp_ln48_6_fu_585_p2 <= "0" when (tmp_12_fu_559_p4 = ap_const_lv8_FF) else "1";
    icmp_ln48_7_fu_591_p2 <= "1" when (trunc_ln48_3_fu_569_p1 = ap_const_lv23_0) else "0";
    icmp_ln48_fu_280_p2 <= "0" when (tmp_6_fu_249_p4 = ap_const_lv8_FF) else "1";
    icmp_ln49_10_fu_713_p2 <= "0" when (tmp_24_fu_699_p4 = ap_const_lv8_FF) else "1";
    icmp_ln49_11_fu_719_p2 <= "1" when (trunc_ln49_5_fu_709_p1 = ap_const_lv23_0) else "0";
    icmp_ln49_1_fu_386_p2 <= "1" when (trunc_ln49_fu_359_p1 = ap_const_lv23_0) else "0";
    icmp_ln49_2_fu_398_p2 <= "0" when (tmp_16_fu_366_p4 = ap_const_lv8_FF) else "1";
    icmp_ln49_3_fu_404_p2 <= "1" when (trunc_ln49_1_fu_376_p1 = ap_const_lv23_0) else "0";
    icmp_ln49_4_fu_637_p2 <= "0" when (tmp_19_fu_606_p4 = ap_const_lv8_FF) else "1";
    icmp_ln49_5_fu_643_p2 <= "1" when (trunc_ln49_2_fu_616_p1 = ap_const_lv23_0) else "0";
    icmp_ln49_6_fu_649_p2 <= "0" when (tmp_20_fu_623_p4 = ap_const_lv8_FF) else "1";
    icmp_ln49_7_fu_655_p2 <= "1" when (trunc_ln49_3_fu_633_p1 = ap_const_lv23_0) else "0";
    icmp_ln49_8_fu_684_p2 <= "0" when (tmp_22_fu_670_p4 = ap_const_lv8_FF) else "1";
    icmp_ln49_9_fu_690_p2 <= "1" when (trunc_ln49_4_fu_680_p1 = ap_const_lv23_0) else "0";
    icmp_ln49_fu_380_p2 <= "0" when (tmp_15_fu_349_p4 = ap_const_lv8_FF) else "1";
    or_ln47_1_fu_210_p2 <= (icmp_ln47_3_fu_204_p2 or icmp_ln47_2_fu_198_p2);
    or_ln47_2_fu_725_p2 <= (icmp_ln47_5_reg_991 or icmp_ln47_4_reg_986);
    or_ln47_3_fu_504_p2 <= (icmp_ln47_7_fu_498_p2 or icmp_ln47_6_fu_492_p2);
    or_ln47_4_fu_740_p2 <= (icmp_ln47_9_reg_1007 or icmp_ln47_8_reg_1002);
    or_ln47_fu_192_p2 <= (icmp_ln47_fu_180_p2 or icmp_ln47_1_fu_186_p2);
    or_ln48_1_fu_310_p2 <= (icmp_ln48_3_fu_304_p2 or icmp_ln48_2_fu_298_p2);
    or_ln48_2_fu_755_p2 <= (icmp_ln48_5_reg_1017 or icmp_ln48_4_reg_1012);
    or_ln48_3_fu_597_p2 <= (icmp_ln48_7_fu_591_p2 or icmp_ln48_6_fu_585_p2);
    or_ln48_4_fu_803_p2 <= (xor_ln47_fu_797_p2 or and_ln48_3_fu_764_p2);
    or_ln48_5_fu_809_p2 <= (xor_ln48_fu_770_p2 or xor_ln47_fu_797_p2);
    or_ln48_fu_292_p2 <= (icmp_ln48_fu_280_p2 or icmp_ln48_1_fu_286_p2);
    or_ln49_1_fu_410_p2 <= (icmp_ln49_3_fu_404_p2 or icmp_ln49_2_fu_398_p2);
    or_ln49_2_fu_776_p2 <= (icmp_ln49_5_reg_1033 or icmp_ln49_4_reg_1028);
    or_ln49_3_fu_661_p2 <= (icmp_ln49_7_fu_655_p2 or icmp_ln49_6_fu_649_p2);
    or_ln49_4_fu_815_p2 <= (icmp_ln49_9_reg_1049 or icmp_ln49_8_reg_1044);
    or_ln49_5_fu_836_p2 <= (icmp_ln49_11_reg_1059 or icmp_ln49_10_reg_1054);
    or_ln49_6_fu_857_p2 <= (or_ln48_5_fu_809_p2 or and_ln49_10_fu_851_p2);
    or_ln49_fu_392_p2 <= (icmp_ln49_fu_380_p2 or icmp_ln49_1_fu_386_p2);
    p_a_1_fu_240_p3 <= 
        e_p1_x_read_reg_920 when (and_ln47_4_fu_234_p2(0) = '1') else 
        e_p2_x_read_reg_893;
    p_a_2_fu_328_p3 <= 
        e_p1_y_read_reg_911 when (and_ln48_1_fu_322_p2(0) = '1') else 
        e_p2_y_read_reg_884;
    p_a_3_fu_340_p3 <= 
        e_p1_y_read_reg_911 when (and_ln48_4_fu_334_p2(0) = '1') else 
        e_p2_y_read_reg_884;
    p_a_4_fu_428_p3 <= 
        e_p1_z_read_reg_902 when (and_ln49_1_fu_422_p2(0) = '1') else 
        e_p2_z_read_reg_875;
    p_a_5_fu_440_p3 <= 
        e_p1_z_read_reg_902 when (and_ln49_2_fu_434_p2(0) = '1') else 
        e_p2_z_read_reg_875;
    p_a_fu_228_p3 <= 
        e_p1_x_read_reg_920 when (and_ln47_1_fu_222_p2(0) = '1') else 
        e_p2_x_read_reg_893;
    tmp_11_fu_542_p4 <= bitcast_ln48_2_fu_539_p1(30 downto 23);
    tmp_12_fu_559_p4 <= bitcast_ln48_3_fu_556_p1(30 downto 23);
    tmp_15_fu_349_p4 <= bitcast_ln49_fu_346_p1(30 downto 23);
    tmp_16_fu_366_p4 <= bitcast_ln49_1_fu_363_p1(30 downto 23);
    tmp_19_fu_606_p4 <= bitcast_ln49_2_fu_603_p1(30 downto 23);
    tmp_1_fu_166_p4 <= bitcast_ln47_1_fu_163_p1(30 downto 23);
    tmp_20_fu_623_p4 <= bitcast_ln49_3_fu_620_p1(30 downto 23);
    tmp_22_fu_670_p4 <= bitcast_ln49_4_fu_667_p1(30 downto 23);
    tmp_24_fu_699_p4 <= bitcast_ln49_5_fu_696_p1(30 downto 23);
    tmp_3_fu_449_p4 <= bitcast_ln47_2_fu_446_p1(30 downto 23);
    tmp_4_fu_466_p4 <= bitcast_ln47_3_fu_463_p1(30 downto 23);
    tmp_6_fu_249_p4 <= bitcast_ln48_fu_246_p1(30 downto 23);
    tmp_7_fu_266_p4 <= bitcast_ln48_1_fu_263_p1(30 downto 23);
    tmp_9_fu_513_p4 <= bitcast_ln47_4_fu_510_p1(30 downto 23);
    tmp_fu_149_p4 <= bitcast_ln47_fu_146_p1(30 downto 23);
    trunc_ln47_1_fu_176_p1 <= bitcast_ln47_1_fu_163_p1(23 - 1 downto 0);
    trunc_ln47_2_fu_459_p1 <= bitcast_ln47_2_fu_446_p1(23 - 1 downto 0);
    trunc_ln47_3_fu_476_p1 <= bitcast_ln47_3_fu_463_p1(23 - 1 downto 0);
    trunc_ln47_4_fu_523_p1 <= bitcast_ln47_4_fu_510_p1(23 - 1 downto 0);
    trunc_ln47_fu_159_p1 <= bitcast_ln47_fu_146_p1(23 - 1 downto 0);
    trunc_ln48_1_fu_276_p1 <= bitcast_ln48_1_fu_263_p1(23 - 1 downto 0);
    trunc_ln48_2_fu_552_p1 <= bitcast_ln48_2_fu_539_p1(23 - 1 downto 0);
    trunc_ln48_3_fu_569_p1 <= bitcast_ln48_3_fu_556_p1(23 - 1 downto 0);
    trunc_ln48_fu_259_p1 <= bitcast_ln48_fu_246_p1(23 - 1 downto 0);
    trunc_ln49_1_fu_376_p1 <= bitcast_ln49_1_fu_363_p1(23 - 1 downto 0);
    trunc_ln49_2_fu_616_p1 <= bitcast_ln49_2_fu_603_p1(23 - 1 downto 0);
    trunc_ln49_3_fu_633_p1 <= bitcast_ln49_3_fu_620_p1(23 - 1 downto 0);
    trunc_ln49_4_fu_680_p1 <= bitcast_ln49_4_fu_667_p1(23 - 1 downto 0);
    trunc_ln49_5_fu_709_p1 <= bitcast_ln49_5_fu_696_p1(23 - 1 downto 0);
    trunc_ln49_fu_359_p1 <= bitcast_ln49_fu_346_p1(23 - 1 downto 0);
    xor_ln47_fu_797_p2 <= (ap_const_lv1_1 xor and_ln47_7_fu_791_p2);
    xor_ln48_fu_770_p2 <= (ap_const_lv1_1 xor and_ln48_3_fu_764_p2);
end behav;
