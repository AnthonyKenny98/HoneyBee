// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointOnSegment (
        ap_clk,
        ap_rst,
        p_x,
        p_y,
        p_z,
        e_p1_x,
        e_p1_y,
        e_p1_z,
        e_p2_x,
        e_p2_y,
        e_p2_z,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] p_x;
input  [31:0] p_y;
input  [31:0] p_z;
input  [31:0] e_p1_x;
input  [31:0] e_p1_y;
input  [31:0] e_p1_z;
input  [31:0] e_p2_x;
input  [31:0] e_p2_y;
input  [31:0] e_p2_z;
output  [0:0] ap_return;
input   ap_ce;

reg[0:0] ap_return;

reg   [31:0] e_p2_z_read_reg_875;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] e_p2_y_read_reg_884;
reg   [31:0] e_p2_x_read_reg_893;
reg   [31:0] e_p1_z_read_reg_902;
reg   [31:0] e_p1_y_read_reg_911;
reg   [31:0] e_p1_x_read_reg_920;
reg   [31:0] p_z_read_reg_929;
reg   [31:0] p_z_read_reg_929_pp0_iter1_reg;
reg   [31:0] p_y_read_reg_936;
reg   [31:0] p_y_read_reg_936_pp0_iter1_reg;
reg   [31:0] p_x_read_reg_943;
reg   [31:0] p_x_read_reg_943_pp0_iter1_reg;
wire   [31:0] p_a_fu_228_p3;
reg   [31:0] p_a_reg_950;
wire   [31:0] p_a_1_fu_240_p3;
reg   [31:0] p_a_1_reg_956;
wire   [31:0] p_a_2_fu_328_p3;
reg   [31:0] p_a_2_reg_962;
wire   [31:0] p_a_3_fu_340_p3;
reg   [31:0] p_a_3_reg_968;
wire   [31:0] p_a_4_fu_428_p3;
reg   [31:0] p_a_4_reg_974;
wire   [31:0] p_a_5_fu_440_p3;
reg   [31:0] p_a_5_reg_980;
wire   [0:0] icmp_ln47_4_fu_480_p2;
reg   [0:0] icmp_ln47_4_reg_986;
wire   [0:0] icmp_ln47_5_fu_486_p2;
reg   [0:0] icmp_ln47_5_reg_991;
wire   [0:0] or_ln47_3_fu_504_p2;
reg   [0:0] or_ln47_3_reg_996;
wire   [0:0] icmp_ln47_8_fu_527_p2;
reg   [0:0] icmp_ln47_8_reg_1002;
wire   [0:0] icmp_ln47_9_fu_533_p2;
reg   [0:0] icmp_ln47_9_reg_1007;
wire   [0:0] icmp_ln48_4_fu_573_p2;
reg   [0:0] icmp_ln48_4_reg_1012;
wire   [0:0] icmp_ln48_5_fu_579_p2;
reg   [0:0] icmp_ln48_5_reg_1017;
wire   [0:0] or_ln48_3_fu_597_p2;
reg   [0:0] or_ln48_3_reg_1022;
wire   [0:0] icmp_ln49_4_fu_637_p2;
reg   [0:0] icmp_ln49_4_reg_1028;
wire   [0:0] icmp_ln49_5_fu_643_p2;
reg   [0:0] icmp_ln49_5_reg_1033;
wire   [0:0] or_ln49_3_fu_661_p2;
reg   [0:0] or_ln49_3_reg_1038;
wire   [0:0] icmp_ln49_8_fu_684_p2;
reg   [0:0] icmp_ln49_8_reg_1044;
wire   [0:0] icmp_ln49_9_fu_690_p2;
reg   [0:0] icmp_ln49_9_reg_1049;
wire   [0:0] icmp_ln49_10_fu_713_p2;
reg   [0:0] icmp_ln49_10_reg_1054;
wire   [0:0] icmp_ln49_11_fu_719_p2;
reg   [0:0] icmp_ln49_11_reg_1059;
wire    ap_block_pp0_stage0;
wire   [31:0] bitcast_ln47_fu_146_p1;
wire   [31:0] bitcast_ln47_1_fu_163_p1;
wire   [7:0] tmp_fu_149_p4;
wire   [22:0] trunc_ln47_fu_159_p1;
wire   [0:0] icmp_ln47_1_fu_186_p2;
wire   [0:0] icmp_ln47_fu_180_p2;
wire   [7:0] tmp_1_fu_166_p4;
wire   [22:0] trunc_ln47_1_fu_176_p1;
wire   [0:0] icmp_ln47_3_fu_204_p2;
wire   [0:0] icmp_ln47_2_fu_198_p2;
wire   [0:0] or_ln47_fu_192_p2;
wire   [0:0] or_ln47_1_fu_210_p2;
wire   [0:0] and_ln47_fu_216_p2;
wire   [0:0] grp_fu_86_p2;
wire   [0:0] and_ln47_1_fu_222_p2;
wire   [0:0] grp_fu_92_p2;
wire   [0:0] and_ln47_4_fu_234_p2;
wire   [31:0] bitcast_ln48_fu_246_p1;
wire   [31:0] bitcast_ln48_1_fu_263_p1;
wire   [7:0] tmp_6_fu_249_p4;
wire   [22:0] trunc_ln48_fu_259_p1;
wire   [0:0] icmp_ln48_1_fu_286_p2;
wire   [0:0] icmp_ln48_fu_280_p2;
wire   [7:0] tmp_7_fu_266_p4;
wire   [22:0] trunc_ln48_1_fu_276_p1;
wire   [0:0] icmp_ln48_3_fu_304_p2;
wire   [0:0] icmp_ln48_2_fu_298_p2;
wire   [0:0] or_ln48_fu_292_p2;
wire   [0:0] or_ln48_1_fu_310_p2;
wire   [0:0] and_ln48_fu_316_p2;
wire   [0:0] grp_fu_98_p2;
wire   [0:0] and_ln48_1_fu_322_p2;
wire   [0:0] grp_fu_104_p2;
wire   [0:0] and_ln48_4_fu_334_p2;
wire   [31:0] bitcast_ln49_fu_346_p1;
wire   [31:0] bitcast_ln49_1_fu_363_p1;
wire   [7:0] tmp_15_fu_349_p4;
wire   [22:0] trunc_ln49_fu_359_p1;
wire   [0:0] icmp_ln49_1_fu_386_p2;
wire   [0:0] icmp_ln49_fu_380_p2;
wire   [7:0] tmp_16_fu_366_p4;
wire   [22:0] trunc_ln49_1_fu_376_p1;
wire   [0:0] icmp_ln49_3_fu_404_p2;
wire   [0:0] icmp_ln49_2_fu_398_p2;
wire   [0:0] or_ln49_fu_392_p2;
wire   [0:0] or_ln49_1_fu_410_p2;
wire   [0:0] and_ln49_fu_416_p2;
wire   [0:0] grp_fu_110_p2;
wire   [0:0] and_ln49_1_fu_422_p2;
wire   [0:0] grp_fu_116_p2;
wire   [0:0] and_ln49_2_fu_434_p2;
wire   [31:0] bitcast_ln47_2_fu_446_p1;
wire   [31:0] bitcast_ln47_3_fu_463_p1;
wire   [7:0] tmp_3_fu_449_p4;
wire   [22:0] trunc_ln47_2_fu_459_p1;
wire   [7:0] tmp_4_fu_466_p4;
wire   [22:0] trunc_ln47_3_fu_476_p1;
wire   [0:0] icmp_ln47_7_fu_498_p2;
wire   [0:0] icmp_ln47_6_fu_492_p2;
wire   [31:0] bitcast_ln47_4_fu_510_p1;
wire   [7:0] tmp_9_fu_513_p4;
wire   [22:0] trunc_ln47_4_fu_523_p1;
wire   [31:0] bitcast_ln48_2_fu_539_p1;
wire   [31:0] bitcast_ln48_3_fu_556_p1;
wire   [7:0] tmp_11_fu_542_p4;
wire   [22:0] trunc_ln48_2_fu_552_p1;
wire   [7:0] tmp_12_fu_559_p4;
wire   [22:0] trunc_ln48_3_fu_569_p1;
wire   [0:0] icmp_ln48_7_fu_591_p2;
wire   [0:0] icmp_ln48_6_fu_585_p2;
wire   [31:0] bitcast_ln49_2_fu_603_p1;
wire   [31:0] bitcast_ln49_3_fu_620_p1;
wire   [7:0] tmp_19_fu_606_p4;
wire   [22:0] trunc_ln49_2_fu_616_p1;
wire   [7:0] tmp_20_fu_623_p4;
wire   [22:0] trunc_ln49_3_fu_633_p1;
wire   [0:0] icmp_ln49_7_fu_655_p2;
wire   [0:0] icmp_ln49_6_fu_649_p2;
wire   [31:0] bitcast_ln49_4_fu_667_p1;
wire   [7:0] tmp_22_fu_670_p4;
wire   [22:0] trunc_ln49_4_fu_680_p1;
wire   [31:0] bitcast_ln49_5_fu_696_p1;
wire   [7:0] tmp_24_fu_699_p4;
wire   [22:0] trunc_ln49_5_fu_709_p1;
wire   [0:0] or_ln47_2_fu_725_p2;
wire   [0:0] and_ln47_2_fu_729_p2;
wire   [0:0] grp_fu_122_p2;
wire   [0:0] or_ln47_4_fu_740_p2;
wire   [0:0] and_ln47_5_fu_744_p2;
wire   [0:0] grp_fu_126_p2;
wire   [0:0] or_ln48_2_fu_755_p2;
wire   [0:0] and_ln48_2_fu_759_p2;
wire   [0:0] grp_fu_130_p2;
wire   [0:0] and_ln48_3_fu_764_p2;
wire   [0:0] or_ln49_2_fu_776_p2;
wire   [0:0] and_ln49_3_fu_780_p2;
wire   [0:0] grp_fu_134_p2;
wire   [0:0] and_ln47_3_fu_734_p2;
wire   [0:0] and_ln47_6_fu_749_p2;
wire   [0:0] and_ln47_7_fu_791_p2;
wire   [0:0] xor_ln47_fu_797_p2;
wire   [0:0] xor_ln48_fu_770_p2;
wire   [0:0] or_ln49_4_fu_815_p2;
wire   [0:0] and_ln49_5_fu_819_p2;
wire   [0:0] grp_fu_138_p2;
wire   [0:0] and_ln49_4_fu_785_p2;
wire   [0:0] or_ln49_5_fu_836_p2;
wire   [0:0] and_ln49_8_fu_840_p2;
wire   [0:0] grp_fu_142_p2;
wire   [0:0] and_ln49_6_fu_824_p2;
wire   [0:0] and_ln49_9_fu_845_p2;
wire   [0:0] or_ln48_5_fu_809_p2;
wire   [0:0] and_ln49_10_fu_851_p2;
wire   [0:0] or_ln49_6_fu_857_p2;
wire   [0:0] or_ln48_4_fu_803_p2;
wire   [0:0] and_ln49_11_fu_863_p2;
wire   [0:0] and_ln49_7_fu_830_p2;
reg    grp_fu_86_ce;
wire    ap_block_pp0_stage0_00001;
reg    grp_fu_92_ce;
reg    grp_fu_98_ce;
reg    grp_fu_104_ce;
reg    grp_fu_110_ce;
reg    grp_fu_116_ce;
reg    grp_fu_122_ce;
reg    grp_fu_126_ce;
reg    grp_fu_130_ce;
reg    grp_fu_134_ce;
reg    grp_fu_138_ce;
reg    grp_fu_142_ce;
wire   [0:0] and_ln49_12_fu_869_p2;
reg    ap_ce_reg;
reg   [31:0] p_x_int_reg;
reg   [31:0] p_y_int_reg;
reg   [31:0] p_z_int_reg;
reg   [31:0] e_p1_x_int_reg;
reg   [31:0] e_p1_y_int_reg;
reg   [31:0] e_p1_z_int_reg;
reg   [31:0] e_p2_x_int_reg;
reg   [31:0] e_p2_y_int_reg;
reg   [31:0] e_p2_z_int_reg;
reg   [0:0] ap_return_int_reg;

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(e_p1_x_int_reg),
    .din1(e_p2_x_int_reg),
    .ce(grp_fu_86_ce),
    .opcode(5'd4),
    .dout(grp_fu_86_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(e_p1_x_int_reg),
    .din1(e_p2_x_int_reg),
    .ce(grp_fu_92_ce),
    .opcode(5'd2),
    .dout(grp_fu_92_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(e_p1_y_int_reg),
    .din1(e_p2_y_int_reg),
    .ce(grp_fu_98_ce),
    .opcode(5'd4),
    .dout(grp_fu_98_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(e_p1_y_int_reg),
    .din1(e_p2_y_int_reg),
    .ce(grp_fu_104_ce),
    .opcode(5'd2),
    .dout(grp_fu_104_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(e_p1_z_int_reg),
    .din1(e_p2_z_int_reg),
    .ce(grp_fu_110_ce),
    .opcode(5'd4),
    .dout(grp_fu_110_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(e_p1_z_int_reg),
    .din1(e_p2_z_int_reg),
    .ce(grp_fu_116_ce),
    .opcode(5'd2),
    .dout(grp_fu_116_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_a_reg_950),
    .din1(p_x_read_reg_943_pp0_iter1_reg),
    .ce(grp_fu_122_ce),
    .opcode(5'd5),
    .dout(grp_fu_122_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_a_1_reg_956),
    .din1(p_x_read_reg_943_pp0_iter1_reg),
    .ce(grp_fu_126_ce),
    .opcode(5'd3),
    .dout(grp_fu_126_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_a_2_reg_962),
    .din1(p_y_read_reg_936_pp0_iter1_reg),
    .ce(grp_fu_130_ce),
    .opcode(5'd5),
    .dout(grp_fu_130_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_a_5_reg_980),
    .din1(p_z_read_reg_929_pp0_iter1_reg),
    .ce(grp_fu_134_ce),
    .opcode(5'd3),
    .dout(grp_fu_134_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_a_4_reg_974),
    .din1(p_z_read_reg_929_pp0_iter1_reg),
    .ce(grp_fu_138_ce),
    .opcode(5'd5),
    .dout(grp_fu_138_p2)
);

honeybee_fcmp_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
honeybee_fcmp_32nfYi_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_a_3_reg_968),
    .din1(p_y_read_reg_936_pp0_iter1_reg),
    .ce(grp_fu_142_ce),
    .opcode(5'd3),
    .dout(grp_fu_142_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= and_ln49_12_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        e_p1_x_int_reg <= e_p1_x;
        e_p1_y_int_reg <= e_p1_y;
        e_p1_z_int_reg <= e_p1_z;
        e_p2_x_int_reg <= e_p2_x;
        e_p2_y_int_reg <= e_p2_y;
        e_p2_z_int_reg <= e_p2_z;
        p_x_int_reg <= p_x;
        p_y_int_reg <= p_y;
        p_z_int_reg <= p_z;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        e_p1_x_read_reg_920 <= e_p1_x_int_reg;
        e_p1_y_read_reg_911 <= e_p1_y_int_reg;
        e_p1_z_read_reg_902 <= e_p1_z_int_reg;
        e_p2_x_read_reg_893 <= e_p2_x_int_reg;
        e_p2_y_read_reg_884 <= e_p2_y_int_reg;
        e_p2_z_read_reg_875 <= e_p2_z_int_reg;
        icmp_ln47_4_reg_986 <= icmp_ln47_4_fu_480_p2;
        icmp_ln47_5_reg_991 <= icmp_ln47_5_fu_486_p2;
        icmp_ln47_8_reg_1002 <= icmp_ln47_8_fu_527_p2;
        icmp_ln47_9_reg_1007 <= icmp_ln47_9_fu_533_p2;
        icmp_ln48_4_reg_1012 <= icmp_ln48_4_fu_573_p2;
        icmp_ln48_5_reg_1017 <= icmp_ln48_5_fu_579_p2;
        icmp_ln49_10_reg_1054 <= icmp_ln49_10_fu_713_p2;
        icmp_ln49_11_reg_1059 <= icmp_ln49_11_fu_719_p2;
        icmp_ln49_4_reg_1028 <= icmp_ln49_4_fu_637_p2;
        icmp_ln49_5_reg_1033 <= icmp_ln49_5_fu_643_p2;
        icmp_ln49_8_reg_1044 <= icmp_ln49_8_fu_684_p2;
        icmp_ln49_9_reg_1049 <= icmp_ln49_9_fu_690_p2;
        or_ln47_3_reg_996 <= or_ln47_3_fu_504_p2;
        or_ln48_3_reg_1022 <= or_ln48_3_fu_597_p2;
        or_ln49_3_reg_1038 <= or_ln49_3_fu_661_p2;
        p_a_1_reg_956 <= p_a_1_fu_240_p3;
        p_a_2_reg_962 <= p_a_2_fu_328_p3;
        p_a_3_reg_968 <= p_a_3_fu_340_p3;
        p_a_4_reg_974 <= p_a_4_fu_428_p3;
        p_a_5_reg_980 <= p_a_5_fu_440_p3;
        p_a_reg_950 <= p_a_fu_228_p3;
        p_x_read_reg_943 <= p_x_int_reg;
        p_x_read_reg_943_pp0_iter1_reg <= p_x_read_reg_943;
        p_y_read_reg_936 <= p_y_int_reg;
        p_y_read_reg_936_pp0_iter1_reg <= p_y_read_reg_936;
        p_z_read_reg_929 <= p_z_int_reg;
        p_z_read_reg_929_pp0_iter1_reg <= p_z_read_reg_929;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = and_ln49_12_fu_869_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_104_ce = 1'b1;
    end else begin
        grp_fu_104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_110_ce = 1'b1;
    end else begin
        grp_fu_110_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_116_ce = 1'b1;
    end else begin
        grp_fu_116_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_122_ce = 1'b1;
    end else begin
        grp_fu_122_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_126_ce = 1'b1;
    end else begin
        grp_fu_126_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_130_ce = 1'b1;
    end else begin
        grp_fu_130_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_134_ce = 1'b1;
    end else begin
        grp_fu_134_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_138_ce = 1'b1;
    end else begin
        grp_fu_138_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_142_ce = 1'b1;
    end else begin
        grp_fu_142_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_86_ce = 1'b1;
    end else begin
        grp_fu_86_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_92_ce = 1'b1;
    end else begin
        grp_fu_92_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_98_ce = 1'b1;
    end else begin
        grp_fu_98_ce = 1'b0;
    end
end

assign and_ln47_1_fu_222_p2 = (grp_fu_86_p2 & and_ln47_fu_216_p2);

assign and_ln47_2_fu_729_p2 = (or_ln47_3_reg_996 & or_ln47_2_fu_725_p2);

assign and_ln47_3_fu_734_p2 = (grp_fu_122_p2 & and_ln47_2_fu_729_p2);

assign and_ln47_4_fu_234_p2 = (grp_fu_92_p2 & and_ln47_fu_216_p2);

assign and_ln47_5_fu_744_p2 = (or_ln47_4_fu_740_p2 & or_ln47_3_reg_996);

assign and_ln47_6_fu_749_p2 = (grp_fu_126_p2 & and_ln47_5_fu_744_p2);

assign and_ln47_7_fu_791_p2 = (and_ln47_6_fu_749_p2 & and_ln47_3_fu_734_p2);

assign and_ln47_fu_216_p2 = (or_ln47_fu_192_p2 & or_ln47_1_fu_210_p2);

assign and_ln48_1_fu_322_p2 = (grp_fu_98_p2 & and_ln48_fu_316_p2);

assign and_ln48_2_fu_759_p2 = (or_ln48_3_reg_1022 & or_ln48_2_fu_755_p2);

assign and_ln48_3_fu_764_p2 = (grp_fu_130_p2 & and_ln48_2_fu_759_p2);

assign and_ln48_4_fu_334_p2 = (grp_fu_104_p2 & and_ln48_fu_316_p2);

assign and_ln48_fu_316_p2 = (or_ln48_fu_292_p2 & or_ln48_1_fu_310_p2);

assign and_ln49_10_fu_851_p2 = (and_ln49_9_fu_845_p2 & and_ln49_6_fu_824_p2);

assign and_ln49_11_fu_863_p2 = (or_ln49_6_fu_857_p2 & or_ln48_4_fu_803_p2);

assign and_ln49_12_fu_869_p2 = (and_ln49_7_fu_830_p2 & and_ln49_11_fu_863_p2);

assign and_ln49_1_fu_422_p2 = (grp_fu_110_p2 & and_ln49_fu_416_p2);

assign and_ln49_2_fu_434_p2 = (grp_fu_116_p2 & and_ln49_fu_416_p2);

assign and_ln49_3_fu_780_p2 = (or_ln49_3_reg_1038 & or_ln49_2_fu_776_p2);

assign and_ln49_4_fu_785_p2 = (grp_fu_134_p2 & and_ln49_3_fu_780_p2);

assign and_ln49_5_fu_819_p2 = (or_ln49_4_fu_815_p2 & or_ln49_3_reg_1038);

assign and_ln49_6_fu_824_p2 = (grp_fu_138_p2 & and_ln49_5_fu_819_p2);

assign and_ln49_7_fu_830_p2 = (and_ln49_4_fu_785_p2 & and_ln47_7_fu_791_p2);

assign and_ln49_8_fu_840_p2 = (or_ln49_5_fu_836_p2 & or_ln48_3_reg_1022);

assign and_ln49_9_fu_845_p2 = (grp_fu_142_p2 & and_ln49_8_fu_840_p2);

assign and_ln49_fu_416_p2 = (or_ln49_fu_392_p2 & or_ln49_1_fu_410_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign bitcast_ln47_1_fu_163_p1 = e_p2_x_read_reg_893;

assign bitcast_ln47_2_fu_446_p1 = p_a_reg_950;

assign bitcast_ln47_3_fu_463_p1 = p_x_read_reg_943_pp0_iter1_reg;

assign bitcast_ln47_4_fu_510_p1 = p_a_1_reg_956;

assign bitcast_ln47_fu_146_p1 = e_p1_x_read_reg_920;

assign bitcast_ln48_1_fu_263_p1 = e_p2_y_read_reg_884;

assign bitcast_ln48_2_fu_539_p1 = p_a_2_reg_962;

assign bitcast_ln48_3_fu_556_p1 = p_y_read_reg_936_pp0_iter1_reg;

assign bitcast_ln48_fu_246_p1 = e_p1_y_read_reg_911;

assign bitcast_ln49_1_fu_363_p1 = e_p2_z_read_reg_875;

assign bitcast_ln49_2_fu_603_p1 = p_a_5_reg_980;

assign bitcast_ln49_3_fu_620_p1 = p_z_read_reg_929_pp0_iter1_reg;

assign bitcast_ln49_4_fu_667_p1 = p_a_4_reg_974;

assign bitcast_ln49_5_fu_696_p1 = p_a_3_reg_968;

assign bitcast_ln49_fu_346_p1 = e_p1_z_read_reg_902;

assign icmp_ln47_1_fu_186_p2 = ((trunc_ln47_fu_159_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_2_fu_198_p2 = ((tmp_1_fu_166_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_3_fu_204_p2 = ((trunc_ln47_1_fu_176_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_4_fu_480_p2 = ((tmp_3_fu_449_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_5_fu_486_p2 = ((trunc_ln47_2_fu_459_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_6_fu_492_p2 = ((tmp_4_fu_466_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_7_fu_498_p2 = ((trunc_ln47_3_fu_476_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_8_fu_527_p2 = ((tmp_9_fu_513_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_9_fu_533_p2 = ((trunc_ln47_4_fu_523_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_180_p2 = ((tmp_fu_149_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln48_1_fu_286_p2 = ((trunc_ln48_fu_259_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln48_2_fu_298_p2 = ((tmp_7_fu_266_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln48_3_fu_304_p2 = ((trunc_ln48_1_fu_276_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln48_4_fu_573_p2 = ((tmp_11_fu_542_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln48_5_fu_579_p2 = ((trunc_ln48_2_fu_552_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln48_6_fu_585_p2 = ((tmp_12_fu_559_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln48_7_fu_591_p2 = ((trunc_ln48_3_fu_569_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_280_p2 = ((tmp_6_fu_249_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_10_fu_713_p2 = ((tmp_24_fu_699_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_11_fu_719_p2 = ((trunc_ln49_5_fu_709_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_386_p2 = ((trunc_ln49_fu_359_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_2_fu_398_p2 = ((tmp_16_fu_366_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_3_fu_404_p2 = ((trunc_ln49_1_fu_376_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_4_fu_637_p2 = ((tmp_19_fu_606_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_5_fu_643_p2 = ((trunc_ln49_2_fu_616_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_6_fu_649_p2 = ((tmp_20_fu_623_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_7_fu_655_p2 = ((trunc_ln49_3_fu_633_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_8_fu_684_p2 = ((tmp_22_fu_670_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_9_fu_690_p2 = ((trunc_ln49_4_fu_680_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_380_p2 = ((tmp_15_fu_349_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln47_1_fu_210_p2 = (icmp_ln47_3_fu_204_p2 | icmp_ln47_2_fu_198_p2);

assign or_ln47_2_fu_725_p2 = (icmp_ln47_5_reg_991 | icmp_ln47_4_reg_986);

assign or_ln47_3_fu_504_p2 = (icmp_ln47_7_fu_498_p2 | icmp_ln47_6_fu_492_p2);

assign or_ln47_4_fu_740_p2 = (icmp_ln47_9_reg_1007 | icmp_ln47_8_reg_1002);

assign or_ln47_fu_192_p2 = (icmp_ln47_fu_180_p2 | icmp_ln47_1_fu_186_p2);

assign or_ln48_1_fu_310_p2 = (icmp_ln48_3_fu_304_p2 | icmp_ln48_2_fu_298_p2);

assign or_ln48_2_fu_755_p2 = (icmp_ln48_5_reg_1017 | icmp_ln48_4_reg_1012);

assign or_ln48_3_fu_597_p2 = (icmp_ln48_7_fu_591_p2 | icmp_ln48_6_fu_585_p2);

assign or_ln48_4_fu_803_p2 = (xor_ln47_fu_797_p2 | and_ln48_3_fu_764_p2);

assign or_ln48_5_fu_809_p2 = (xor_ln48_fu_770_p2 | xor_ln47_fu_797_p2);

assign or_ln48_fu_292_p2 = (icmp_ln48_fu_280_p2 | icmp_ln48_1_fu_286_p2);

assign or_ln49_1_fu_410_p2 = (icmp_ln49_3_fu_404_p2 | icmp_ln49_2_fu_398_p2);

assign or_ln49_2_fu_776_p2 = (icmp_ln49_5_reg_1033 | icmp_ln49_4_reg_1028);

assign or_ln49_3_fu_661_p2 = (icmp_ln49_7_fu_655_p2 | icmp_ln49_6_fu_649_p2);

assign or_ln49_4_fu_815_p2 = (icmp_ln49_9_reg_1049 | icmp_ln49_8_reg_1044);

assign or_ln49_5_fu_836_p2 = (icmp_ln49_11_reg_1059 | icmp_ln49_10_reg_1054);

assign or_ln49_6_fu_857_p2 = (or_ln48_5_fu_809_p2 | and_ln49_10_fu_851_p2);

assign or_ln49_fu_392_p2 = (icmp_ln49_fu_380_p2 | icmp_ln49_1_fu_386_p2);

assign p_a_1_fu_240_p3 = ((and_ln47_4_fu_234_p2[0:0] === 1'b1) ? e_p1_x_read_reg_920 : e_p2_x_read_reg_893);

assign p_a_2_fu_328_p3 = ((and_ln48_1_fu_322_p2[0:0] === 1'b1) ? e_p1_y_read_reg_911 : e_p2_y_read_reg_884);

assign p_a_3_fu_340_p3 = ((and_ln48_4_fu_334_p2[0:0] === 1'b1) ? e_p1_y_read_reg_911 : e_p2_y_read_reg_884);

assign p_a_4_fu_428_p3 = ((and_ln49_1_fu_422_p2[0:0] === 1'b1) ? e_p1_z_read_reg_902 : e_p2_z_read_reg_875);

assign p_a_5_fu_440_p3 = ((and_ln49_2_fu_434_p2[0:0] === 1'b1) ? e_p1_z_read_reg_902 : e_p2_z_read_reg_875);

assign p_a_fu_228_p3 = ((and_ln47_1_fu_222_p2[0:0] === 1'b1) ? e_p1_x_read_reg_920 : e_p2_x_read_reg_893);

assign tmp_11_fu_542_p4 = {{bitcast_ln48_2_fu_539_p1[30:23]}};

assign tmp_12_fu_559_p4 = {{bitcast_ln48_3_fu_556_p1[30:23]}};

assign tmp_15_fu_349_p4 = {{bitcast_ln49_fu_346_p1[30:23]}};

assign tmp_16_fu_366_p4 = {{bitcast_ln49_1_fu_363_p1[30:23]}};

assign tmp_19_fu_606_p4 = {{bitcast_ln49_2_fu_603_p1[30:23]}};

assign tmp_1_fu_166_p4 = {{bitcast_ln47_1_fu_163_p1[30:23]}};

assign tmp_20_fu_623_p4 = {{bitcast_ln49_3_fu_620_p1[30:23]}};

assign tmp_22_fu_670_p4 = {{bitcast_ln49_4_fu_667_p1[30:23]}};

assign tmp_24_fu_699_p4 = {{bitcast_ln49_5_fu_696_p1[30:23]}};

assign tmp_3_fu_449_p4 = {{bitcast_ln47_2_fu_446_p1[30:23]}};

assign tmp_4_fu_466_p4 = {{bitcast_ln47_3_fu_463_p1[30:23]}};

assign tmp_6_fu_249_p4 = {{bitcast_ln48_fu_246_p1[30:23]}};

assign tmp_7_fu_266_p4 = {{bitcast_ln48_1_fu_263_p1[30:23]}};

assign tmp_9_fu_513_p4 = {{bitcast_ln47_4_fu_510_p1[30:23]}};

assign tmp_fu_149_p4 = {{bitcast_ln47_fu_146_p1[30:23]}};

assign trunc_ln47_1_fu_176_p1 = bitcast_ln47_1_fu_163_p1[22:0];

assign trunc_ln47_2_fu_459_p1 = bitcast_ln47_2_fu_446_p1[22:0];

assign trunc_ln47_3_fu_476_p1 = bitcast_ln47_3_fu_463_p1[22:0];

assign trunc_ln47_4_fu_523_p1 = bitcast_ln47_4_fu_510_p1[22:0];

assign trunc_ln47_fu_159_p1 = bitcast_ln47_fu_146_p1[22:0];

assign trunc_ln48_1_fu_276_p1 = bitcast_ln48_1_fu_263_p1[22:0];

assign trunc_ln48_2_fu_552_p1 = bitcast_ln48_2_fu_539_p1[22:0];

assign trunc_ln48_3_fu_569_p1 = bitcast_ln48_3_fu_556_p1[22:0];

assign trunc_ln48_fu_259_p1 = bitcast_ln48_fu_246_p1[22:0];

assign trunc_ln49_1_fu_376_p1 = bitcast_ln49_1_fu_363_p1[22:0];

assign trunc_ln49_2_fu_616_p1 = bitcast_ln49_2_fu_603_p1[22:0];

assign trunc_ln49_3_fu_633_p1 = bitcast_ln49_3_fu_620_p1[22:0];

assign trunc_ln49_4_fu_680_p1 = bitcast_ln49_4_fu_667_p1[22:0];

assign trunc_ln49_5_fu_709_p1 = bitcast_ln49_5_fu_696_p1[22:0];

assign trunc_ln49_fu_359_p1 = bitcast_ln49_fu_346_p1[22:0];

assign xor_ln47_fu_797_p2 = (1'd1 ^ and_ln47_7_fu_791_p2);

assign xor_ln48_fu_770_p2 = (1'd1 ^ and_ln48_3_fu_764_p2);

endmodule //pointOnSegment
