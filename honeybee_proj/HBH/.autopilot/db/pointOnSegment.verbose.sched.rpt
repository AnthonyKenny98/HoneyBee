

================================================================
== Vivado HLS Report for 'pointOnSegment'
================================================================
* Date:           Mon Mar 30 02:47:38 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        honeybee_proj
* Solution:       HBH
* Product family: zynq
* Target device:  xc7z030i-fbg484-2L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.398 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+----------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline |
    |   min   |   max   |    min    |    max    | min | max |   Type   |
    +---------+---------+-----------+-----------+-----+-----+----------+
    |        3|        3| 30.000 ns | 30.000 ns |    1|    1| function |
    +---------+---------+-----------+-----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.19>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%e_p2_z_read = call float @_ssdm_op_Read.ap_auto.float(float %e_p2_z)" [src/honeybee.c:47]   --->   Operation 5 'read' 'e_p2_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%e_p2_y_read = call float @_ssdm_op_Read.ap_auto.float(float %e_p2_y)" [src/honeybee.c:47]   --->   Operation 6 'read' 'e_p2_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%e_p2_x_read = call float @_ssdm_op_Read.ap_auto.float(float %e_p2_x)" [src/honeybee.c:47]   --->   Operation 7 'read' 'e_p2_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%e_p1_z_read = call float @_ssdm_op_Read.ap_auto.float(float %e_p1_z)" [src/honeybee.c:47]   --->   Operation 8 'read' 'e_p1_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%e_p1_y_read = call float @_ssdm_op_Read.ap_auto.float(float %e_p1_y)" [src/honeybee.c:47]   --->   Operation 9 'read' 'e_p1_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%e_p1_x_read = call float @_ssdm_op_Read.ap_auto.float(float %e_p1_x)" [src/honeybee.c:47]   --->   Operation 10 'read' 'e_p1_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_z_read = call float @_ssdm_op_Read.ap_auto.float(float %p_z)" [src/honeybee.c:47]   --->   Operation 11 'read' 'p_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_y_read = call float @_ssdm_op_Read.ap_auto.float(float %p_y)" [src/honeybee.c:47]   --->   Operation 12 'read' 'p_y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_x_read = call float @_ssdm_op_Read.ap_auto.float(float %p_x)" [src/honeybee.c:47]   --->   Operation 13 'read' 'p_x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [2/2] (4.19ns)   --->   "%tmp_2 = fcmp olt float %e_p1_x_read, %e_p2_x_read" [src/honeybee.c:47]   --->   Operation 14 'fcmp' 'tmp_2' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [2/2] (4.19ns)   --->   "%tmp_8 = fcmp ogt float %e_p1_x_read, %e_p2_x_read" [src/honeybee.c:47]   --->   Operation 15 'fcmp' 'tmp_8' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [2/2] (4.19ns)   --->   "%tmp_10 = fcmp olt float %e_p1_y_read, %e_p2_y_read" [src/honeybee.c:48]   --->   Operation 16 'fcmp' 'tmp_10' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [2/2] (4.19ns)   --->   "%tmp_14 = fcmp ogt float %e_p1_y_read, %e_p2_y_read" [src/honeybee.c:48]   --->   Operation 17 'fcmp' 'tmp_14' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [2/2] (4.19ns)   --->   "%tmp_17 = fcmp olt float %e_p1_z_read, %e_p2_z_read" [src/honeybee.c:49]   --->   Operation 18 'fcmp' 'tmp_17' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [2/2] (4.19ns)   --->   "%tmp_18 = fcmp ogt float %e_p1_z_read, %e_p2_z_read" [src/honeybee.c:49]   --->   Operation 19 'fcmp' 'tmp_18' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 4.99>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%bitcast_ln47 = bitcast float %e_p1_x_read to i32" [src/honeybee.c:47]   --->   Operation 20 'bitcast' 'bitcast_ln47' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln47, i32 23, i32 30)" [src/honeybee.c:47]   --->   Operation 21 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln47 = trunc i32 %bitcast_ln47 to i23" [src/honeybee.c:47]   --->   Operation 22 'trunc' 'trunc_ln47' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%bitcast_ln47_1 = bitcast float %e_p2_x_read to i32" [src/honeybee.c:47]   --->   Operation 23 'bitcast' 'bitcast_ln47_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln47_1, i32 23, i32 30)" [src/honeybee.c:47]   --->   Operation 24 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln47_1 = trunc i32 %bitcast_ln47_1 to i23" [src/honeybee.c:47]   --->   Operation 25 'trunc' 'trunc_ln47_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.31ns)   --->   "%icmp_ln47 = icmp ne i8 %tmp, -1" [src/honeybee.c:47]   --->   Operation 26 'icmp' 'icmp_ln47' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (2.02ns)   --->   "%icmp_ln47_1 = icmp eq i23 %trunc_ln47, 0" [src/honeybee.c:47]   --->   Operation 27 'icmp' 'icmp_ln47_1' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node and_ln47)   --->   "%or_ln47 = or i1 %icmp_ln47_1, %icmp_ln47" [src/honeybee.c:47]   --->   Operation 28 'or' 'or_ln47' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (1.31ns)   --->   "%icmp_ln47_2 = icmp ne i8 %tmp_1, -1" [src/honeybee.c:47]   --->   Operation 29 'icmp' 'icmp_ln47_2' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (2.02ns)   --->   "%icmp_ln47_3 = icmp eq i23 %trunc_ln47_1, 0" [src/honeybee.c:47]   --->   Operation 30 'icmp' 'icmp_ln47_3' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node and_ln47)   --->   "%or_ln47_1 = or i1 %icmp_ln47_3, %icmp_ln47_2" [src/honeybee.c:47]   --->   Operation 31 'or' 'or_ln47_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln47 = and i1 %or_ln47, %or_ln47_1" [src/honeybee.c:47]   --->   Operation 32 'and' 'and_ln47' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/2] (4.19ns)   --->   "%tmp_2 = fcmp olt float %e_p1_x_read, %e_p2_x_read" [src/honeybee.c:47]   --->   Operation 33 'fcmp' 'tmp_2' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node p_a)   --->   "%and_ln47_1 = and i1 %and_ln47, %tmp_2" [src/honeybee.c:47]   --->   Operation 34 'and' 'and_ln47_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.80ns) (out node of the LUT)   --->   "%p_a = select i1 %and_ln47_1, float %e_p1_x_read, float %e_p2_x_read" [src/honeybee.c:47]   --->   Operation 35 'select' 'p_a' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/2] (4.19ns)   --->   "%tmp_8 = fcmp ogt float %e_p1_x_read, %e_p2_x_read" [src/honeybee.c:47]   --->   Operation 36 'fcmp' 'tmp_8' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node p_a_1)   --->   "%and_ln47_4 = and i1 %and_ln47, %tmp_8" [src/honeybee.c:47]   --->   Operation 37 'and' 'and_ln47_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.80ns) (out node of the LUT)   --->   "%p_a_1 = select i1 %and_ln47_4, float %e_p1_x_read, float %e_p2_x_read" [src/honeybee.c:47]   --->   Operation 38 'select' 'p_a_1' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%bitcast_ln48 = bitcast float %e_p1_y_read to i32" [src/honeybee.c:48]   --->   Operation 39 'bitcast' 'bitcast_ln48' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln48, i32 23, i32 30)" [src/honeybee.c:48]   --->   Operation 40 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln48 = trunc i32 %bitcast_ln48 to i23" [src/honeybee.c:48]   --->   Operation 41 'trunc' 'trunc_ln48' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%bitcast_ln48_1 = bitcast float %e_p2_y_read to i32" [src/honeybee.c:48]   --->   Operation 42 'bitcast' 'bitcast_ln48_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln48_1, i32 23, i32 30)" [src/honeybee.c:48]   --->   Operation 43 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln48_1 = trunc i32 %bitcast_ln48_1 to i23" [src/honeybee.c:48]   --->   Operation 44 'trunc' 'trunc_ln48_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.31ns)   --->   "%icmp_ln48 = icmp ne i8 %tmp_6, -1" [src/honeybee.c:48]   --->   Operation 45 'icmp' 'icmp_ln48' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (2.02ns)   --->   "%icmp_ln48_1 = icmp eq i23 %trunc_ln48, 0" [src/honeybee.c:48]   --->   Operation 46 'icmp' 'icmp_ln48_1' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node and_ln48)   --->   "%or_ln48 = or i1 %icmp_ln48_1, %icmp_ln48" [src/honeybee.c:48]   --->   Operation 47 'or' 'or_ln48' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (1.31ns)   --->   "%icmp_ln48_2 = icmp ne i8 %tmp_7, -1" [src/honeybee.c:48]   --->   Operation 48 'icmp' 'icmp_ln48_2' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (2.02ns)   --->   "%icmp_ln48_3 = icmp eq i23 %trunc_ln48_1, 0" [src/honeybee.c:48]   --->   Operation 49 'icmp' 'icmp_ln48_3' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node and_ln48)   --->   "%or_ln48_1 = or i1 %icmp_ln48_3, %icmp_ln48_2" [src/honeybee.c:48]   --->   Operation 50 'or' 'or_ln48_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln48 = and i1 %or_ln48, %or_ln48_1" [src/honeybee.c:48]   --->   Operation 51 'and' 'and_ln48' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/2] (4.19ns)   --->   "%tmp_10 = fcmp olt float %e_p1_y_read, %e_p2_y_read" [src/honeybee.c:48]   --->   Operation 52 'fcmp' 'tmp_10' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node p_a_2)   --->   "%and_ln48_1 = and i1 %and_ln48, %tmp_10" [src/honeybee.c:48]   --->   Operation 53 'and' 'and_ln48_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.80ns) (out node of the LUT)   --->   "%p_a_2 = select i1 %and_ln48_1, float %e_p1_y_read, float %e_p2_y_read" [src/honeybee.c:48]   --->   Operation 54 'select' 'p_a_2' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/2] (4.19ns)   --->   "%tmp_14 = fcmp ogt float %e_p1_y_read, %e_p2_y_read" [src/honeybee.c:48]   --->   Operation 55 'fcmp' 'tmp_14' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node p_a_3)   --->   "%and_ln48_4 = and i1 %and_ln48, %tmp_14" [src/honeybee.c:48]   --->   Operation 56 'and' 'and_ln48_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.80ns) (out node of the LUT)   --->   "%p_a_3 = select i1 %and_ln48_4, float %e_p1_y_read, float %e_p2_y_read" [src/honeybee.c:48]   --->   Operation 57 'select' 'p_a_3' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%bitcast_ln49 = bitcast float %e_p1_z_read to i32" [src/honeybee.c:49]   --->   Operation 58 'bitcast' 'bitcast_ln49' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln49, i32 23, i32 30)" [src/honeybee.c:49]   --->   Operation 59 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i32 %bitcast_ln49 to i23" [src/honeybee.c:49]   --->   Operation 60 'trunc' 'trunc_ln49' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%bitcast_ln49_1 = bitcast float %e_p2_z_read to i32" [src/honeybee.c:49]   --->   Operation 61 'bitcast' 'bitcast_ln49_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_16 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln49_1, i32 23, i32 30)" [src/honeybee.c:49]   --->   Operation 62 'partselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln49_1 = trunc i32 %bitcast_ln49_1 to i23" [src/honeybee.c:49]   --->   Operation 63 'trunc' 'trunc_ln49_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.31ns)   --->   "%icmp_ln49 = icmp ne i8 %tmp_15, -1" [src/honeybee.c:49]   --->   Operation 64 'icmp' 'icmp_ln49' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (2.02ns)   --->   "%icmp_ln49_1 = icmp eq i23 %trunc_ln49, 0" [src/honeybee.c:49]   --->   Operation 65 'icmp' 'icmp_ln49_1' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node and_ln49)   --->   "%or_ln49 = or i1 %icmp_ln49_1, %icmp_ln49" [src/honeybee.c:49]   --->   Operation 66 'or' 'or_ln49' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (1.31ns)   --->   "%icmp_ln49_2 = icmp ne i8 %tmp_16, -1" [src/honeybee.c:49]   --->   Operation 67 'icmp' 'icmp_ln49_2' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (2.02ns)   --->   "%icmp_ln49_3 = icmp eq i23 %trunc_ln49_1, 0" [src/honeybee.c:49]   --->   Operation 68 'icmp' 'icmp_ln49_3' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node and_ln49)   --->   "%or_ln49_1 = or i1 %icmp_ln49_3, %icmp_ln49_2" [src/honeybee.c:49]   --->   Operation 69 'or' 'or_ln49_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln49 = and i1 %or_ln49, %or_ln49_1" [src/honeybee.c:49]   --->   Operation 70 'and' 'and_ln49' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/2] (4.19ns)   --->   "%tmp_17 = fcmp olt float %e_p1_z_read, %e_p2_z_read" [src/honeybee.c:49]   --->   Operation 71 'fcmp' 'tmp_17' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node p_a_4)   --->   "%and_ln49_1 = and i1 %and_ln49, %tmp_17" [src/honeybee.c:49]   --->   Operation 72 'and' 'and_ln49_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.80ns) (out node of the LUT)   --->   "%p_a_4 = select i1 %and_ln49_1, float %e_p1_z_read, float %e_p2_z_read" [src/honeybee.c:49]   --->   Operation 73 'select' 'p_a_4' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/2] (4.19ns)   --->   "%tmp_18 = fcmp ogt float %e_p1_z_read, %e_p2_z_read" [src/honeybee.c:49]   --->   Operation 74 'fcmp' 'tmp_18' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node p_a_5)   --->   "%and_ln49_2 = and i1 %and_ln49, %tmp_18" [src/honeybee.c:49]   --->   Operation 75 'and' 'and_ln49_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.80ns) (out node of the LUT)   --->   "%p_a_5 = select i1 %and_ln49_2, float %e_p1_z_read, float %e_p2_z_read" [src/honeybee.c:49]   --->   Operation 76 'select' 'p_a_5' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 4.19>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%bitcast_ln47_2 = bitcast float %p_a to i32" [src/honeybee.c:47]   --->   Operation 77 'bitcast' 'bitcast_ln47_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln47_2, i32 23, i32 30)" [src/honeybee.c:47]   --->   Operation 78 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%trunc_ln47_2 = trunc i32 %bitcast_ln47_2 to i23" [src/honeybee.c:47]   --->   Operation 79 'trunc' 'trunc_ln47_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%bitcast_ln47_3 = bitcast float %p_x_read to i32" [src/honeybee.c:47]   --->   Operation 80 'bitcast' 'bitcast_ln47_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln47_3, i32 23, i32 30)" [src/honeybee.c:47]   --->   Operation 81 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln47_3 = trunc i32 %bitcast_ln47_3 to i23" [src/honeybee.c:47]   --->   Operation 82 'trunc' 'trunc_ln47_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (1.31ns)   --->   "%icmp_ln47_4 = icmp ne i8 %tmp_3, -1" [src/honeybee.c:47]   --->   Operation 83 'icmp' 'icmp_ln47_4' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (2.02ns)   --->   "%icmp_ln47_5 = icmp eq i23 %trunc_ln47_2, 0" [src/honeybee.c:47]   --->   Operation 84 'icmp' 'icmp_ln47_5' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (1.31ns)   --->   "%icmp_ln47_6 = icmp ne i8 %tmp_4, -1" [src/honeybee.c:47]   --->   Operation 85 'icmp' 'icmp_ln47_6' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (2.02ns)   --->   "%icmp_ln47_7 = icmp eq i23 %trunc_ln47_3, 0" [src/honeybee.c:47]   --->   Operation 86 'icmp' 'icmp_ln47_7' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.80ns)   --->   "%or_ln47_3 = or i1 %icmp_ln47_7, %icmp_ln47_6" [src/honeybee.c:47]   --->   Operation 87 'or' 'or_ln47_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [2/2] (4.19ns)   --->   "%tmp_5 = fcmp ole float %p_a, %p_x_read" [src/honeybee.c:47]   --->   Operation 88 'fcmp' 'tmp_5' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%bitcast_ln47_4 = bitcast float %p_a_1 to i32" [src/honeybee.c:47]   --->   Operation 89 'bitcast' 'bitcast_ln47_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln47_4, i32 23, i32 30)" [src/honeybee.c:47]   --->   Operation 90 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%trunc_ln47_4 = trunc i32 %bitcast_ln47_4 to i23" [src/honeybee.c:47]   --->   Operation 91 'trunc' 'trunc_ln47_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (1.31ns)   --->   "%icmp_ln47_8 = icmp ne i8 %tmp_9, -1" [src/honeybee.c:47]   --->   Operation 92 'icmp' 'icmp_ln47_8' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (2.02ns)   --->   "%icmp_ln47_9 = icmp eq i23 %trunc_ln47_4, 0" [src/honeybee.c:47]   --->   Operation 93 'icmp' 'icmp_ln47_9' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [2/2] (4.19ns)   --->   "%tmp_s = fcmp oge float %p_a_1, %p_x_read" [src/honeybee.c:47]   --->   Operation 94 'fcmp' 'tmp_s' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%bitcast_ln48_2 = bitcast float %p_a_2 to i32" [src/honeybee.c:48]   --->   Operation 95 'bitcast' 'bitcast_ln48_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln48_2, i32 23, i32 30)" [src/honeybee.c:48]   --->   Operation 96 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln48_2 = trunc i32 %bitcast_ln48_2 to i23" [src/honeybee.c:48]   --->   Operation 97 'trunc' 'trunc_ln48_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%bitcast_ln48_3 = bitcast float %p_y_read to i32" [src/honeybee.c:48]   --->   Operation 98 'bitcast' 'bitcast_ln48_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln48_3, i32 23, i32 30)" [src/honeybee.c:48]   --->   Operation 99 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%trunc_ln48_3 = trunc i32 %bitcast_ln48_3 to i23" [src/honeybee.c:48]   --->   Operation 100 'trunc' 'trunc_ln48_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (1.31ns)   --->   "%icmp_ln48_4 = icmp ne i8 %tmp_11, -1" [src/honeybee.c:48]   --->   Operation 101 'icmp' 'icmp_ln48_4' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (2.02ns)   --->   "%icmp_ln48_5 = icmp eq i23 %trunc_ln48_2, 0" [src/honeybee.c:48]   --->   Operation 102 'icmp' 'icmp_ln48_5' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (1.31ns)   --->   "%icmp_ln48_6 = icmp ne i8 %tmp_12, -1" [src/honeybee.c:48]   --->   Operation 103 'icmp' 'icmp_ln48_6' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (2.02ns)   --->   "%icmp_ln48_7 = icmp eq i23 %trunc_ln48_3, 0" [src/honeybee.c:48]   --->   Operation 104 'icmp' 'icmp_ln48_7' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 105 [1/1] (0.80ns)   --->   "%or_ln48_3 = or i1 %icmp_ln48_7, %icmp_ln48_6" [src/honeybee.c:48]   --->   Operation 105 'or' 'or_ln48_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 106 [2/2] (4.19ns)   --->   "%tmp_13 = fcmp ole float %p_a_2, %p_y_read" [src/honeybee.c:48]   --->   Operation 106 'fcmp' 'tmp_13' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%bitcast_ln49_2 = bitcast float %p_a_5 to i32" [src/honeybee.c:49]   --->   Operation 107 'bitcast' 'bitcast_ln49_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_19 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln49_2, i32 23, i32 30)" [src/honeybee.c:49]   --->   Operation 108 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%trunc_ln49_2 = trunc i32 %bitcast_ln49_2 to i23" [src/honeybee.c:49]   --->   Operation 109 'trunc' 'trunc_ln49_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%bitcast_ln49_3 = bitcast float %p_z_read to i32" [src/honeybee.c:49]   --->   Operation 110 'bitcast' 'bitcast_ln49_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln49_3, i32 23, i32 30)" [src/honeybee.c:49]   --->   Operation 111 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln49_3 = trunc i32 %bitcast_ln49_3 to i23" [src/honeybee.c:49]   --->   Operation 112 'trunc' 'trunc_ln49_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (1.31ns)   --->   "%icmp_ln49_4 = icmp ne i8 %tmp_19, -1" [src/honeybee.c:49]   --->   Operation 113 'icmp' 'icmp_ln49_4' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 114 [1/1] (2.02ns)   --->   "%icmp_ln49_5 = icmp eq i23 %trunc_ln49_2, 0" [src/honeybee.c:49]   --->   Operation 114 'icmp' 'icmp_ln49_5' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 115 [1/1] (1.31ns)   --->   "%icmp_ln49_6 = icmp ne i8 %tmp_20, -1" [src/honeybee.c:49]   --->   Operation 115 'icmp' 'icmp_ln49_6' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (2.02ns)   --->   "%icmp_ln49_7 = icmp eq i23 %trunc_ln49_3, 0" [src/honeybee.c:49]   --->   Operation 116 'icmp' 'icmp_ln49_7' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 117 [1/1] (0.80ns)   --->   "%or_ln49_3 = or i1 %icmp_ln49_7, %icmp_ln49_6" [src/honeybee.c:49]   --->   Operation 117 'or' 'or_ln49_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 118 [2/2] (4.19ns)   --->   "%tmp_21 = fcmp oge float %p_a_5, %p_z_read" [src/honeybee.c:49]   --->   Operation 118 'fcmp' 'tmp_21' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%bitcast_ln49_4 = bitcast float %p_a_4 to i32" [src/honeybee.c:49]   --->   Operation 119 'bitcast' 'bitcast_ln49_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_22 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln49_4, i32 23, i32 30)" [src/honeybee.c:49]   --->   Operation 120 'partselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln49_4 = trunc i32 %bitcast_ln49_4 to i23" [src/honeybee.c:49]   --->   Operation 121 'trunc' 'trunc_ln49_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (1.31ns)   --->   "%icmp_ln49_8 = icmp ne i8 %tmp_22, -1" [src/honeybee.c:49]   --->   Operation 122 'icmp' 'icmp_ln49_8' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 123 [1/1] (2.02ns)   --->   "%icmp_ln49_9 = icmp eq i23 %trunc_ln49_4, 0" [src/honeybee.c:49]   --->   Operation 123 'icmp' 'icmp_ln49_9' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 124 [2/2] (4.19ns)   --->   "%tmp_23 = fcmp ole float %p_a_4, %p_z_read" [src/honeybee.c:49]   --->   Operation 124 'fcmp' 'tmp_23' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%bitcast_ln49_5 = bitcast float %p_a_3 to i32" [src/honeybee.c:49]   --->   Operation 125 'bitcast' 'bitcast_ln49_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_24 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln49_5, i32 23, i32 30)" [src/honeybee.c:49]   --->   Operation 126 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln49_5 = trunc i32 %bitcast_ln49_5 to i23" [src/honeybee.c:49]   --->   Operation 127 'trunc' 'trunc_ln49_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 128 [1/1] (1.31ns)   --->   "%icmp_ln49_10 = icmp ne i8 %tmp_24, -1" [src/honeybee.c:49]   --->   Operation 128 'icmp' 'icmp_ln49_10' <Predicate = true> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 129 [1/1] (2.02ns)   --->   "%icmp_ln49_11 = icmp eq i23 %trunc_ln49_5, 0" [src/honeybee.c:49]   --->   Operation 129 'icmp' 'icmp_ln49_11' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.02> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 130 [2/2] (4.19ns)   --->   "%tmp_25 = fcmp oge float %p_a_3, %p_y_read" [src/honeybee.c:49]   --->   Operation 130 'fcmp' 'tmp_25' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.39>
ST_4 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln47_7)   --->   "%or_ln47_2 = or i1 %icmp_ln47_5, %icmp_ln47_4" [src/honeybee.c:47]   --->   Operation 131 'or' 'or_ln47_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node and_ln47_7)   --->   "%and_ln47_2 = and i1 %or_ln47_2, %or_ln47_3" [src/honeybee.c:47]   --->   Operation 132 'and' 'and_ln47_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [1/2] (4.19ns)   --->   "%tmp_5 = fcmp ole float %p_a, %p_x_read" [src/honeybee.c:47]   --->   Operation 133 'fcmp' 'tmp_5' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node and_ln47_7)   --->   "%and_ln47_3 = and i1 %and_ln47_2, %tmp_5" [src/honeybee.c:47]   --->   Operation 134 'and' 'and_ln47_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node and_ln47_6)   --->   "%or_ln47_4 = or i1 %icmp_ln47_9, %icmp_ln47_8" [src/honeybee.c:47]   --->   Operation 135 'or' 'or_ln47_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node and_ln47_6)   --->   "%and_ln47_5 = and i1 %or_ln47_4, %or_ln47_3" [src/honeybee.c:47]   --->   Operation 136 'and' 'and_ln47_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 137 [1/2] (4.19ns)   --->   "%tmp_s = fcmp oge float %p_a_1, %p_x_read" [src/honeybee.c:47]   --->   Operation 137 'fcmp' 'tmp_s' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 138 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln47_6 = and i1 %and_ln47_5, %tmp_s" [src/honeybee.c:47]   --->   Operation 138 'and' 'and_ln47_6' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node and_ln48_3)   --->   "%or_ln48_2 = or i1 %icmp_ln48_5, %icmp_ln48_4" [src/honeybee.c:48]   --->   Operation 139 'or' 'or_ln48_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node and_ln48_3)   --->   "%and_ln48_2 = and i1 %or_ln48_2, %or_ln48_3" [src/honeybee.c:48]   --->   Operation 140 'and' 'and_ln48_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 141 [1/2] (4.19ns)   --->   "%tmp_13 = fcmp ole float %p_a_2, %p_y_read" [src/honeybee.c:48]   --->   Operation 141 'fcmp' 'tmp_13' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 142 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln48_3 = and i1 %and_ln48_2, %tmp_13" [src/honeybee.c:48]   --->   Operation 142 'and' 'and_ln48_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_12)   --->   "%xor_ln48 = xor i1 %and_ln48_3, true" [src/honeybee.c:48]   --->   Operation 143 'xor' 'xor_ln48' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_7)   --->   "%or_ln49_2 = or i1 %icmp_ln49_5, %icmp_ln49_4" [src/honeybee.c:49]   --->   Operation 144 'or' 'or_ln49_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_7)   --->   "%and_ln49_3 = and i1 %or_ln49_2, %or_ln49_3" [src/honeybee.c:49]   --->   Operation 145 'and' 'and_ln49_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 146 [1/2] (4.19ns)   --->   "%tmp_21 = fcmp oge float %p_a_5, %p_z_read" [src/honeybee.c:49]   --->   Operation 146 'fcmp' 'tmp_21' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_7)   --->   "%and_ln49_4 = and i1 %and_ln49_3, %tmp_21" [src/honeybee.c:49]   --->   Operation 147 'and' 'and_ln49_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 148 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln47_7 = and i1 %and_ln47_3, %and_ln47_6" [src/honeybee.c:47]   --->   Operation 148 'and' 'and_ln47_7' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 149 [1/1] (0.80ns)   --->   "%xor_ln47 = xor i1 %and_ln47_7, true" [src/honeybee.c:47]   --->   Operation 149 'xor' 'xor_ln47' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_12)   --->   "%or_ln48_4 = or i1 %and_ln48_3, %xor_ln47" [src/honeybee.c:48]   --->   Operation 150 'or' 'or_ln48_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_12)   --->   "%or_ln48_5 = or i1 %xor_ln47, %xor_ln48" [src/honeybee.c:48]   --->   Operation 151 'or' 'or_ln48_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_10)   --->   "%or_ln49_4 = or i1 %icmp_ln49_9, %icmp_ln49_8" [src/honeybee.c:49]   --->   Operation 152 'or' 'or_ln49_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_10)   --->   "%and_ln49_5 = and i1 %or_ln49_4, %or_ln49_3" [src/honeybee.c:49]   --->   Operation 153 'and' 'and_ln49_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 154 [1/2] (4.19ns)   --->   "%tmp_23 = fcmp ole float %p_a_4, %p_z_read" [src/honeybee.c:49]   --->   Operation 154 'fcmp' 'tmp_23' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_10)   --->   "%and_ln49_6 = and i1 %and_ln49_5, %tmp_23" [src/honeybee.c:49]   --->   Operation 155 'and' 'and_ln49_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 156 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln49_7 = and i1 %and_ln49_4, %and_ln47_7" [src/honeybee.c:49]   --->   Operation 156 'and' 'and_ln49_7' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_9)   --->   "%or_ln49_5 = or i1 %icmp_ln49_11, %icmp_ln49_10" [src/honeybee.c:49]   --->   Operation 157 'or' 'or_ln49_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_9)   --->   "%and_ln49_8 = and i1 %or_ln49_5, %or_ln48_3" [src/honeybee.c:49]   --->   Operation 158 'and' 'and_ln49_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 159 [1/2] (4.19ns)   --->   "%tmp_25 = fcmp oge float %p_a_3, %p_y_read" [src/honeybee.c:49]   --->   Operation 159 'fcmp' 'tmp_25' <Predicate = true> <Delay = 4.19> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 4.19> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 160 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln49_9 = and i1 %and_ln49_8, %tmp_25" [src/honeybee.c:49]   --->   Operation 160 'and' 'and_ln49_9' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 161 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln49_10 = and i1 %and_ln49_6, %and_ln49_9" [src/honeybee.c:49]   --->   Operation 161 'and' 'and_ln49_10' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_12)   --->   "%or_ln49_6 = or i1 %or_ln48_5, %and_ln49_10" [src/honeybee.c:49]   --->   Operation 162 'or' 'or_ln49_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node and_ln49_12)   --->   "%and_ln49_11 = and i1 %or_ln49_6, %or_ln48_4" [src/honeybee.c:49]   --->   Operation 163 'and' 'and_ln49_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 164 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln49_12 = and i1 %and_ln49_11, %and_ln49_7" [src/honeybee.c:49]   --->   Operation 164 'and' 'and_ln49_12' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 165 [1/1] (0.00ns)   --->   "ret i1 %and_ln49_12" [src/honeybee.c:51]   --->   Operation 165 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 4.2ns
The critical path consists of the following:
	wire read on port 'e_p2_z' (src/honeybee.c:47) [10]  (0 ns)
	'fcmp' operation ('tmp_17', src/honeybee.c:49) [110]  (4.2 ns)

 <State 2>: 5ns
The critical path consists of the following:
	'fcmp' operation ('tmp_2', src/honeybee.c:47) [32]  (4.2 ns)
	'and' operation ('and_ln47_1', src/honeybee.c:47) [33]  (0 ns)
	'select' operation ('_a', src/honeybee.c:47) [34]  (0.8 ns)

 <State 3>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_5', src/honeybee.c:47) [48]  (4.2 ns)

 <State 4>: 7.4ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', src/honeybee.c:47) [60]  (4.2 ns)
	'and' operation ('and_ln47_6', src/honeybee.c:47) [61]  (0.8 ns)
	'and' operation ('and_ln47_7', src/honeybee.c:47) [131]  (0.8 ns)
	'and' operation ('and_ln49_7', src/honeybee.c:49) [144]  (0.8 ns)
	'and' operation ('and_ln49_12', src/honeybee.c:49) [157]  (0.8 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
